/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.1.0
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */


#ifndef SWIGPYTHON
#define SWIGPYTHON
#endif

#define SWIG_PYTHON_DIRECTOR_NO_VTABLE


#ifdef __cplusplus
/* SwigValueWrapper is described in swig.swg */
template<typename T> class SwigValueWrapper {
  struct SwigMovePointer {
    T *ptr;
    SwigMovePointer(T *p) : ptr(p) { }
    ~SwigMovePointer() { delete ptr; }
    SwigMovePointer& operator=(SwigMovePointer& rhs) { T* oldptr = ptr; ptr = 0; delete oldptr; ptr = rhs.ptr; rhs.ptr = 0; return *this; }
  } pointer;
  SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
  SwigValueWrapper(const SwigValueWrapper<T>& rhs);
public:
  SwigValueWrapper() : pointer(0) { }
  SwigValueWrapper& operator=(const T& t) { SwigMovePointer tmp(new T(t)); pointer = tmp; return *this; }
  operator T&() const { return *pointer.ptr; }
  T *operator&() { return pointer.ptr; }
};

template <typename T> T SwigValueInit() {
  return T();
}
#endif

/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#  define SWIGTEMPLATEDISAMBIGUATOR template
# elif defined(__HP_aCC)
/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */
/* If we find a maximum version that requires this, the test would be __HP_aCC <= 35500 for A.03.55 */
#  define SWIGTEMPLATEDISAMBIGUATOR template
# else
#  define SWIGTEMPLATEDISAMBIGUATOR
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__))
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__))
# else
#   define SWIGUNUSED
# endif
#endif

#ifndef SWIG_MSC_UNSUPPRESS_4505
# if defined(_MSC_VER)
#   pragma warning(disable : 4505) /* unreferenced local function has been removed */
# endif
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if defined(__GNUC__)
#  if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#    ifndef GCC_HASCLASSVISIBILITY
#      define GCC_HASCLASSVISIBILITY
#    endif
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */
#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_SCL_SECURE_NO_DEPRECATE)
# define _SCL_SECURE_NO_DEPRECATE
#endif

/* Deal with Apple's deprecated 'AssertMacros.h' from Carbon-framework */
#if defined(__APPLE__) && !defined(__ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES)
# define __ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES 0
#endif

/* Intel's compiler complains if a variable which was never initialised is
 * cast to void, which is a common idiom which we use to indicate that we
 * are aware a variable isn't used.  So we just silence that warning.
 * See: https://github.com/swig/swig/issues/192 for more discussion.
 */
#ifdef __INTEL_COMPILER
# pragma warning disable 592
#endif


#if defined(__GNUC__) && defined(_WIN32) && !defined(SWIG_PYTHON_NO_HYPOT_WORKAROUND)
/* Workaround for '::hypot' has not been declared', see https://bugs.python.org/issue11566 */
# include <math.h>
#endif

#if defined(_MSC_VER) && _MSC_VER >= 1930
/* Workaround what seems to be a bug in the Python headers with MSVC 2022.
 * https://github.com/swig/swig/issues/2090
 */
# include <corecrt.h>
#endif

#if defined(_DEBUG) && defined(SWIG_PYTHON_INTERPRETER_NO_DEBUG)
/* Use debug wrappers with the Python release dll */
# undef _DEBUG
# include <Python.h>
# define _DEBUG 1
#else
# include <Python.h>
#endif

/* -----------------------------------------------------------------------------
 * swigrun.swg
 *
 * This file contains generic C API SWIG runtime support for pointer
 * type checking.
 * ----------------------------------------------------------------------------- */

/* This should only be incremented when either the layout of swig_type_info changes,
   or for whatever reason, the runtime changes incompatibly */
#define SWIG_RUNTIME_VERSION "4"

/* define SWIG_TYPE_TABLE_NAME as "SWIG_TYPE_TABLE" */
#ifdef SWIG_TYPE_TABLE
# define SWIG_QUOTE_STRING(x) #x
# define SWIG_EXPAND_AND_QUOTE_STRING(x) SWIG_QUOTE_STRING(x)
# define SWIG_TYPE_TABLE_NAME SWIG_EXPAND_AND_QUOTE_STRING(SWIG_TYPE_TABLE)
#else
# define SWIG_TYPE_TABLE_NAME
#endif

/*
  You can use the SWIGRUNTIME and SWIGRUNTIMEINLINE macros for
  creating a static or dynamic library from the SWIG runtime code.
  In 99.9% of the cases, SWIG just needs to declare them as 'static'.

  But only do this if strictly necessary, ie, if you have problems
  with your compiler or suchlike.
*/

#ifndef SWIGRUNTIME
# define SWIGRUNTIME SWIGINTERN
#endif

#ifndef SWIGRUNTIMEINLINE
# define SWIGRUNTIMEINLINE SWIGRUNTIME SWIGINLINE
#endif

/*  Generic buffer size */
#ifndef SWIG_BUFFER_SIZE
# define SWIG_BUFFER_SIZE 1024
#endif

/* Flags for pointer conversions */
#define SWIG_POINTER_DISOWN        0x1
#define SWIG_CAST_NEW_MEMORY       0x2
#define SWIG_POINTER_NO_NULL       0x4

/* Flags for new pointer objects */
#define SWIG_POINTER_OWN           0x1


/*
   Flags/methods for returning states.

   The SWIG conversion methods, as ConvertPtr, return an integer
   that tells if the conversion was successful or not. And if not,
   an error code can be returned (see swigerrors.swg for the codes).

   Use the following macros/flags to set or process the returning
   states.

   In old versions of SWIG, code such as the following was usually written:

     if (SWIG_ConvertPtr(obj,vptr,ty.flags) != -1) {
       // success code
     } else {
       //fail code
     }

   Now you can be more explicit:

    int res = SWIG_ConvertPtr(obj,vptr,ty.flags);
    if (SWIG_IsOK(res)) {
      // success code
    } else {
      // fail code
    }

   which is the same really, but now you can also do

    Type *ptr;
    int res = SWIG_ConvertPtr(obj,(void **)(&ptr),ty.flags);
    if (SWIG_IsOK(res)) {
      // success code
      if (SWIG_IsNewObj(res) {
        ...
	delete *ptr;
      } else {
        ...
      }
    } else {
      // fail code
    }

   I.e., now SWIG_ConvertPtr can return new objects and you can
   identify the case and take care of the deallocation. Of course that
   also requires SWIG_ConvertPtr to return new result values, such as

      int SWIG_ConvertPtr(obj, ptr,...) {
        if (<obj is ok>) {
          if (<need new object>) {
            *ptr = <ptr to new allocated object>;
            return SWIG_NEWOBJ;
          } else {
            *ptr = <ptr to old object>;
            return SWIG_OLDOBJ;
          }
        } else {
          return SWIG_BADOBJ;
        }
      }

   Of course, returning the plain '0(success)/-1(fail)' still works, but you can be
   more explicit by returning SWIG_BADOBJ, SWIG_ERROR or any of the
   SWIG errors code.

   Finally, if the SWIG_CASTRANK_MODE is enabled, the result code
   allows returning the 'cast rank', for example, if you have this

       int food(double)
       int fooi(int);

   and you call

      food(1)   // cast rank '1'  (1 -> 1.0)
      fooi(1)   // cast rank '0'

   just use the SWIG_AddCast()/SWIG_CheckState()
*/

#define SWIG_OK                    (0)
#define SWIG_ERROR                 (-1)
#define SWIG_IsOK(r)               (r >= 0)
#define SWIG_ArgError(r)           ((r != SWIG_ERROR) ? r : SWIG_TypeError)

/* The CastRankLimit says how many bits are used for the cast rank */
#define SWIG_CASTRANKLIMIT         (1 << 8)
/* The NewMask denotes the object was created (using new/malloc) */
#define SWIG_NEWOBJMASK            (SWIG_CASTRANKLIMIT  << 1)
/* The TmpMask is for in/out typemaps that use temporal objects */
#define SWIG_TMPOBJMASK            (SWIG_NEWOBJMASK << 1)
/* Simple returning values */
#define SWIG_BADOBJ                (SWIG_ERROR)
#define SWIG_OLDOBJ                (SWIG_OK)
#define SWIG_NEWOBJ                (SWIG_OK | SWIG_NEWOBJMASK)
#define SWIG_TMPOBJ                (SWIG_OK | SWIG_TMPOBJMASK)
/* Check, add and del mask methods */
#define SWIG_AddNewMask(r)         (SWIG_IsOK(r) ? (r | SWIG_NEWOBJMASK) : r)
#define SWIG_DelNewMask(r)         (SWIG_IsOK(r) ? (r & ~SWIG_NEWOBJMASK) : r)
#define SWIG_IsNewObj(r)           (SWIG_IsOK(r) && (r & SWIG_NEWOBJMASK))
#define SWIG_AddTmpMask(r)         (SWIG_IsOK(r) ? (r | SWIG_TMPOBJMASK) : r)
#define SWIG_DelTmpMask(r)         (SWIG_IsOK(r) ? (r & ~SWIG_TMPOBJMASK) : r)
#define SWIG_IsTmpObj(r)           (SWIG_IsOK(r) && (r & SWIG_TMPOBJMASK))

/* Cast-Rank Mode */
#if defined(SWIG_CASTRANK_MODE)
#  ifndef SWIG_TypeRank
#    define SWIG_TypeRank             unsigned long
#  endif
#  ifndef SWIG_MAXCASTRANK            /* Default cast allowed */
#    define SWIG_MAXCASTRANK          (2)
#  endif
#  define SWIG_CASTRANKMASK          ((SWIG_CASTRANKLIMIT) -1)
#  define SWIG_CastRank(r)           (r & SWIG_CASTRANKMASK)
SWIGINTERNINLINE int SWIG_AddCast(int r) {
  return SWIG_IsOK(r) ? ((SWIG_CastRank(r) < SWIG_MAXCASTRANK) ? (r + 1) : SWIG_ERROR) : r;
}
SWIGINTERNINLINE int SWIG_CheckState(int r) {
  return SWIG_IsOK(r) ? SWIG_CastRank(r) + 1 : 0;
}
#else /* no cast-rank mode */
#  define SWIG_AddCast(r) (r)
#  define SWIG_CheckState(r) (SWIG_IsOK(r) ? 1 : 0)
#endif


#include <string.h>

#ifdef __cplusplus
extern "C" {
#endif

typedef void *(*swig_converter_func)(void *, int *);
typedef struct swig_type_info *(*swig_dycast_func)(void **);

/* Structure to store information on one type */
typedef struct swig_type_info {
  const char             *name;			/* mangled name of this type */
  const char             *str;			/* human readable name of this type */
  swig_dycast_func        dcast;		/* dynamic cast function down a hierarchy */
  struct swig_cast_info  *cast;			/* linked list of types that can cast into this type */
  void                   *clientdata;		/* language specific type data */
  int                    owndata;		/* flag if the structure owns the clientdata */
} swig_type_info;

/* Structure to store a type and conversion function used for casting */
typedef struct swig_cast_info {
  swig_type_info         *type;			/* pointer to type that is equivalent to this type */
  swig_converter_func     converter;		/* function to cast the void pointers */
  struct swig_cast_info  *next;			/* pointer to next cast in linked list */
  struct swig_cast_info  *prev;			/* pointer to the previous cast */
} swig_cast_info;

/* Structure used to store module information
 * Each module generates one structure like this, and the runtime collects
 * all of these structures and stores them in a circularly linked list.*/
typedef struct swig_module_info {
  swig_type_info         **types;		/* Array of pointers to swig_type_info structures that are in this module */
  size_t                 size;		        /* Number of types in this module */
  struct swig_module_info *next;		/* Pointer to next element in circularly linked list */
  swig_type_info         **type_initial;	/* Array of initially generated type structures */
  swig_cast_info         **cast_initial;	/* Array of initially generated casting structures */
  void                    *clientdata;		/* Language specific module data */
} swig_module_info;

/*
  Compare two type names skipping the space characters, therefore
  "char*" == "char *" and "Class<int>" == "Class<int >", etc.

  Return 0 when the two name types are equivalent, as in
  strncmp, but skipping ' '.
*/
SWIGRUNTIME int
SWIG_TypeNameComp(const char *f1, const char *l1,
		  const char *f2, const char *l2) {
  for (;(f1 != l1) && (f2 != l2); ++f1, ++f2) {
    while ((*f1 == ' ') && (f1 != l1)) ++f1;
    while ((*f2 == ' ') && (f2 != l2)) ++f2;
    if (*f1 != *f2) return (*f1 > *f2) ? 1 : -1;
  }
  return (int)((l1 - f1) - (l2 - f2));
}

/*
  Check type equivalence in a name list like <name1>|<name2>|...
  Return 0 if equal, -1 if nb < tb, 1 if nb > tb
*/
SWIGRUNTIME int
SWIG_TypeCmp(const char *nb, const char *tb) {
  int equiv = 1;
  const char* te = tb + strlen(tb);
  const char* ne = nb;
  while (equiv != 0 && *ne) {
    for (nb = ne; *ne; ++ne) {
      if (*ne == '|') break;
    }
    equiv = SWIG_TypeNameComp(nb, ne, tb, te);
    if (*ne) ++ne;
  }
  return equiv;
}

/*
  Check type equivalence in a name list like <name1>|<name2>|...
  Return 0 if not equal, 1 if equal
*/
SWIGRUNTIME int
SWIG_TypeEquiv(const char *nb, const char *tb) {
  return SWIG_TypeCmp(nb, tb) == 0 ? 1 : 0;
}

/*
  Check the typename
*/
SWIGRUNTIME swig_cast_info *
SWIG_TypeCheck(const char *c, swig_type_info *ty) {
  if (ty) {
    swig_cast_info *iter = ty->cast;
    while (iter) {
      if (strcmp(iter->type->name, c) == 0) {
        if (iter == ty->cast)
          return iter;
        /* Move iter to the top of the linked list */
        iter->prev->next = iter->next;
        if (iter->next)
          iter->next->prev = iter->prev;
        iter->next = ty->cast;
        iter->prev = 0;
        if (ty->cast) ty->cast->prev = iter;
        ty->cast = iter;
        return iter;
      }
      iter = iter->next;
    }
  }
  return 0;
}

/*
  Identical to SWIG_TypeCheck, except strcmp is replaced with a pointer comparison
*/
SWIGRUNTIME swig_cast_info *
SWIG_TypeCheckStruct(const swig_type_info *from, swig_type_info *ty) {
  if (ty) {
    swig_cast_info *iter = ty->cast;
    while (iter) {
      if (iter->type == from) {
        if (iter == ty->cast)
          return iter;
        /* Move iter to the top of the linked list */
        iter->prev->next = iter->next;
        if (iter->next)
          iter->next->prev = iter->prev;
        iter->next = ty->cast;
        iter->prev = 0;
        if (ty->cast) ty->cast->prev = iter;
        ty->cast = iter;
        return iter;
      }
      iter = iter->next;
    }
  }
  return 0;
}

/*
  Cast a pointer up an inheritance hierarchy
*/
SWIGRUNTIMEINLINE void *
SWIG_TypeCast(swig_cast_info *ty, void *ptr, int *newmemory) {
  return ((!ty) || (!ty->converter)) ? ptr : (*ty->converter)(ptr, newmemory);
}

/*
   Dynamic pointer casting. Down an inheritance hierarchy
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeDynamicCast(swig_type_info *ty, void **ptr) {
  swig_type_info *lastty = ty;
  if (!ty || !ty->dcast) return ty;
  while (ty && (ty->dcast)) {
    ty = (*ty->dcast)(ptr);
    if (ty) lastty = ty;
  }
  return lastty;
}

/*
  Return the name associated with this type
*/
SWIGRUNTIMEINLINE const char *
SWIG_TypeName(const swig_type_info *ty) {
  return ty->name;
}

/*
  Return the pretty name associated with this type,
  that is an unmangled type name in a form presentable to the user.
*/
SWIGRUNTIME const char *
SWIG_TypePrettyName(const swig_type_info *type) {
  /* The "str" field contains the equivalent pretty names of the
     type, separated by vertical-bar characters.  We choose
     to print the last name, as it is often (?) the most
     specific. */
  if (!type) return NULL;
  if (type->str != NULL) {
    const char *last_name = type->str;
    const char *s;
    for (s = type->str; *s; s++)
      if (*s == '|') last_name = s+1;
    return last_name;
  }
  else
    return type->name;
}

/*
   Set the clientdata field for a type
*/
SWIGRUNTIME void
SWIG_TypeClientData(swig_type_info *ti, void *clientdata) {
  swig_cast_info *cast = ti->cast;
  /* if (ti->clientdata == clientdata) return; */
  ti->clientdata = clientdata;

  while (cast) {
    if (!cast->converter) {
      swig_type_info *tc = cast->type;
      if (!tc->clientdata) {
	SWIG_TypeClientData(tc, clientdata);
      }
    }
    cast = cast->next;
  }
}
SWIGRUNTIME void
SWIG_TypeNewClientData(swig_type_info *ti, void *clientdata) {
  SWIG_TypeClientData(ti, clientdata);
  ti->owndata = 1;
}

/*
  Search for a swig_type_info structure only by mangled name
  Search is a O(log #types)

  We start searching at module start, and finish searching when start == end.
  Note: if start == end at the beginning of the function, we go all the way around
  the circular list.
*/
SWIGRUNTIME swig_type_info *
SWIG_MangledTypeQueryModule(swig_module_info *start,
                            swig_module_info *end,
		            const char *name) {
  swig_module_info *iter = start;
  do {
    if (iter->size) {
      size_t l = 0;
      size_t r = iter->size - 1;
      do {
	/* since l+r >= 0, we can (>> 1) instead (/ 2) */
	size_t i = (l + r) >> 1;
	const char *iname = iter->types[i]->name;
	if (iname) {
	  int compare = strcmp(name, iname);
	  if (compare == 0) {
	    return iter->types[i];
	  } else if (compare < 0) {
	    if (i) {
	      r = i - 1;
	    } else {
	      break;
	    }
	  } else if (compare > 0) {
	    l = i + 1;
	  }
	} else {
	  break; /* should never happen */
	}
      } while (l <= r);
    }
    iter = iter->next;
  } while (iter != end);
  return 0;
}

/*
  Search for a swig_type_info structure for either a mangled name or a human readable name.
  It first searches the mangled names of the types, which is a O(log #types)
  If a type is not found it then searches the human readable names, which is O(#types).

  We start searching at module start, and finish searching when start == end.
  Note: if start == end at the beginning of the function, we go all the way around
  the circular list.
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeQueryModule(swig_module_info *start,
                     swig_module_info *end,
		     const char *name) {
  /* STEP 1: Search the name field using binary search */
  swig_type_info *ret = SWIG_MangledTypeQueryModule(start, end, name);
  if (ret) {
    return ret;
  } else {
    /* STEP 2: If the type hasn't been found, do a complete search
       of the str field (the human readable name) */
    swig_module_info *iter = start;
    do {
      size_t i = 0;
      for (; i < iter->size; ++i) {
	if (iter->types[i]->str && (SWIG_TypeEquiv(iter->types[i]->str, name)))
	  return iter->types[i];
      }
      iter = iter->next;
    } while (iter != end);
  }

  /* neither found a match */
  return 0;
}

/*
   Pack binary data into a string
*/
SWIGRUNTIME char *
SWIG_PackData(char *c, void *ptr, size_t sz) {
  static const char hex[17] = "0123456789abcdef";
  const unsigned char *u = (unsigned char *) ptr;
  const unsigned char *eu =  u + sz;
  for (; u != eu; ++u) {
    unsigned char uu = *u;
    *(c++) = hex[(uu & 0xf0) >> 4];
    *(c++) = hex[uu & 0xf];
  }
  return c;
}

/*
   Unpack binary data from a string
*/
SWIGRUNTIME const char *
SWIG_UnpackData(const char *c, void *ptr, size_t sz) {
  unsigned char *u = (unsigned char *) ptr;
  const unsigned char *eu = u + sz;
  for (; u != eu; ++u) {
    char d = *(c++);
    unsigned char uu;
    if ((d >= '0') && (d <= '9'))
      uu = (unsigned char)((d - '0') << 4);
    else if ((d >= 'a') && (d <= 'f'))
      uu = (unsigned char)((d - ('a'-10)) << 4);
    else
      return (char *) 0;
    d = *(c++);
    if ((d >= '0') && (d <= '9'))
      uu |= (unsigned char)(d - '0');
    else if ((d >= 'a') && (d <= 'f'))
      uu |= (unsigned char)(d - ('a'-10));
    else
      return (char *) 0;
    *u = uu;
  }
  return c;
}

/*
   Pack 'void *' into a string buffer.
*/
SWIGRUNTIME char *
SWIG_PackVoidPtr(char *buff, void *ptr, const char *name, size_t bsz) {
  char *r = buff;
  if ((2*sizeof(void *) + 2) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,&ptr,sizeof(void *));
  if (strlen(name) + 1 > (bsz - (r - buff))) return 0;
  strcpy(r,name);
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackVoidPtr(const char *c, void **ptr, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      *ptr = (void *) 0;
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sizeof(void *));
}

SWIGRUNTIME char *
SWIG_PackDataName(char *buff, void *ptr, size_t sz, const char *name, size_t bsz) {
  char *r = buff;
  size_t lname = (name ? strlen(name) : 0);
  if ((2*sz + 2 + lname) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,ptr,sz);
  if (lname) {
    strncpy(r,name,lname+1);
  } else {
    *r = 0;
  }
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackDataName(const char *c, void *ptr, size_t sz, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      memset(ptr,0,sz);
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sz);
}

#ifdef __cplusplus
}
#endif

/*  Errors in SWIG */
#define  SWIG_UnknownError    	   -1
#define  SWIG_IOError        	   -2
#define  SWIG_RuntimeError   	   -3
#define  SWIG_IndexError     	   -4
#define  SWIG_TypeError      	   -5
#define  SWIG_DivisionByZero 	   -6
#define  SWIG_OverflowError  	   -7
#define  SWIG_SyntaxError    	   -8
#define  SWIG_ValueError     	   -9
#define  SWIG_SystemError    	   -10
#define  SWIG_AttributeError 	   -11
#define  SWIG_MemoryError    	   -12
#define  SWIG_NullReferenceError   -13



/* Compatibility macros for Python 3 */
#if PY_VERSION_HEX >= 0x03000000

#define PyClass_Check(obj) PyObject_IsInstance(obj, (PyObject *)&PyType_Type)
#define PyInt_Check(x) PyLong_Check(x)
#define PyInt_AsLong(x) PyLong_AsLong(x)
#define PyInt_FromLong(x) PyLong_FromLong(x)
#define PyInt_FromSize_t(x) PyLong_FromSize_t(x)
#define PyString_Check(name) PyBytes_Check(name)
#define PyString_FromString(x) PyUnicode_FromString(x)
#define PyString_Format(fmt, args)  PyUnicode_Format(fmt, args)
#define PyString_AsString(str) PyBytes_AsString(str)
#define PyString_Size(str) PyBytes_Size(str)	
#define PyString_InternFromString(key) PyUnicode_InternFromString(key)
#define Py_TPFLAGS_HAVE_CLASS Py_TPFLAGS_BASETYPE
#define _PyLong_FromSsize_t(x) PyLong_FromSsize_t(x)

#endif

#ifndef Py_TYPE
#  define Py_TYPE(op) ((op)->ob_type)
#endif

/* SWIG APIs for compatibility of both Python 2 & 3 */

#if PY_VERSION_HEX >= 0x03000000
#  define SWIG_Python_str_FromFormat PyUnicode_FromFormat
#else
#  define SWIG_Python_str_FromFormat PyString_FromFormat
#endif


/* Warning: This function will allocate a new string in Python 3,
 * so please call SWIG_Python_str_DelForPy3(x) to free the space.
 */
SWIGINTERN char*
SWIG_Python_str_AsChar(PyObject *str)
{
#if PY_VERSION_HEX >= 0x03030000
  return (char *)PyUnicode_AsUTF8(str);
#elif PY_VERSION_HEX >= 0x03000000
  char *newstr = 0;
  str = PyUnicode_AsUTF8String(str);
  if (str) {
    char *cstr;
    Py_ssize_t len;
    if (PyBytes_AsStringAndSize(str, &cstr, &len) != -1) {
      newstr = (char *) malloc(len+1);
      if (newstr)
        memcpy(newstr, cstr, len+1);
    }
    Py_XDECREF(str);
  }
  return newstr;
#else
  return PyString_AsString(str);
#endif
}

#if PY_VERSION_HEX >= 0x03030000 || PY_VERSION_HEX < 0x03000000
#  define SWIG_Python_str_DelForPy3(x)
#else
#  define SWIG_Python_str_DelForPy3(x) free( (void*) (x) )
#endif


SWIGINTERN PyObject*
SWIG_Python_str_FromChar(const char *c)
{
#if PY_VERSION_HEX >= 0x03000000
  return PyUnicode_FromString(c); 
#else
  return PyString_FromString(c);
#endif
}

#ifndef PyObject_DEL
# define PyObject_DEL PyObject_Del
#endif

/* SWIGPY_USE_CAPSULE is no longer used within SWIG itself, but some user interface files check for it. */
# define SWIGPY_USE_CAPSULE
#ifdef SWIGPYTHON_BUILTIN
# define SWIGPY_CAPSULE_ATTR_NAME "type_pointer_capsule_builtin" SWIG_TYPE_TABLE_NAME
#else
# define SWIGPY_CAPSULE_ATTR_NAME "type_pointer_capsule" SWIG_TYPE_TABLE_NAME
#endif
# define SWIGPY_CAPSULE_NAME ("swig_runtime_data" SWIG_RUNTIME_VERSION "." SWIGPY_CAPSULE_ATTR_NAME)

#if PY_VERSION_HEX < 0x03020000
#define PyDescr_TYPE(x) (((PyDescrObject *)(x))->d_type)
#define PyDescr_NAME(x) (((PyDescrObject *)(x))->d_name)
#define Py_hash_t long
#endif

/* -----------------------------------------------------------------------------
 * error manipulation
 * ----------------------------------------------------------------------------- */

SWIGRUNTIME PyObject*
SWIG_Python_ErrorType(int code) {
  PyObject* type = 0;
  switch(code) {
  case SWIG_MemoryError:
    type = PyExc_MemoryError;
    break;
  case SWIG_IOError:
    type = PyExc_IOError;
    break;
  case SWIG_RuntimeError:
    type = PyExc_RuntimeError;
    break;
  case SWIG_IndexError:
    type = PyExc_IndexError;
    break;
  case SWIG_TypeError:
    type = PyExc_TypeError;
    break;
  case SWIG_DivisionByZero:
    type = PyExc_ZeroDivisionError;
    break;
  case SWIG_OverflowError:
    type = PyExc_OverflowError;
    break;
  case SWIG_SyntaxError:
    type = PyExc_SyntaxError;
    break;
  case SWIG_ValueError:
    type = PyExc_ValueError;
    break;
  case SWIG_SystemError:
    type = PyExc_SystemError;
    break;
  case SWIG_AttributeError:
    type = PyExc_AttributeError;
    break;
  default:
    type = PyExc_RuntimeError;
  }
  return type;
}


SWIGRUNTIME void
SWIG_Python_AddErrorMsg(const char* mesg)
{
  PyObject *type = 0;
  PyObject *value = 0;
  PyObject *traceback = 0;

  if (PyErr_Occurred())
    PyErr_Fetch(&type, &value, &traceback);
  if (value) {
    PyObject *old_str = PyObject_Str(value);
    const char *tmp = SWIG_Python_str_AsChar(old_str);
    PyErr_Clear();
    Py_XINCREF(type);
    if (tmp)
      PyErr_Format(type, "%s %s", tmp, mesg);
    else
      PyErr_Format(type, "%s", mesg);
    SWIG_Python_str_DelForPy3(tmp);
    Py_DECREF(old_str);
    Py_DECREF(value);
  } else {
    PyErr_SetString(PyExc_RuntimeError, mesg);
  }
}

SWIGRUNTIME int
SWIG_Python_TypeErrorOccurred(PyObject *obj)
{
  PyObject *error;
  if (obj)
    return 0;
  error = PyErr_Occurred();
  return error && PyErr_GivenExceptionMatches(error, PyExc_TypeError);
}

SWIGRUNTIME void
SWIG_Python_RaiseOrModifyTypeError(const char *message)
{
  if (SWIG_Python_TypeErrorOccurred(NULL)) {
    /* Use existing TypeError to preserve stacktrace and enhance with given message */
    PyObject *newvalue;
    PyObject *type = NULL, *value = NULL, *traceback = NULL;
    PyErr_Fetch(&type, &value, &traceback);
#if PY_VERSION_HEX >= 0x03000000
    newvalue = PyUnicode_FromFormat("%S\nAdditional information:\n%s", value, message);
#else
    newvalue = PyString_FromFormat("%s\nAdditional information:\n%s", PyString_AsString(value), message);
#endif
    if (newvalue) {
      Py_XDECREF(value);
      PyErr_Restore(type, newvalue, traceback);
    } else {
      PyErr_Restore(type, value, traceback);
    }
  } else {
    /* Raise TypeError using given message */
    PyErr_SetString(PyExc_TypeError, message);
  }
}

#if defined(SWIG_PYTHON_NO_THREADS)
#  if defined(SWIG_PYTHON_THREADS)
#    undef SWIG_PYTHON_THREADS
#  endif
#endif
#if defined(SWIG_PYTHON_THREADS) /* Threading support is enabled */
#  if !defined(SWIG_PYTHON_USE_GIL) && !defined(SWIG_PYTHON_NO_USE_GIL)
#    define SWIG_PYTHON_USE_GIL
#  endif
#  if defined(SWIG_PYTHON_USE_GIL) /* Use PyGILState threads calls */
#    if !defined(SWIG_PYTHON_INITIALIZE_THREADS)
#      if PY_VERSION_HEX < 0x03070000
#        define SWIG_PYTHON_INITIALIZE_THREADS PyEval_InitThreads()
#      else
#        define SWIG_PYTHON_INITIALIZE_THREADS
#      endif
#    endif
#    ifdef __cplusplus /* C++ code */
       class SWIG_Python_Thread_Block {
         bool status;
         PyGILState_STATE state;
       public:
         void end() { if (status) { PyGILState_Release(state); status = false;} }
         SWIG_Python_Thread_Block() : status(true), state(PyGILState_Ensure()) {}
         ~SWIG_Python_Thread_Block() { end(); }
       };
       class SWIG_Python_Thread_Allow {
         bool status;
         PyThreadState *save;
       public:
         void end() { if (status) { PyEval_RestoreThread(save); status = false; }}
         SWIG_Python_Thread_Allow() : status(true), save(PyEval_SaveThread()) {}
         ~SWIG_Python_Thread_Allow() { end(); }
       };
#      define SWIG_PYTHON_THREAD_BEGIN_BLOCK   SWIG_Python_Thread_Block _swig_thread_block
#      define SWIG_PYTHON_THREAD_END_BLOCK     _swig_thread_block.end()
#      define SWIG_PYTHON_THREAD_BEGIN_ALLOW   SWIG_Python_Thread_Allow _swig_thread_allow
#      define SWIG_PYTHON_THREAD_END_ALLOW     _swig_thread_allow.end()
#    else /* C code */
#      define SWIG_PYTHON_THREAD_BEGIN_BLOCK   PyGILState_STATE _swig_thread_block = PyGILState_Ensure()
#      define SWIG_PYTHON_THREAD_END_BLOCK     PyGILState_Release(_swig_thread_block)
#      define SWIG_PYTHON_THREAD_BEGIN_ALLOW   PyThreadState *_swig_thread_allow = PyEval_SaveThread()
#      define SWIG_PYTHON_THREAD_END_ALLOW     PyEval_RestoreThread(_swig_thread_allow)
#    endif
#  else /* Old thread way, not implemented, user must provide it */
#    if !defined(SWIG_PYTHON_INITIALIZE_THREADS)
#      define SWIG_PYTHON_INITIALIZE_THREADS
#    endif
#    if !defined(SWIG_PYTHON_THREAD_BEGIN_BLOCK)
#      define SWIG_PYTHON_THREAD_BEGIN_BLOCK
#    endif
#    if !defined(SWIG_PYTHON_THREAD_END_BLOCK)
#      define SWIG_PYTHON_THREAD_END_BLOCK
#    endif
#    if !defined(SWIG_PYTHON_THREAD_BEGIN_ALLOW)
#      define SWIG_PYTHON_THREAD_BEGIN_ALLOW
#    endif
#    if !defined(SWIG_PYTHON_THREAD_END_ALLOW)
#      define SWIG_PYTHON_THREAD_END_ALLOW
#    endif
#  endif
#else /* No thread support */
#  define SWIG_PYTHON_INITIALIZE_THREADS
#  define SWIG_PYTHON_THREAD_BEGIN_BLOCK
#  define SWIG_PYTHON_THREAD_END_BLOCK
#  define SWIG_PYTHON_THREAD_BEGIN_ALLOW
#  define SWIG_PYTHON_THREAD_END_ALLOW
#endif

/* -----------------------------------------------------------------------------
 * Python API portion that goes into the runtime
 * ----------------------------------------------------------------------------- */

#ifdef __cplusplus
extern "C" {
#endif

/* -----------------------------------------------------------------------------
 * Constant declarations
 * ----------------------------------------------------------------------------- */

/* Constant Types */
#define SWIG_PY_POINTER 4
#define SWIG_PY_BINARY  5

/* Constant information structure */
typedef struct swig_const_info {
  int type;
  const char *name;
  long lvalue;
  double dvalue;
  void   *pvalue;
  swig_type_info **ptype;
} swig_const_info;

#ifdef __cplusplus
}
#endif


/* -----------------------------------------------------------------------------
 * pyrun.swg
 *
 * This file contains the runtime support for Python modules
 * and includes code for managing global variables and pointer
 * type checking.
 *
 * ----------------------------------------------------------------------------- */

#if PY_VERSION_HEX < 0x02070000 /* 2.7.0 */
# error "This version of SWIG only supports Python >= 2.7"
#endif

#if PY_VERSION_HEX >= 0x03000000 && PY_VERSION_HEX < 0x03020000
# error "This version of SWIG only supports Python 3 >= 3.2"
#endif

/* Common SWIG API */

/* for raw pointers */
#define SWIG_Python_ConvertPtr(obj, pptr, type, flags)  SWIG_Python_ConvertPtrAndOwn(obj, pptr, type, flags, 0)
#define SWIG_ConvertPtr(obj, pptr, type, flags)         SWIG_Python_ConvertPtr(obj, pptr, type, flags)
#define SWIG_ConvertPtrAndOwn(obj,pptr,type,flags,own)  SWIG_Python_ConvertPtrAndOwn(obj, pptr, type, flags, own)

#ifdef SWIGPYTHON_BUILTIN
#define SWIG_NewPointerObj(ptr, type, flags)            SWIG_Python_NewPointerObj(self, ptr, type, flags)
#else
#define SWIG_NewPointerObj(ptr, type, flags)            SWIG_Python_NewPointerObj(NULL, ptr, type, flags)
#endif

#define SWIG_InternalNewPointerObj(ptr, type, flags)	SWIG_Python_NewPointerObj(NULL, ptr, type, flags)

#define SWIG_CheckImplicit(ty)                          SWIG_Python_CheckImplicit(ty) 
#define SWIG_AcquirePtr(ptr, src)                       SWIG_Python_AcquirePtr(ptr, src)
#define swig_owntype                                    int

/* for raw packed data */
#define SWIG_ConvertPacked(obj, ptr, sz, ty)            SWIG_Python_ConvertPacked(obj, ptr, sz, ty)
#define SWIG_NewPackedObj(ptr, sz, type)                SWIG_Python_NewPackedObj(ptr, sz, type)

/* for class or struct pointers */
#define SWIG_ConvertInstance(obj, pptr, type, flags)    SWIG_ConvertPtr(obj, pptr, type, flags)
#define SWIG_NewInstanceObj(ptr, type, flags)           SWIG_NewPointerObj(ptr, type, flags)

/* for C or C++ function pointers */
#define SWIG_ConvertFunctionPtr(obj, pptr, type)        SWIG_Python_ConvertFunctionPtr(obj, pptr, type)
#define SWIG_NewFunctionPtrObj(ptr, type)               SWIG_Python_NewPointerObj(NULL, ptr, type, 0)

/* for C++ member pointers, ie, member methods */
#define SWIG_ConvertMember(obj, ptr, sz, ty)            SWIG_Python_ConvertPacked(obj, ptr, sz, ty)
#define SWIG_NewMemberObj(ptr, sz, type)                SWIG_Python_NewPackedObj(ptr, sz, type)


/* Runtime API */

#define SWIG_GetModule(clientdata)                      SWIG_Python_GetModule(clientdata)
#define SWIG_SetModule(clientdata, pointer)             SWIG_Python_SetModule(pointer)
#define SWIG_NewClientData(obj)                         SwigPyClientData_New(obj)

#define SWIG_SetErrorObj                                SWIG_Python_SetErrorObj                            
#define SWIG_SetErrorMsg                        	SWIG_Python_SetErrorMsg				   
#define SWIG_ErrorType(code)                    	SWIG_Python_ErrorType(code)                        
#define SWIG_Error(code, msg)            		SWIG_Python_SetErrorMsg(SWIG_ErrorType(code), msg) 
#define SWIG_fail                        		goto fail					   


/* Runtime API implementation */

/* Error manipulation */

SWIGINTERN void 
SWIG_Python_SetErrorObj(PyObject *errtype, PyObject *obj) {
  SWIG_PYTHON_THREAD_BEGIN_BLOCK; 
  PyErr_SetObject(errtype, obj);
  Py_DECREF(obj);
  SWIG_PYTHON_THREAD_END_BLOCK;
}

SWIGINTERN void 
SWIG_Python_SetErrorMsg(PyObject *errtype, const char *msg) {
  SWIG_PYTHON_THREAD_BEGIN_BLOCK;
  PyErr_SetString(errtype, msg);
  SWIG_PYTHON_THREAD_END_BLOCK;
}

#define SWIG_Python_Raise(obj, type, desc)  SWIG_Python_SetErrorObj(SWIG_Python_ExceptionType(desc), obj)

/* Set a constant value */

#if defined(SWIGPYTHON_BUILTIN)

SWIGINTERN void
SwigPyBuiltin_AddPublicSymbol(PyObject *seq, const char *key) {
  PyObject *s = PyString_InternFromString(key);
  PyList_Append(seq, s);
  Py_DECREF(s);
}

SWIGINTERN void
SWIG_Python_SetConstant(PyObject *d, PyObject *public_interface, const char *name, PyObject *obj) {   
  PyDict_SetItemString(d, name, obj);
  Py_DECREF(obj);
  if (public_interface)
    SwigPyBuiltin_AddPublicSymbol(public_interface, name);
}

#else

SWIGINTERN void
SWIG_Python_SetConstant(PyObject *d, const char *name, PyObject *obj) {   
  PyDict_SetItemString(d, name, obj);
  Py_DECREF(obj);                            
}

#endif

/* Append a value to the result obj */

SWIGINTERN PyObject*
SWIG_Python_AppendOutput(PyObject* result, PyObject* obj) {
  if (!result) {
    result = obj;
  } else if (result == Py_None) {
    Py_DECREF(result);
    result = obj;
  } else {
    if (!PyList_Check(result)) {
      PyObject *o2 = result;
      result = PyList_New(1);
      if (result) {
        PyList_SET_ITEM(result, 0, o2);
      } else {
        Py_DECREF(obj);
        return o2;
      }
    }
    PyList_Append(result,obj);
    Py_DECREF(obj);
  }
  return result;
}

/* Unpack the argument tuple */

SWIGINTERN Py_ssize_t
SWIG_Python_UnpackTuple(PyObject *args, const char *name, Py_ssize_t min, Py_ssize_t max, PyObject **objs)
{
  if (!args) {
    if (!min && !max) {
      return 1;
    } else {
      PyErr_Format(PyExc_TypeError, "%s expected %s%d arguments, got none", 
		   name, (min == max ? "" : "at least "), (int)min);
      return 0;
    }
  }  
  if (!PyTuple_Check(args)) {
    if (min <= 1 && max >= 1) {
      Py_ssize_t i;
      objs[0] = args;
      for (i = 1; i < max; ++i) {
	objs[i] = 0;
      }
      return 2;
    }
    PyErr_SetString(PyExc_SystemError, "UnpackTuple() argument list is not a tuple");
    return 0;
  } else {
    Py_ssize_t l = PyTuple_GET_SIZE(args);
    if (l < min) {
      PyErr_Format(PyExc_TypeError, "%s expected %s%d arguments, got %d", 
		   name, (min == max ? "" : "at least "), (int)min, (int)l);
      return 0;
    } else if (l > max) {
      PyErr_Format(PyExc_TypeError, "%s expected %s%d arguments, got %d", 
		   name, (min == max ? "" : "at most "), (int)max, (int)l);
      return 0;
    } else {
      Py_ssize_t i;
      for (i = 0; i < l; ++i) {
	objs[i] = PyTuple_GET_ITEM(args, i);
      }
      for (; l < max; ++l) {
	objs[l] = 0;
      }
      return i + 1;
    }    
  }
}

SWIGINTERN int
SWIG_Python_CheckNoKeywords(PyObject *kwargs, const char *name) {
  int no_kwargs = 1;
  if (kwargs) {
    assert(PyDict_Check(kwargs));
    if (PyDict_Size(kwargs) > 0) {
      PyErr_Format(PyExc_TypeError, "%s() does not take keyword arguments", name);
      no_kwargs = 0;
    }
  }
  return no_kwargs;
}

/* A functor is a function object with one single object argument */
#define SWIG_Python_CallFunctor(functor, obj)	        PyObject_CallFunctionObjArgs(functor, obj, NULL);

/*
  Helper for static pointer initialization for both C and C++ code, for example
  static PyObject *SWIG_STATIC_POINTER(MyVar) = NewSomething(...);
*/
#ifdef __cplusplus
#define SWIG_STATIC_POINTER(var)  var
#else
#define SWIG_STATIC_POINTER(var)  var = 0; if (!var) var
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Python-specific SWIG API */
#define SWIG_newvarlink()                             SWIG_Python_newvarlink()
#define SWIG_addvarlink(p, name, get_attr, set_attr)  SWIG_Python_addvarlink(p, name, get_attr, set_attr)
#define SWIG_InstallConstants(d, constants)           SWIG_Python_InstallConstants(d, constants)
 
/* -----------------------------------------------------------------------------
 * global variable support code.
 * ----------------------------------------------------------------------------- */
 
typedef struct swig_globalvar {   
  char       *name;                  /* Name of global variable */
  PyObject *(*get_attr)(void);       /* Return the current value */
  int       (*set_attr)(PyObject *); /* Set the value */
  struct swig_globalvar *next;
} swig_globalvar;

typedef struct swig_varlinkobject {
  PyObject_HEAD
  swig_globalvar *vars;
} swig_varlinkobject;

SWIGINTERN PyObject *
swig_varlink_repr(swig_varlinkobject *SWIGUNUSEDPARM(v)) {
#if PY_VERSION_HEX >= 0x03000000
  return PyUnicode_InternFromString("<Swig global variables>");
#else
  return PyString_FromString("<Swig global variables>");
#endif
}

SWIGINTERN PyObject *
swig_varlink_str(swig_varlinkobject *v) {
#if PY_VERSION_HEX >= 0x03000000
  PyObject *str = PyUnicode_InternFromString("(");
  PyObject *tail;
  PyObject *joined;
  swig_globalvar *var;
  for (var = v->vars; var; var=var->next) {
    tail = PyUnicode_FromString(var->name);
    joined = PyUnicode_Concat(str, tail);
    Py_DecRef(str);
    Py_DecRef(tail);
    str = joined;
    if (var->next) {
        tail = PyUnicode_InternFromString(", ");
        joined = PyUnicode_Concat(str, tail);
        Py_DecRef(str);
        Py_DecRef(tail);
        str = joined;
    }
  }
  tail = PyUnicode_InternFromString(")");
  joined = PyUnicode_Concat(str, tail);
  Py_DecRef(str);
  Py_DecRef(tail);
  str = joined;
#else
  PyObject *str = PyString_FromString("(");
  swig_globalvar *var;
  for (var = v->vars; var; var=var->next) {
    PyString_ConcatAndDel(&str,PyString_FromString(var->name));
    if (var->next) PyString_ConcatAndDel(&str,PyString_FromString(", "));
  }
  PyString_ConcatAndDel(&str,PyString_FromString(")"));
#endif
  return str;
}

SWIGINTERN void
swig_varlink_dealloc(swig_varlinkobject *v) {
  swig_globalvar *var = v->vars;
  while (var) {
    swig_globalvar *n = var->next;
    free(var->name);
    free(var);
    var = n;
  }
}

SWIGINTERN PyObject *
swig_varlink_getattr(swig_varlinkobject *v, char *n) {
  PyObject *res = NULL;
  swig_globalvar *var = v->vars;
  while (var) {
    if (strcmp(var->name,n) == 0) {
      res = (*var->get_attr)();
      break;
    }
    var = var->next;
  }
  if (res == NULL && !PyErr_Occurred()) {
    PyErr_Format(PyExc_AttributeError, "Unknown C global variable '%s'", n);
  }
  return res;
}

SWIGINTERN int
swig_varlink_setattr(swig_varlinkobject *v, char *n, PyObject *p) {
  int res = 1;
  swig_globalvar *var = v->vars;
  while (var) {
    if (strcmp(var->name,n) == 0) {
      res = (*var->set_attr)(p);
      break;
    }
    var = var->next;
  }
  if (res == 1 && !PyErr_Occurred()) {
    PyErr_Format(PyExc_AttributeError, "Unknown C global variable '%s'", n);
  }
  return res;
}

SWIGINTERN PyTypeObject*
swig_varlink_type(void) {
  static char varlink__doc__[] = "Swig var link object";
  static PyTypeObject varlink_type;
  static int type_init = 0;
  if (!type_init) {
    const PyTypeObject tmp = {
#if PY_VERSION_HEX >= 0x03000000
      PyVarObject_HEAD_INIT(NULL, 0)
#else
      PyObject_HEAD_INIT(NULL)
      0,                                  /* ob_size */
#endif
      "swigvarlink",                      /* tp_name */
      sizeof(swig_varlinkobject),         /* tp_basicsize */
      0,                                  /* tp_itemsize */
      (destructor) swig_varlink_dealloc,  /* tp_dealloc */
      0,                                  /* tp_print */
      (getattrfunc) swig_varlink_getattr, /* tp_getattr */
      (setattrfunc) swig_varlink_setattr, /* tp_setattr */
      0,                                  /* tp_compare */
      (reprfunc) swig_varlink_repr,       /* tp_repr */
      0,                                  /* tp_as_number */
      0,                                  /* tp_as_sequence */
      0,                                  /* tp_as_mapping */
      0,                                  /* tp_hash */
      0,                                  /* tp_call */
      (reprfunc) swig_varlink_str,        /* tp_str */
      0,                                  /* tp_getattro */
      0,                                  /* tp_setattro */
      0,                                  /* tp_as_buffer */
      0,                                  /* tp_flags */
      varlink__doc__,                     /* tp_doc */
      0,                                  /* tp_traverse */
      0,                                  /* tp_clear */
      0,                                  /* tp_richcompare */
      0,                                  /* tp_weaklistoffset */
      0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, /* tp_iter -> tp_weaklist */
      0,                                  /* tp_del */
      0,                                  /* tp_version_tag */
#if PY_VERSION_HEX >= 0x03040000
      0,                                  /* tp_finalize */
#endif
#if PY_VERSION_HEX >= 0x03080000
      0,                                  /* tp_vectorcall */
#endif
#if (PY_VERSION_HEX >= 0x03080000) && (PY_VERSION_HEX < 0x03090000)
      0,                                  /* tp_print */
#endif
#ifdef COUNT_ALLOCS
      0,                                  /* tp_allocs */
      0,                                  /* tp_frees */
      0,                                  /* tp_maxalloc */
      0,                                  /* tp_prev */
      0                                   /* tp_next */
#endif
    };
    varlink_type = tmp;
    type_init = 1;
    if (PyType_Ready(&varlink_type) < 0)
      return NULL;
  }
  return &varlink_type;
}

/* Create a variable linking object for use later */
SWIGINTERN PyObject *
SWIG_Python_newvarlink(void) {
  swig_varlinkobject *result = PyObject_NEW(swig_varlinkobject, swig_varlink_type());
  if (result) {
    result->vars = 0;
  }
  return ((PyObject*) result);
}

SWIGINTERN void 
SWIG_Python_addvarlink(PyObject *p, const char *name, PyObject *(*get_attr)(void), int (*set_attr)(PyObject *p)) {
  swig_varlinkobject *v = (swig_varlinkobject *) p;
  swig_globalvar *gv = (swig_globalvar *) malloc(sizeof(swig_globalvar));
  if (gv) {
    size_t size = strlen(name)+1;
    gv->name = (char *)malloc(size);
    if (gv->name) {
      memcpy(gv->name, name, size);
      gv->get_attr = get_attr;
      gv->set_attr = set_attr;
      gv->next = v->vars;
    }
  }
  v->vars = gv;
}


static PyObject *Swig_Globals_global = NULL;
  
SWIGINTERN PyObject *
SWIG_globals(void) {
  if (Swig_Globals_global == NULL) {
    Swig_Globals_global = SWIG_newvarlink();
  }
  return Swig_Globals_global;
}

#ifdef __cplusplus
}
#endif

/* -----------------------------------------------------------------------------
 * Pointer declarations
 * ----------------------------------------------------------------------------- */

/* Flags for new pointer objects */
#define SWIG_POINTER_NOSHADOW       (SWIG_POINTER_OWN      << 1)
#define SWIG_POINTER_NEW            (SWIG_POINTER_NOSHADOW | SWIG_POINTER_OWN)

#define SWIG_POINTER_IMPLICIT_CONV  (SWIG_POINTER_DISOWN   << 1)

#define SWIG_BUILTIN_TP_INIT	    (SWIG_POINTER_OWN << 2)
#define SWIG_BUILTIN_INIT	    (SWIG_BUILTIN_TP_INIT | SWIG_POINTER_OWN)

#ifdef __cplusplus
extern "C" {
#endif

/* The python void return value */

SWIGRUNTIMEINLINE PyObject * 
SWIG_Py_Void(void)
{
  PyObject *none = Py_None;
  Py_INCREF(none);
  return none;
}

/* SwigPyClientData */

typedef struct {
  PyObject *klass;
  PyObject *newraw;
  PyObject *newargs;
  PyObject *destroy;
  int delargs;
  int implicitconv;
  PyTypeObject *pytype;
} SwigPyClientData;

SWIGRUNTIMEINLINE int 
SWIG_Python_CheckImplicit(swig_type_info *ty)
{
  SwigPyClientData *data = (SwigPyClientData *)ty->clientdata;
  int fail = data ? data->implicitconv : 0;
  if (fail)
    PyErr_SetString(PyExc_TypeError, "Implicit conversion is prohibited for explicit constructors.");
  return fail;
}

SWIGRUNTIMEINLINE PyObject *
SWIG_Python_ExceptionType(swig_type_info *desc) {
  SwigPyClientData *data = desc ? (SwigPyClientData *) desc->clientdata : 0;
  PyObject *klass = data ? data->klass : 0;
  return (klass ? klass : PyExc_RuntimeError);
}


SWIGRUNTIME SwigPyClientData * 
SwigPyClientData_New(PyObject* obj)
{
  if (!obj) {
    return 0;
  } else {
    SwigPyClientData *data = (SwigPyClientData *)malloc(sizeof(SwigPyClientData));
    /* the klass element */
    data->klass = obj;
    Py_INCREF(data->klass);
    /* the newraw method and newargs arguments used to create a new raw instance */
    if (PyClass_Check(obj)) {
      data->newraw = 0;
      Py_INCREF(obj);
      data->newargs = obj;
    } else {
      data->newraw = PyObject_GetAttrString(data->klass, "__new__");
      if (data->newraw) {
        data->newargs = PyTuple_New(1);
        if (data->newargs) {
          Py_INCREF(obj);
          PyTuple_SET_ITEM(data->newargs, 0, obj);
        } else {
          Py_DECREF(data->newraw);
          Py_DECREF(data->klass);
          free(data);
          return 0;
        }
      } else {
        Py_INCREF(obj);
        data->newargs = obj;
      }
    }
    /* the destroy method, aka as the C++ delete method */
    data->destroy = PyObject_GetAttrString(data->klass, "__swig_destroy__");
    if (PyErr_Occurred()) {
      PyErr_Clear();
      data->destroy = 0;
    }
    if (data->destroy) {
      data->delargs = !(PyCFunction_GET_FLAGS(data->destroy) & METH_O);
    } else {
      data->delargs = 0;
    }
    data->implicitconv = 0;
    data->pytype = 0;
    return data;
  }
}

SWIGRUNTIME void 
SwigPyClientData_Del(SwigPyClientData *data)
{
  Py_XDECREF(data->klass);
  Py_XDECREF(data->newraw);
  Py_XDECREF(data->newargs);
  Py_XDECREF(data->destroy);
  free(data);
}

/* =============== SwigPyObject =====================*/

typedef struct {
  PyObject_HEAD
  void *ptr;
  swig_type_info *ty;
  int own;
  PyObject *next;
#ifdef SWIGPYTHON_BUILTIN
  PyObject *dict;
#endif
} SwigPyObject;


#ifdef SWIGPYTHON_BUILTIN

SWIGRUNTIME PyObject *
SwigPyObject_get___dict__(PyObject *v, PyObject *SWIGUNUSEDPARM(args))
{
  SwigPyObject *sobj = (SwigPyObject *)v;

  if (!sobj->dict)
    sobj->dict = PyDict_New();

  Py_XINCREF(sobj->dict);
  return sobj->dict;
}

#endif

SWIGRUNTIME PyObject *
SwigPyObject_long(SwigPyObject *v)
{
  return PyLong_FromVoidPtr(v->ptr);
}

SWIGRUNTIME PyObject *
SwigPyObject_format(const char* fmt, SwigPyObject *v)
{
  PyObject *res = NULL;
  PyObject *args = PyTuple_New(1);
  if (args) {
    PyObject *val = SwigPyObject_long(v);
    if (val) {
      PyObject *ofmt;
      PyTuple_SET_ITEM(args, 0, val);
      ofmt = SWIG_Python_str_FromChar(fmt);
      if (ofmt) {
#if PY_VERSION_HEX >= 0x03000000
        res = PyUnicode_Format(ofmt,args);
#else
        res = PyString_Format(ofmt,args);
#endif
        Py_DECREF(ofmt);
      }
    }
    Py_DECREF(args);
  }
  return res;
}

SWIGRUNTIME PyObject *
SwigPyObject_oct(SwigPyObject *v)
{
  return SwigPyObject_format("%o",v);
}

SWIGRUNTIME PyObject *
SwigPyObject_hex(SwigPyObject *v)
{
  return SwigPyObject_format("%x",v);
}

SWIGRUNTIME PyObject *
SwigPyObject_repr(SwigPyObject *v)
{
  const char *name = SWIG_TypePrettyName(v->ty);
  PyObject *repr = SWIG_Python_str_FromFormat("<Swig Object of type '%s' at %p>", (name ? name : "unknown"), (void *)v);
  if (repr && v->next) {
    PyObject *nrep = SwigPyObject_repr((SwigPyObject *)v->next);
    if (nrep) {
# if PY_VERSION_HEX >= 0x03000000
      PyObject *joined = PyUnicode_Concat(repr, nrep);
      Py_DecRef(repr);
      Py_DecRef(nrep);
      repr = joined;
# else
      PyString_ConcatAndDel(&repr,nrep);
# endif
    } else {
      Py_DecRef(repr);
      repr = NULL;
    }
  }
  return repr;
}

/* We need a version taking two PyObject* parameters so it's a valid
 * PyCFunction to use in swigobject_methods[]. */
SWIGRUNTIME PyObject *
SwigPyObject_repr2(PyObject *v, PyObject *SWIGUNUSEDPARM(args))
{
  return SwigPyObject_repr((SwigPyObject*)v);
}

SWIGRUNTIME int
SwigPyObject_compare(SwigPyObject *v, SwigPyObject *w)
{
  void *i = v->ptr;
  void *j = w->ptr;
  return (i < j) ? -1 : ((i > j) ? 1 : 0);
}

/* Added for Python 3.x, would it also be useful for Python 2.x? */
SWIGRUNTIME PyObject*
SwigPyObject_richcompare(SwigPyObject *v, SwigPyObject *w, int op)
{
  PyObject* res;
  if( op != Py_EQ && op != Py_NE ) {
    Py_INCREF(Py_NotImplemented);
    return Py_NotImplemented;
  }
  res = PyBool_FromLong( (SwigPyObject_compare(v, w)==0) == (op == Py_EQ) ? 1 : 0);
  return res;  
}


SWIGRUNTIME PyTypeObject* SwigPyObject_TypeOnce(void);

#ifdef SWIGPYTHON_BUILTIN
static swig_type_info *SwigPyObject_stype = 0;
SWIGRUNTIME PyTypeObject*
SwigPyObject_type(void) {
    SwigPyClientData *cd;
    assert(SwigPyObject_stype);
    cd = (SwigPyClientData*) SwigPyObject_stype->clientdata;
    assert(cd);
    assert(cd->pytype);
    return cd->pytype;
}
#else
SWIGRUNTIME PyTypeObject*
SwigPyObject_type(void) {
  static PyTypeObject *SWIG_STATIC_POINTER(type) = SwigPyObject_TypeOnce();
  return type;
}
#endif

SWIGRUNTIMEINLINE int
SwigPyObject_Check(PyObject *op) {
#ifdef SWIGPYTHON_BUILTIN
  PyTypeObject *target_tp = SwigPyObject_type();
  if (PyType_IsSubtype(op->ob_type, target_tp))
    return 1;
  return (strcmp(op->ob_type->tp_name, "SwigPyObject") == 0);
#else
  return (Py_TYPE(op) == SwigPyObject_type())
    || (strcmp(Py_TYPE(op)->tp_name,"SwigPyObject") == 0);
#endif
}

SWIGRUNTIME PyObject *
SwigPyObject_New(void *ptr, swig_type_info *ty, int own);

static PyObject* Swig_Capsule_global = NULL;

SWIGRUNTIME void
SwigPyObject_dealloc(PyObject *v)
{
  SwigPyObject *sobj = (SwigPyObject *) v;
  PyObject *next = sobj->next;
  if (sobj->own == SWIG_POINTER_OWN) {
    swig_type_info *ty = sobj->ty;
    SwigPyClientData *data = ty ? (SwigPyClientData *) ty->clientdata : 0;
    PyObject *destroy = data ? data->destroy : 0;
    if (destroy) {
      /* destroy is always a VARARGS method */
      PyObject *res;

      /* PyObject_CallFunction() has the potential to silently drop
         the active exception.  In cases of unnamed temporary
         variable or where we just finished iterating over a generator
         StopIteration will be active right now, and this needs to
         remain true upon return from SwigPyObject_dealloc.  So save
         and restore. */
      
      PyObject *type = NULL, *value = NULL, *traceback = NULL;
      PyErr_Fetch(&type, &value, &traceback);

      if (data->delargs) {
        /* we need to create a temporary object to carry the destroy operation */
        PyObject *tmp = SwigPyObject_New(sobj->ptr, ty, 0);
        if (tmp) {
          res = SWIG_Python_CallFunctor(destroy, tmp);
        } else {
          res = 0;
        }
        Py_XDECREF(tmp);
      } else {
        PyCFunction meth = PyCFunction_GET_FUNCTION(destroy);
        PyObject *mself = PyCFunction_GET_SELF(destroy);
        res = ((*meth)(mself, v));
      }
      if (!res)
        PyErr_WriteUnraisable(destroy);

      PyErr_Restore(type, value, traceback);

      Py_XDECREF(res);
    } 
#if !defined(SWIG_PYTHON_SILENT_MEMLEAK)
    else {
      const char *name = SWIG_TypePrettyName(ty);
      printf("swig/python detected a memory leak of type '%s', no destructor found.\n", (name ? name : "unknown"));
    }
#endif
    Py_XDECREF(Swig_Capsule_global);
  }
  Py_XDECREF(next);
#ifdef SWIGPYTHON_BUILTIN
  Py_XDECREF(sobj->dict);
#endif
  PyObject_DEL(v);
}

SWIGRUNTIME PyObject* 
SwigPyObject_append(PyObject* v, PyObject* next)
{
  SwigPyObject *sobj = (SwigPyObject *) v;
  if (!SwigPyObject_Check(next)) {
    PyErr_SetString(PyExc_TypeError, "Attempt to append a non SwigPyObject");
    return NULL;
  }
  sobj->next = next;
  Py_INCREF(next);
  return SWIG_Py_Void();
}

SWIGRUNTIME PyObject* 
SwigPyObject_next(PyObject* v, PyObject *SWIGUNUSEDPARM(args))
{
  SwigPyObject *sobj = (SwigPyObject *) v;
  if (sobj->next) {    
    Py_INCREF(sobj->next);
    return sobj->next;
  } else {
    return SWIG_Py_Void();
  }
}

SWIGINTERN PyObject*
SwigPyObject_disown(PyObject* v, PyObject *SWIGUNUSEDPARM(args))
{
  SwigPyObject *sobj = (SwigPyObject *)v;
  sobj->own = 0;
  return SWIG_Py_Void();
}

SWIGINTERN PyObject*
SwigPyObject_acquire(PyObject* v, PyObject *SWIGUNUSEDPARM(args))
{
  SwigPyObject *sobj = (SwigPyObject *)v;
  sobj->own = SWIG_POINTER_OWN;
  return SWIG_Py_Void();
}

SWIGINTERN PyObject*
SwigPyObject_own(PyObject *v, PyObject *args)
{
  PyObject *val = 0;
  if (!PyArg_UnpackTuple(args, "own", 0, 1, &val)) {
    return NULL;
  } else {
    SwigPyObject *sobj = (SwigPyObject *)v;
    PyObject *obj = PyBool_FromLong(sobj->own);
    if (val) {
      if (PyObject_IsTrue(val)) {
        Py_DECREF(SwigPyObject_acquire(v,args));
      } else {
        Py_DECREF(SwigPyObject_disown(v,args));
      }
    } 
    return obj;
  }
}

static PyMethodDef
swigobject_methods[] = {
  {"disown",  SwigPyObject_disown,  METH_NOARGS,  "releases ownership of the pointer"},
  {"acquire", SwigPyObject_acquire, METH_NOARGS,  "acquires ownership of the pointer"},
  {"own",     SwigPyObject_own,     METH_VARARGS, "returns/sets ownership of the pointer"},
  {"append",  SwigPyObject_append,  METH_O,       "appends another 'this' object"},
  {"next",    SwigPyObject_next,    METH_NOARGS,  "returns the next 'this' object"},
  {"__repr__",SwigPyObject_repr2,   METH_NOARGS,  "returns object representation"},
  {0, 0, 0, 0}  
};

SWIGRUNTIME PyTypeObject*
SwigPyObject_TypeOnce(void) {
  static char swigobject_doc[] = "Swig object carries a C/C++ instance pointer";

  static PyNumberMethods SwigPyObject_as_number = {
    (binaryfunc)0, /*nb_add*/
    (binaryfunc)0, /*nb_subtract*/
    (binaryfunc)0, /*nb_multiply*/
    /* nb_divide removed in Python 3 */
#if PY_VERSION_HEX < 0x03000000
    (binaryfunc)0, /*nb_divide*/
#endif
    (binaryfunc)0, /*nb_remainder*/
    (binaryfunc)0, /*nb_divmod*/
    (ternaryfunc)0,/*nb_power*/
    (unaryfunc)0,  /*nb_negative*/
    (unaryfunc)0,  /*nb_positive*/
    (unaryfunc)0,  /*nb_absolute*/
    (inquiry)0,    /*nb_nonzero*/
    0,		   /*nb_invert*/
    0,		   /*nb_lshift*/
    0,		   /*nb_rshift*/
    0,		   /*nb_and*/
    0,		   /*nb_xor*/
    0,		   /*nb_or*/
#if PY_VERSION_HEX < 0x03000000
    0,   /*nb_coerce*/
#endif
    (unaryfunc)SwigPyObject_long, /*nb_int*/
#if PY_VERSION_HEX < 0x03000000
    (unaryfunc)SwigPyObject_long, /*nb_long*/
#else
    0, /*nb_reserved*/
#endif
    (unaryfunc)0,                 /*nb_float*/
#if PY_VERSION_HEX < 0x03000000
    (unaryfunc)SwigPyObject_oct,  /*nb_oct*/
    (unaryfunc)SwigPyObject_hex,  /*nb_hex*/
#endif
#if PY_VERSION_HEX >= 0x03050000 /* 3.5 */
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_inplace_matrix_multiply */
#elif PY_VERSION_HEX >= 0x03000000 /* 3.0 */
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_index, nb_inplace_divide removed */
#else
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_index */
#endif
  };

  static PyTypeObject swigpyobject_type;
  static int type_init = 0;
  if (!type_init) {
    const PyTypeObject tmp = {
#if PY_VERSION_HEX >= 0x03000000
      PyVarObject_HEAD_INIT(NULL, 0)
#else
      PyObject_HEAD_INIT(NULL)
      0,                                    /* ob_size */
#endif
      "SwigPyObject",                       /* tp_name */
      sizeof(SwigPyObject),                 /* tp_basicsize */
      0,                                    /* tp_itemsize */
      (destructor)SwigPyObject_dealloc,     /* tp_dealloc */
      0,                                    /* tp_print */
      (getattrfunc)0,                       /* tp_getattr */
      (setattrfunc)0,                       /* tp_setattr */
#if PY_VERSION_HEX >= 0x03000000
      0, /* tp_reserved in 3.0.1, tp_compare in 3.0.0 but not used */
#else
      (cmpfunc)SwigPyObject_compare,        /* tp_compare */
#endif
      (reprfunc)SwigPyObject_repr,          /* tp_repr */
      &SwigPyObject_as_number,              /* tp_as_number */
      0,                                    /* tp_as_sequence */
      0,                                    /* tp_as_mapping */
      (hashfunc)0,                          /* tp_hash */
      (ternaryfunc)0,                       /* tp_call */
      0,                                    /* tp_str */
      PyObject_GenericGetAttr,              /* tp_getattro */
      0,                                    /* tp_setattro */
      0,                                    /* tp_as_buffer */
      Py_TPFLAGS_DEFAULT,                   /* tp_flags */
      swigobject_doc,                       /* tp_doc */
      0,                                    /* tp_traverse */
      0,                                    /* tp_clear */
      (richcmpfunc)SwigPyObject_richcompare,/* tp_richcompare */
      0,                                    /* tp_weaklistoffset */
      0,                                    /* tp_iter */
      0,                                    /* tp_iternext */
      swigobject_methods,                   /* tp_methods */
      0,                                    /* tp_members */
      0,                                    /* tp_getset */
      0,                                    /* tp_base */
      0,                                    /* tp_dict */
      0,                                    /* tp_descr_get */
      0,                                    /* tp_descr_set */
      0,                                    /* tp_dictoffset */
      0,                                    /* tp_init */
      0,                                    /* tp_alloc */
      0,                                    /* tp_new */
      0,                                    /* tp_free */
      0,                                    /* tp_is_gc */
      0,                                    /* tp_bases */
      0,                                    /* tp_mro */
      0,                                    /* tp_cache */
      0,                                    /* tp_subclasses */
      0,                                    /* tp_weaklist */
      0,                                    /* tp_del */
      0,                                    /* tp_version_tag */
#if PY_VERSION_HEX >= 0x03040000
      0,                                    /* tp_finalize */
#endif
#if PY_VERSION_HEX >= 0x03080000
      0,                                    /* tp_vectorcall */
#endif
#if (PY_VERSION_HEX >= 0x03080000) && (PY_VERSION_HEX < 0x03090000)
      0,                                    /* tp_print */
#endif
#ifdef COUNT_ALLOCS
      0,                                    /* tp_allocs */
      0,                                    /* tp_frees */
      0,                                    /* tp_maxalloc */
      0,                                    /* tp_prev */
      0                                     /* tp_next */
#endif
    };
    swigpyobject_type = tmp;
    type_init = 1;
    if (PyType_Ready(&swigpyobject_type) != 0)
      return NULL;
  }
  return &swigpyobject_type;
}

SWIGRUNTIME PyObject *
SwigPyObject_New(void *ptr, swig_type_info *ty, int own)
{
  SwigPyObject *sobj = PyObject_NEW(SwigPyObject, SwigPyObject_type());
  if (sobj) {
    sobj->ptr  = ptr;
    sobj->ty   = ty;
    sobj->own  = own;
    sobj->next = 0;
#ifdef SWIGPYTHON_BUILTIN
    sobj->dict = 0;
#endif
    if (own == SWIG_POINTER_OWN) {
      /* Obtain a reference to the Python capsule wrapping the module information, so that the
       * module information is correctly destroyed after all SWIG python objects have been freed
       * by the GC (and corresponding destructors invoked) */
      Py_XINCREF(Swig_Capsule_global);
    }
  }
  return (PyObject *)sobj;
}

/* -----------------------------------------------------------------------------
 * Implements a simple Swig Packed type, and use it instead of string
 * ----------------------------------------------------------------------------- */

typedef struct {
  PyObject_HEAD
  void *pack;
  swig_type_info *ty;
  size_t size;
} SwigPyPacked;

SWIGRUNTIME PyObject *
SwigPyPacked_repr(SwigPyPacked *v)
{
  char result[SWIG_BUFFER_SIZE];
  if (SWIG_PackDataName(result, v->pack, v->size, 0, sizeof(result))) {
    return SWIG_Python_str_FromFormat("<Swig Packed at %s%s>", result, v->ty->name);
  } else {
    return SWIG_Python_str_FromFormat("<Swig Packed %s>", v->ty->name);
  }  
}

SWIGRUNTIME PyObject *
SwigPyPacked_str(SwigPyPacked *v)
{
  char result[SWIG_BUFFER_SIZE];
  if (SWIG_PackDataName(result, v->pack, v->size, 0, sizeof(result))){
    return SWIG_Python_str_FromFormat("%s%s", result, v->ty->name);
  } else {
    return SWIG_Python_str_FromChar(v->ty->name);
  }  
}

SWIGRUNTIME int
SwigPyPacked_compare(SwigPyPacked *v, SwigPyPacked *w)
{
  size_t i = v->size;
  size_t j = w->size;
  int s = (i < j) ? -1 : ((i > j) ? 1 : 0);
  return s ? s : strncmp((const char *)v->pack, (const char *)w->pack, 2*v->size);
}

SWIGRUNTIME PyTypeObject* SwigPyPacked_TypeOnce(void);

SWIGRUNTIME PyTypeObject*
SwigPyPacked_type(void) {
  static PyTypeObject *SWIG_STATIC_POINTER(type) = SwigPyPacked_TypeOnce();
  return type;
}

SWIGRUNTIMEINLINE int
SwigPyPacked_Check(PyObject *op) {
  return ((op)->ob_type == SwigPyPacked_TypeOnce()) 
    || (strcmp((op)->ob_type->tp_name,"SwigPyPacked") == 0);
}

SWIGRUNTIME void
SwigPyPacked_dealloc(PyObject *v)
{
  if (SwigPyPacked_Check(v)) {
    SwigPyPacked *sobj = (SwigPyPacked *) v;
    free(sobj->pack);
  }
  PyObject_DEL(v);
}

SWIGRUNTIME PyTypeObject*
SwigPyPacked_TypeOnce(void) {
  static char swigpacked_doc[] = "Swig object carries a C/C++ instance pointer";
  static PyTypeObject swigpypacked_type;
  static int type_init = 0;
  if (!type_init) {
    const PyTypeObject tmp = {
#if PY_VERSION_HEX>=0x03000000
      PyVarObject_HEAD_INIT(NULL, 0)
#else
      PyObject_HEAD_INIT(NULL)
      0,                                    /* ob_size */
#endif
      "SwigPyPacked",                       /* tp_name */
      sizeof(SwigPyPacked),                 /* tp_basicsize */
      0,                                    /* tp_itemsize */
      (destructor)SwigPyPacked_dealloc,     /* tp_dealloc */
      0,                                    /* tp_print */
      (getattrfunc)0,                       /* tp_getattr */
      (setattrfunc)0,                       /* tp_setattr */
#if PY_VERSION_HEX>=0x03000000
      0, /* tp_reserved in 3.0.1 */
#else
      (cmpfunc)SwigPyPacked_compare,        /* tp_compare */
#endif
      (reprfunc)SwigPyPacked_repr,          /* tp_repr */
      0,                                    /* tp_as_number */
      0,                                    /* tp_as_sequence */
      0,                                    /* tp_as_mapping */
      (hashfunc)0,                          /* tp_hash */
      (ternaryfunc)0,                       /* tp_call */
      (reprfunc)SwigPyPacked_str,           /* tp_str */
      PyObject_GenericGetAttr,              /* tp_getattro */
      0,                                    /* tp_setattro */
      0,                                    /* tp_as_buffer */
      Py_TPFLAGS_DEFAULT,                   /* tp_flags */
      swigpacked_doc,                       /* tp_doc */
      0,                                    /* tp_traverse */
      0,                                    /* tp_clear */
      0,                                    /* tp_richcompare */
      0,                                    /* tp_weaklistoffset */
      0,                                    /* tp_iter */
      0,                                    /* tp_iternext */
      0,                                    /* tp_methods */
      0,                                    /* tp_members */
      0,                                    /* tp_getset */
      0,                                    /* tp_base */
      0,                                    /* tp_dict */
      0,                                    /* tp_descr_get */
      0,                                    /* tp_descr_set */
      0,                                    /* tp_dictoffset */
      0,                                    /* tp_init */
      0,                                    /* tp_alloc */
      0,                                    /* tp_new */
      0,                                    /* tp_free */
      0,                                    /* tp_is_gc */
      0,                                    /* tp_bases */
      0,                                    /* tp_mro */
      0,                                    /* tp_cache */
      0,                                    /* tp_subclasses */
      0,                                    /* tp_weaklist */
      0,                                    /* tp_del */
      0,                                    /* tp_version_tag */
#if PY_VERSION_HEX >= 0x03040000
      0,                                    /* tp_finalize */
#endif
#if PY_VERSION_HEX >= 0x03080000
      0,                                    /* tp_vectorcall */
#endif
#if (PY_VERSION_HEX >= 0x03080000) && (PY_VERSION_HEX < 0x03090000)
      0,                                    /* tp_print */
#endif
#ifdef COUNT_ALLOCS
      0,                                    /* tp_allocs */
      0,                                    /* tp_frees */
      0,                                    /* tp_maxalloc */
      0,                                    /* tp_prev */
      0                                     /* tp_next */
#endif
    };
    swigpypacked_type = tmp;
    type_init = 1;
    if (PyType_Ready(&swigpypacked_type) != 0)
      return NULL;
  }
  return &swigpypacked_type;
}

SWIGRUNTIME PyObject *
SwigPyPacked_New(void *ptr, size_t size, swig_type_info *ty)
{
  SwigPyPacked *sobj = PyObject_NEW(SwigPyPacked, SwigPyPacked_type());
  if (sobj) {
    void *pack = malloc(size);
    if (pack) {
      memcpy(pack, ptr, size);
      sobj->pack = pack;
      sobj->ty   = ty;
      sobj->size = size;
    } else {
      PyObject_DEL((PyObject *) sobj);
      sobj = 0;
    }
  }
  return (PyObject *) sobj;
}

SWIGRUNTIME swig_type_info *
SwigPyPacked_UnpackData(PyObject *obj, void *ptr, size_t size)
{
  if (SwigPyPacked_Check(obj)) {
    SwigPyPacked *sobj = (SwigPyPacked *)obj;
    if (sobj->size != size) return 0;
    memcpy(ptr, sobj->pack, size);
    return sobj->ty;
  } else {
    return 0;
  }
}

/* -----------------------------------------------------------------------------
 * pointers/data manipulation
 * ----------------------------------------------------------------------------- */

static PyObject *Swig_This_global = NULL;

SWIGRUNTIME PyObject *
SWIG_This(void)
{
  if (Swig_This_global == NULL)
    Swig_This_global = SWIG_Python_str_FromChar("this");
  return Swig_This_global;
}

/* #define SWIG_PYTHON_SLOW_GETSET_THIS */

/* TODO: I don't know how to implement the fast getset in Python 3 right now */
#if PY_VERSION_HEX>=0x03000000
#define SWIG_PYTHON_SLOW_GETSET_THIS 
#endif

SWIGRUNTIME SwigPyObject *
SWIG_Python_GetSwigThis(PyObject *pyobj) 
{
  PyObject *obj;

  if (SwigPyObject_Check(pyobj))
    return (SwigPyObject *) pyobj;

#ifdef SWIGPYTHON_BUILTIN
  (void)obj;
# ifdef PyWeakref_CheckProxy
  if (PyWeakref_CheckProxy(pyobj)) {
    pyobj = PyWeakref_GET_OBJECT(pyobj);
    if (pyobj && SwigPyObject_Check(pyobj))
      return (SwigPyObject*) pyobj;
  }
# endif
  return NULL;
#else

  obj = 0;

#if !defined(SWIG_PYTHON_SLOW_GETSET_THIS)
  if (PyInstance_Check(pyobj)) {
    obj = _PyInstance_Lookup(pyobj, SWIG_This());      
  } else {
    PyObject **dictptr = _PyObject_GetDictPtr(pyobj);
    if (dictptr != NULL) {
      PyObject *dict = *dictptr;
      obj = dict ? PyDict_GetItem(dict, SWIG_This()) : 0;
    } else {
#ifdef PyWeakref_CheckProxy
      if (PyWeakref_CheckProxy(pyobj)) {
	PyObject *wobj = PyWeakref_GET_OBJECT(pyobj);
	return wobj ? SWIG_Python_GetSwigThis(wobj) : 0;
      }
#endif
      obj = PyObject_GetAttr(pyobj,SWIG_This());
      if (obj) {
	Py_DECREF(obj);
      } else {
	if (PyErr_Occurred()) PyErr_Clear();
	return 0;
      }
    }
  }
#else
  obj = PyObject_GetAttr(pyobj,SWIG_This());
  if (obj) {
    Py_DECREF(obj);
  } else {
    if (PyErr_Occurred()) PyErr_Clear();
    return 0;
  }
#endif
  if (obj && !SwigPyObject_Check(obj)) {
    /* a PyObject is called 'this', try to get the 'real this'
       SwigPyObject from it */ 
    return SWIG_Python_GetSwigThis(obj);
  }
  return (SwigPyObject *)obj;
#endif
}

/* Acquire a pointer value */

SWIGRUNTIME int
SWIG_Python_AcquirePtr(PyObject *obj, int own) {
  if (own == SWIG_POINTER_OWN) {
    SwigPyObject *sobj = SWIG_Python_GetSwigThis(obj);
    if (sobj) {
      int oldown = sobj->own;
      sobj->own = own;
      return oldown;
    }
  }
  return 0;
}

/* Convert a pointer value */

SWIGRUNTIME int
SWIG_Python_ConvertPtrAndOwn(PyObject *obj, void **ptr, swig_type_info *ty, int flags, int *own) {
  int res;
  SwigPyObject *sobj;
  int implicit_conv = (flags & SWIG_POINTER_IMPLICIT_CONV) != 0;

  if (!obj)
    return SWIG_ERROR;
  if (obj == Py_None && !implicit_conv) {
    if (ptr)
      *ptr = 0;
    return (flags & SWIG_POINTER_NO_NULL) ? SWIG_NullReferenceError : SWIG_OK;
  }

  res = SWIG_ERROR;

  sobj = SWIG_Python_GetSwigThis(obj);
  if (own)
    *own = 0;
  while (sobj) {
    void *vptr = sobj->ptr;
    if (ty) {
      swig_type_info *to = sobj->ty;
      if (to == ty) {
        /* no type cast needed */
        if (ptr) *ptr = vptr;
        break;
      } else {
        swig_cast_info *tc = SWIG_TypeCheck(to->name,ty);
        if (!tc) {
          sobj = (SwigPyObject *)sobj->next;
        } else {
          if (ptr) {
            int newmemory = 0;
            *ptr = SWIG_TypeCast(tc,vptr,&newmemory);
            if (newmemory == SWIG_CAST_NEW_MEMORY) {
              assert(own); /* badly formed typemap which will lead to a memory leak - it must set and use own to delete *ptr */
              if (own)
                *own = *own | SWIG_CAST_NEW_MEMORY;
            }
          }
          break;
        }
      }
    } else {
      if (ptr) *ptr = vptr;
      break;
    }
  }
  if (sobj) {
    if (own)
      *own = *own | sobj->own;
    if (flags & SWIG_POINTER_DISOWN) {
      sobj->own = 0;
    }
    res = SWIG_OK;
  } else {
    if (implicit_conv) {
      SwigPyClientData *data = ty ? (SwigPyClientData *) ty->clientdata : 0;
      if (data && !data->implicitconv) {
        PyObject *klass = data->klass;
        if (klass) {
          PyObject *impconv;
          data->implicitconv = 1; /* avoid recursion and call 'explicit' constructors*/
          impconv = SWIG_Python_CallFunctor(klass, obj);
          data->implicitconv = 0;
          if (PyErr_Occurred()) {
            PyErr_Clear();
            impconv = 0;
          }
          if (impconv) {
            SwigPyObject *iobj = SWIG_Python_GetSwigThis(impconv);
            if (iobj) {
              void *vptr;
              res = SWIG_Python_ConvertPtrAndOwn((PyObject*)iobj, &vptr, ty, 0, 0);
              if (SWIG_IsOK(res)) {
                if (ptr) {
                  *ptr = vptr;
                  /* transfer the ownership to 'ptr' */
                  iobj->own = 0;
                  res = SWIG_AddCast(res);
                  res = SWIG_AddNewMask(res);
                } else {
                  res = SWIG_AddCast(res);		    
                }
              }
            }
            Py_DECREF(impconv);
          }
        }
      }
      if (!SWIG_IsOK(res) && obj == Py_None) {
        if (ptr)
          *ptr = 0;
        if (PyErr_Occurred())
          PyErr_Clear();
        res = SWIG_OK;
      }
    }
  }
  return res;
}

/* Convert a function ptr value */

SWIGRUNTIME int
SWIG_Python_ConvertFunctionPtr(PyObject *obj, void **ptr, swig_type_info *ty) {
  if (!PyCFunction_Check(obj)) {
    return SWIG_ConvertPtr(obj, ptr, ty, 0);
  } else {
    void *vptr = 0;
    swig_cast_info *tc;

    /* here we get the method pointer for callbacks */
    const char *doc = (((PyCFunctionObject *)obj) -> m_ml -> ml_doc);
    const char *desc = doc ? strstr(doc, "swig_ptr: ") : 0;
    if (desc)
      desc = ty ? SWIG_UnpackVoidPtr(desc + 10, &vptr, ty->name) : 0;
    if (!desc)
      return SWIG_ERROR;
    tc = SWIG_TypeCheck(desc,ty);
    if (tc) {
      int newmemory = 0;
      *ptr = SWIG_TypeCast(tc,vptr,&newmemory);
      assert(!newmemory); /* newmemory handling not yet implemented */
    } else {
      return SWIG_ERROR;
    }
    return SWIG_OK;
  }
}

/* Convert a packed pointer value */

SWIGRUNTIME int
SWIG_Python_ConvertPacked(PyObject *obj, void *ptr, size_t sz, swig_type_info *ty) {
  swig_type_info *to = SwigPyPacked_UnpackData(obj, ptr, sz);
  if (!to) return SWIG_ERROR;
  if (ty) {
    if (to != ty) {
      /* check type cast? */
      swig_cast_info *tc = SWIG_TypeCheck(to->name,ty);
      if (!tc) return SWIG_ERROR;
    }
  }
  return SWIG_OK;
}  

/* -----------------------------------------------------------------------------
 * Create a new pointer object
 * ----------------------------------------------------------------------------- */

/*
  Create a new instance object, without calling __init__, and set the
  'this' attribute.
*/

SWIGRUNTIME PyObject* 
SWIG_Python_NewShadowInstance(SwigPyClientData *data, PyObject *swig_this)
{
  PyObject *inst = 0;
  PyObject *newraw = data->newraw;
  if (newraw) {
    inst = PyObject_Call(newraw, data->newargs, NULL);
    if (inst) {
#if !defined(SWIG_PYTHON_SLOW_GETSET_THIS)
      PyObject **dictptr = _PyObject_GetDictPtr(inst);
      if (dictptr != NULL) {
        PyObject *dict = *dictptr;
        if (dict == NULL) {
          dict = PyDict_New();
          *dictptr = dict;
        }
        if (dict) {
          PyDict_SetItem(dict, SWIG_This(), swig_this);
        } else{
          Py_DECREF(inst);
          inst = 0;
        }
      }
#else
      if (PyObject_SetAttr(inst, SWIG_This(), swig_this) == -1) {
        Py_DECREF(inst);
        inst = 0;
      }
#endif
    }
  } else {
#if PY_VERSION_HEX >= 0x03000000
    PyObject *empty_args = PyTuple_New(0);
    if (empty_args) {
      PyObject *empty_kwargs = PyDict_New();
      if (empty_kwargs) {
        inst = ((PyTypeObject *)data->newargs)->tp_new((PyTypeObject *)data->newargs, empty_args, empty_kwargs);
        Py_DECREF(empty_kwargs);
        if (inst) {
          if (PyObject_SetAttr(inst, SWIG_This(), swig_this) == -1) {
            Py_DECREF(inst);
            inst = 0;
          } else {
            Py_TYPE(inst)->tp_flags &= ~Py_TPFLAGS_VALID_VERSION_TAG;
          }
        }
      }
      Py_DECREF(empty_args);
    }
#else
    PyObject *dict = PyDict_New();
    if (dict) {
      PyDict_SetItem(dict, SWIG_This(), swig_this);
      inst = PyInstance_NewRaw(data->newargs, dict);
      Py_DECREF(dict);
    }
#endif
  }
  return inst;
}

SWIGRUNTIME int
SWIG_Python_SetSwigThis(PyObject *inst, PyObject *swig_this)
{
#if !defined(SWIG_PYTHON_SLOW_GETSET_THIS)
  PyObject **dictptr = _PyObject_GetDictPtr(inst);
  if (dictptr != NULL) {
    PyObject *dict = *dictptr;
    if (dict == NULL) {
      dict = PyDict_New();
      *dictptr = dict;
    }
    if (dict) {
      return PyDict_SetItem(dict, SWIG_This(), swig_this);
    } else{
      return -1;
    }
  }
#endif
  return PyObject_SetAttr(inst, SWIG_This(), swig_this);
} 


SWIGINTERN PyObject *
SWIG_Python_InitShadowInstance(PyObject *args) {
  PyObject *obj[2];
  if (!SWIG_Python_UnpackTuple(args, "swiginit", 2, 2, obj)) {
    return NULL;
  } else {
    SwigPyObject *sthis = SWIG_Python_GetSwigThis(obj[0]);
    if (sthis) {
      Py_DECREF(SwigPyObject_append((PyObject*) sthis, obj[1]));
    } else {
      if (SWIG_Python_SetSwigThis(obj[0], obj[1]) != 0)
        return NULL;
    }
    return SWIG_Py_Void();
  }
}

/* Create a new pointer object */

SWIGRUNTIME PyObject *
SWIG_Python_NewPointerObj(PyObject *self, void *ptr, swig_type_info *type, int flags) {
  SwigPyClientData *clientdata;
  PyObject * robj;
  int own;

  if (!ptr)
    return SWIG_Py_Void();

  clientdata = type ? (SwigPyClientData *)(type->clientdata) : 0;
  own = (flags & SWIG_POINTER_OWN) ? SWIG_POINTER_OWN : 0;
  if (clientdata && clientdata->pytype) {
    SwigPyObject *newobj;
    if (flags & SWIG_BUILTIN_TP_INIT) {
      newobj = (SwigPyObject*) self;
      if (newobj->ptr) {
        PyObject *next_self = clientdata->pytype->tp_alloc(clientdata->pytype, 0);
        while (newobj->next)
	  newobj = (SwigPyObject *) newobj->next;
        newobj->next = next_self;
        newobj = (SwigPyObject *)next_self;
#ifdef SWIGPYTHON_BUILTIN
        newobj->dict = 0;
#endif
      }
    } else {
      newobj = PyObject_New(SwigPyObject, clientdata->pytype);
#ifdef SWIGPYTHON_BUILTIN
      if (newobj) {
        newobj->dict = 0;
      }
#endif
    }
    if (newobj) {
      newobj->ptr = ptr;
      newobj->ty = type;
      newobj->own = own;
      newobj->next = 0;
      return (PyObject*) newobj;
    }
    return SWIG_Py_Void();
  }

  assert(!(flags & SWIG_BUILTIN_TP_INIT));

  robj = SwigPyObject_New(ptr, type, own);
  if (robj && clientdata && !(flags & SWIG_POINTER_NOSHADOW)) {
    PyObject *inst = SWIG_Python_NewShadowInstance(clientdata, robj);
    Py_DECREF(robj);
    robj = inst;
  }
  return robj;
}

/* Create a new packed object */

SWIGRUNTIMEINLINE PyObject *
SWIG_Python_NewPackedObj(void *ptr, size_t sz, swig_type_info *type) {
  return ptr ? SwigPyPacked_New((void *) ptr, sz, type) : SWIG_Py_Void();
}

/* -----------------------------------------------------------------------------*
 *  Get type list 
 * -----------------------------------------------------------------------------*/

#ifdef SWIG_LINK_RUNTIME
void *SWIG_ReturnGlobalTypeList(void *);
#endif

static PyObject *Swig_TypeCache_global = NULL;

/* The python cached type query */
SWIGRUNTIME PyObject *
SWIG_Python_TypeCache(void) {
  if (Swig_TypeCache_global == NULL) {
    Swig_TypeCache_global = PyDict_New();
  }
  return Swig_TypeCache_global;
}

SWIGRUNTIME swig_module_info *
SWIG_Python_GetModule(void *SWIGUNUSEDPARM(clientdata)) {
  static void *type_pointer = (void *)0;
  /* first check if module already created */
  if (!type_pointer) {
#ifdef SWIG_LINK_RUNTIME
    type_pointer = SWIG_ReturnGlobalTypeList((void *)0);
#else
    type_pointer = PyCapsule_Import(SWIGPY_CAPSULE_NAME, 0);
    if (PyErr_Occurred()) {
      PyErr_Clear();
      type_pointer = (void *)0;
    }
#endif
  }
  return (swig_module_info *) type_pointer;
}

SWIGRUNTIME void
SWIG_Python_DestroyModule(PyObject *obj)
{
  swig_module_info *swig_module = (swig_module_info *) PyCapsule_GetPointer(obj, SWIGPY_CAPSULE_NAME);
  swig_type_info **types = swig_module->types;
  size_t i;
  for (i =0; i < swig_module->size; ++i) {
    swig_type_info *ty = types[i];
    if (ty->owndata) {
      SwigPyClientData *data = (SwigPyClientData *) ty->clientdata;
      ty->clientdata = 0;
      if (data) SwigPyClientData_Del(data);
    }
  }
  Py_DECREF(SWIG_This());
  Swig_This_global = NULL;
  Py_DECREF(SWIG_globals());
  Swig_Globals_global = NULL;
  Py_DECREF(SWIG_Python_TypeCache());
  Swig_TypeCache_global = NULL;
  Swig_Capsule_global = NULL;
}

SWIGRUNTIME void
SWIG_Python_SetModule(swig_module_info *swig_module) {
#if PY_VERSION_HEX >= 0x03000000
 /* Add a dummy module object into sys.modules */
  PyObject *module = PyImport_AddModule("swig_runtime_data" SWIG_RUNTIME_VERSION);
#else
  static PyMethodDef swig_empty_runtime_method_table[] = { {NULL, NULL, 0, NULL} }; /* Sentinel */
  PyObject *module = Py_InitModule("swig_runtime_data" SWIG_RUNTIME_VERSION, swig_empty_runtime_method_table);
#endif
  PyObject *pointer = PyCapsule_New((void *) swig_module, SWIGPY_CAPSULE_NAME, SWIG_Python_DestroyModule);
  if (pointer && module) {
    if (PyModule_AddObject(module, SWIGPY_CAPSULE_ATTR_NAME, pointer) == 0) {
      Swig_Capsule_global = pointer;
    } else {
      Py_DECREF(pointer);
    }
  } else {
    Py_XDECREF(pointer);
  }
}

SWIGRUNTIME swig_type_info *
SWIG_Python_TypeQuery(const char *type)
{
  PyObject *cache = SWIG_Python_TypeCache();
  PyObject *key = SWIG_Python_str_FromChar(type); 
  PyObject *obj = PyDict_GetItem(cache, key);
  swig_type_info *descriptor;
  if (obj) {
    descriptor = (swig_type_info *) PyCapsule_GetPointer(obj, NULL);
  } else {
    swig_module_info *swig_module = SWIG_GetModule(0);
    descriptor = SWIG_TypeQueryModule(swig_module, swig_module, type);
    if (descriptor) {
      obj = PyCapsule_New((void*) descriptor, NULL, NULL);
      if (obj) {
        PyDict_SetItem(cache, key, obj);
        Py_DECREF(obj);
      }
    }
  }
  Py_DECREF(key);
  return descriptor;
}

/* 
   For backward compatibility only
*/
#define SWIG_POINTER_EXCEPTION  0
#define SWIG_arg_fail(arg)      SWIG_Python_ArgFail(arg)
#define SWIG_MustGetPtr(p, type, argnum, flags)  SWIG_Python_MustGetPtr(p, type, argnum, flags)

SWIGRUNTIME int
SWIG_Python_AddErrMesg(const char* mesg, int infront)
{  
  if (PyErr_Occurred()) {
    PyObject *type = 0;
    PyObject *value = 0;
    PyObject *traceback = 0;
    PyErr_Fetch(&type, &value, &traceback);
    if (value) {
      PyObject *old_str = PyObject_Str(value);
      const char *tmp = SWIG_Python_str_AsChar(old_str);
      const char *errmesg = tmp ? tmp : "Invalid error message";
      Py_XINCREF(type);
      PyErr_Clear();
      if (infront) {
	PyErr_Format(type, "%s %s", mesg, errmesg);
      } else {
	PyErr_Format(type, "%s %s", errmesg, mesg);
      }
      SWIG_Python_str_DelForPy3(tmp);
      Py_DECREF(old_str);
    }
    return 1;
  } else {
    return 0;
  }
}
  
SWIGRUNTIME int
SWIG_Python_ArgFail(int argnum)
{
  if (PyErr_Occurred()) {
    /* add information about failing argument */
    char mesg[256];
    PyOS_snprintf(mesg, sizeof(mesg), "argument number %d:", argnum);
    return SWIG_Python_AddErrMesg(mesg, 1);
  } else {
    return 0;
  }
}

SWIGRUNTIMEINLINE const char *
SwigPyObject_GetDesc(PyObject *self)
{
  SwigPyObject *v = (SwigPyObject *)self;
  swig_type_info *ty = v ? v->ty : 0;
  return ty ? ty->str : "";
}

SWIGRUNTIME void
SWIG_Python_TypeError(const char *type, PyObject *obj)
{
  if (type) {
#if defined(SWIG_COBJECT_TYPES)
    if (obj && SwigPyObject_Check(obj)) {
      const char *otype = (const char *) SwigPyObject_GetDesc(obj);
      if (otype) {
	PyErr_Format(PyExc_TypeError, "a '%s' is expected, 'SwigPyObject(%s)' is received",
		     type, otype);
	return;
      }
    } else 
#endif      
    {
      const char *otype = (obj ? obj->ob_type->tp_name : 0); 
      if (otype) {
	PyObject *str = PyObject_Str(obj);
	const char *cstr = str ? SWIG_Python_str_AsChar(str) : 0;
	if (cstr) {
	  PyErr_Format(PyExc_TypeError, "a '%s' is expected, '%s(%s)' is received",
		       type, otype, cstr);
          SWIG_Python_str_DelForPy3(cstr);
	} else {
	  PyErr_Format(PyExc_TypeError, "a '%s' is expected, '%s' is received",
		       type, otype);
	}
	Py_XDECREF(str);
	return;
      }
    }   
    PyErr_Format(PyExc_TypeError, "a '%s' is expected", type);
  } else {
    PyErr_Format(PyExc_TypeError, "unexpected type is received");
  }
}


/* Convert a pointer value, signal an exception on a type mismatch */
SWIGRUNTIME void *
SWIG_Python_MustGetPtr(PyObject *obj, swig_type_info *ty, int SWIGUNUSEDPARM(argnum), int flags) {
  void *result;
  if (SWIG_Python_ConvertPtr(obj, &result, ty, flags) == -1) {
    PyErr_Clear();
#if SWIG_POINTER_EXCEPTION
    if (flags) {
      SWIG_Python_TypeError(SWIG_TypePrettyName(ty), obj);
      SWIG_Python_ArgFail(argnum);
    }
#endif
  }
  return result;
}

#ifdef SWIGPYTHON_BUILTIN
SWIGRUNTIME int
SWIG_Python_NonDynamicSetAttr(PyObject *obj, PyObject *name, PyObject *value) {
  PyTypeObject *tp = obj->ob_type;
  PyObject *descr;
  PyObject *encoded_name;
  descrsetfunc f;
  int res = -1;

# ifdef Py_USING_UNICODE
  if (PyString_Check(name)) {
    name = PyUnicode_Decode(PyString_AsString(name), PyString_Size(name), NULL, NULL);
    if (!name)
      return -1;
  } else if (!PyUnicode_Check(name))
# else
  if (!PyString_Check(name))
# endif
  {
    PyErr_Format(PyExc_TypeError, "attribute name must be string, not '%.200s'", name->ob_type->tp_name);
    return -1;
  } else {
    Py_INCREF(name);
  }

  if (!tp->tp_dict) {
    if (PyType_Ready(tp) != 0)
      goto done;
  }

  descr = _PyType_Lookup(tp, name);
  f = NULL;
  if (descr != NULL)
    f = descr->ob_type->tp_descr_set;
  if (!f) {
    if (PyString_Check(name)) {
      encoded_name = name;
      Py_INCREF(name);
    } else {
      encoded_name = PyUnicode_AsUTF8String(name);
      if (!encoded_name)
        goto done;
    }
    PyErr_Format(PyExc_AttributeError, "'%.100s' object has no attribute '%.200s'", tp->tp_name, PyString_AsString(encoded_name));
    Py_DECREF(encoded_name);
  } else {
    res = f(descr, obj, value);
  }
  
  done:
  Py_DECREF(name);
  return res;
}
#endif


#ifdef __cplusplus
}
#endif



#define SWIG_exception_fail(code, msg) do { SWIG_Error(code, msg); SWIG_fail; } while(0) 

#define SWIG_contract_assert(expr, msg) do { if (!(expr)) { SWIG_Error(SWIG_RuntimeError, msg); SWIG_fail; } } while (0) 



  #define SWIG_exception(code, msg) do { SWIG_Error(code, msg); SWIG_fail;; } while(0) 


/* -------- TYPES TABLE (BEGIN) -------- */

#define SWIGTYPE_p_FILE_TYPE swig_types[0]
#define SWIGTYPE_p_Skini__Message swig_types[1]
#define SWIGTYPE_p_THREAD_FUNCTION swig_types[2]
#define SWIGTYPE_p_Vector3D swig_types[3]
#define SWIGTYPE_p_char swig_types[4]
#define SWIGTYPE_p_double swig_types[5]
#define SWIGTYPE_p_float swig_types[6]
#define SWIGTYPE_p_int swig_types[7]
#define SWIGTYPE_p_long_long swig_types[8]
#define SWIGTYPE_p_p_char swig_types[9]
#define SWIGTYPE_p_short swig_types[10]
#define SWIGTYPE_p_signed_char swig_types[11]
#define SWIGTYPE_p_std__string swig_types[12]
#define SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t swig_types[13]
#define SWIGTYPE_p_std__vectorT_unsigned_char_std__allocatorT_unsigned_char_t_t swig_types[14]
#define SWIGTYPE_p_std__vectorT_unsigned_long_std__allocatorT_unsigned_long_t_t swig_types[15]
#define SWIGTYPE_p_stk__ADSR swig_types[16]
#define SWIGTYPE_p_stk__Asymp swig_types[17]
#define SWIGTYPE_p_stk__BandedWG swig_types[18]
#define SWIGTYPE_p_stk__BeeThree swig_types[19]
#define SWIGTYPE_p_stk__BiQuad swig_types[20]
#define SWIGTYPE_p_stk__Blit swig_types[21]
#define SWIGTYPE_p_stk__BlitSaw swig_types[22]
#define SWIGTYPE_p_stk__BlitSquare swig_types[23]
#define SWIGTYPE_p_stk__BlowBotl swig_types[24]
#define SWIGTYPE_p_stk__BlowHole swig_types[25]
#define SWIGTYPE_p_stk__BowTable swig_types[26]
#define SWIGTYPE_p_stk__Bowed swig_types[27]
#define SWIGTYPE_p_stk__Brass swig_types[28]
#define SWIGTYPE_p_stk__Chorus swig_types[29]
#define SWIGTYPE_p_stk__Clarinet swig_types[30]
#define SWIGTYPE_p_stk__Cubic swig_types[31]
#define SWIGTYPE_p_stk__Delay swig_types[32]
#define SWIGTYPE_p_stk__DelayA swig_types[33]
#define SWIGTYPE_p_stk__DelayL swig_types[34]
#define SWIGTYPE_p_stk__Drummer swig_types[35]
#define SWIGTYPE_p_stk__Echo swig_types[36]
#define SWIGTYPE_p_stk__Effect swig_types[37]
#define SWIGTYPE_p_stk__Envelope swig_types[38]
#define SWIGTYPE_p_stk__FM swig_types[39]
#define SWIGTYPE_p_stk__FMVoices swig_types[40]
#define SWIGTYPE_p_stk__FileLoop swig_types[41]
#define SWIGTYPE_p_stk__FileRead swig_types[42]
#define SWIGTYPE_p_stk__FileWrite swig_types[43]
#define SWIGTYPE_p_stk__FileWvIn swig_types[44]
#define SWIGTYPE_p_stk__FileWvOut swig_types[45]
#define SWIGTYPE_p_stk__Filter swig_types[46]
#define SWIGTYPE_p_stk__Fir swig_types[47]
#define SWIGTYPE_p_stk__Flute swig_types[48]
#define SWIGTYPE_p_stk__FormSwep swig_types[49]
#define SWIGTYPE_p_stk__FreeVerb swig_types[50]
#define SWIGTYPE_p_stk__Function swig_types[51]
#define SWIGTYPE_p_stk__Generator swig_types[52]
#define SWIGTYPE_p_stk__Granulate swig_types[53]
#define SWIGTYPE_p_stk__Guitar swig_types[54]
#define SWIGTYPE_p_stk__HevyMetl swig_types[55]
#define SWIGTYPE_p_stk__Iir swig_types[56]
#define SWIGTYPE_p_stk__InetWvIn swig_types[57]
#define SWIGTYPE_p_stk__InetWvOut swig_types[58]
#define SWIGTYPE_p_stk__Instrmnt swig_types[59]
#define SWIGTYPE_p_stk__JCRev swig_types[60]
#define SWIGTYPE_p_stk__JetTable swig_types[61]
#define SWIGTYPE_p_stk__LentPitShift swig_types[62]
#define SWIGTYPE_p_stk__Mandolin swig_types[63]
#define SWIGTYPE_p_stk__Mesh2D swig_types[64]
#define SWIGTYPE_p_stk__Messager swig_types[65]
#define SWIGTYPE_p_stk__MidiFileIn swig_types[66]
#define SWIGTYPE_p_stk__Modal swig_types[67]
#define SWIGTYPE_p_stk__ModalBar swig_types[68]
#define SWIGTYPE_p_stk__Modulate swig_types[69]
#define SWIGTYPE_p_stk__Moog swig_types[70]
#define SWIGTYPE_p_stk__Mutex swig_types[71]
#define SWIGTYPE_p_stk__NRev swig_types[72]
#define SWIGTYPE_p_stk__Noise swig_types[73]
#define SWIGTYPE_p_stk__OnePole swig_types[74]
#define SWIGTYPE_p_stk__OneZero swig_types[75]
#define SWIGTYPE_p_stk__PRCRev swig_types[76]
#define SWIGTYPE_p_stk__PercFlut swig_types[77]
#define SWIGTYPE_p_stk__Phonemes swig_types[78]
#define SWIGTYPE_p_stk__PitShift swig_types[79]
#define SWIGTYPE_p_stk__Plucked swig_types[80]
#define SWIGTYPE_p_stk__PoleZero swig_types[81]
#define SWIGTYPE_p_stk__Recorder swig_types[82]
#define SWIGTYPE_p_stk__ReedTable swig_types[83]
#define SWIGTYPE_p_stk__Resonate swig_types[84]
#define SWIGTYPE_p_stk__Rhodey swig_types[85]
#define SWIGTYPE_p_stk__RtWvIn swig_types[86]
#define SWIGTYPE_p_stk__RtWvOut swig_types[87]
#define SWIGTYPE_p_stk__Sampler swig_types[88]
#define SWIGTYPE_p_stk__Saxofony swig_types[89]
#define SWIGTYPE_p_stk__Shakers swig_types[90]
#define SWIGTYPE_p_stk__Simple swig_types[91]
#define SWIGTYPE_p_stk__SineWave swig_types[92]
#define SWIGTYPE_p_stk__SingWave swig_types[93]
#define SWIGTYPE_p_stk__Sitar swig_types[94]
#define SWIGTYPE_p_stk__Socket swig_types[95]
#define SWIGTYPE_p_stk__Sphere swig_types[96]
#define SWIGTYPE_p_stk__StifKarp swig_types[97]
#define SWIGTYPE_p_stk__Stk swig_types[98]
#define SWIGTYPE_p_stk__StkError swig_types[99]
#define SWIGTYPE_p_stk__StkFrames swig_types[100]
#define SWIGTYPE_p_stk__TapDelay swig_types[101]
#define SWIGTYPE_p_stk__TcpClient swig_types[102]
#define SWIGTYPE_p_stk__TcpServer swig_types[103]
#define SWIGTYPE_p_stk__Thread swig_types[104]
#define SWIGTYPE_p_stk__TubeBell swig_types[105]
#define SWIGTYPE_p_stk__Twang swig_types[106]
#define SWIGTYPE_p_stk__TwoPole swig_types[107]
#define SWIGTYPE_p_stk__TwoZero swig_types[108]
#define SWIGTYPE_p_stk__UdpSocket swig_types[109]
#define SWIGTYPE_p_stk__Vector3D swig_types[110]
#define SWIGTYPE_p_stk__VoicForm swig_types[111]
#define SWIGTYPE_p_stk__Voicer swig_types[112]
#define SWIGTYPE_p_stk__Whistle swig_types[113]
#define SWIGTYPE_p_stk__Wurley swig_types[114]
#define SWIGTYPE_p_swig__SwigPyIterator swig_types[115]
#define SWIGTYPE_p_unsigned_char swig_types[116]
#define SWIGTYPE_p_unsigned_int swig_types[117]
#define SWIGTYPE_p_unsigned_long_long swig_types[118]
#define SWIGTYPE_p_unsigned_short swig_types[119]
static swig_type_info *swig_types[121];
static swig_module_info swig_module = {swig_types, 120, 0, 0, 0, 0};
#define SWIG_TypeQuery(name) SWIG_TypeQueryModule(&swig_module, &swig_module, name)
#define SWIG_MangledTypeQuery(name) SWIG_MangledTypeQueryModule(&swig_module, &swig_module, name)

/* -------- TYPES TABLE (END) -------- */

#ifdef SWIG_TypeQuery
# undef SWIG_TypeQuery
#endif
#define SWIG_TypeQuery SWIG_Python_TypeQuery

/*-----------------------------------------------
              @(target):= _stk.so
  ------------------------------------------------*/
#if PY_VERSION_HEX >= 0x03000000
#  define SWIG_init    PyInit__stk

#else
#  define SWIG_init    init_stk

#endif
#define SWIG_name    "_stk"

#define SWIGVERSION 0x040100 
#define SWIG_VERSION SWIGVERSION


#define SWIG_as_voidptr(a) const_cast< void * >(static_cast< const void * >(a)) 
#define SWIG_as_voidptrptr(a) ((void)SWIG_as_voidptr(*a),reinterpret_cast< void** >(a)) 


#include <stdexcept>


namespace swig {
  class SwigPtr_PyObject {
  protected:
    PyObject *_obj;

  public:
    SwigPtr_PyObject() :_obj(0)
    {
    }

    SwigPtr_PyObject(const SwigPtr_PyObject& item) : _obj(item._obj)
    {
      SWIG_PYTHON_THREAD_BEGIN_BLOCK;
      Py_XINCREF(_obj);      
      SWIG_PYTHON_THREAD_END_BLOCK;
    }
    
    SwigPtr_PyObject(PyObject *obj, bool initial_ref = true) :_obj(obj)
    {
      if (initial_ref) {
        SWIG_PYTHON_THREAD_BEGIN_BLOCK;
        Py_XINCREF(_obj);
        SWIG_PYTHON_THREAD_END_BLOCK;
      }
    }
    
    SwigPtr_PyObject & operator=(const SwigPtr_PyObject& item) 
    {
      SWIG_PYTHON_THREAD_BEGIN_BLOCK;
      Py_XINCREF(item._obj);
      Py_XDECREF(_obj);
      _obj = item._obj;
      SWIG_PYTHON_THREAD_END_BLOCK;
      return *this;      
    }
    
    ~SwigPtr_PyObject() 
    {
      SWIG_PYTHON_THREAD_BEGIN_BLOCK;
      Py_XDECREF(_obj);
      SWIG_PYTHON_THREAD_END_BLOCK;
    }
    
    operator PyObject *() const
    {
      return _obj;
    }

    PyObject *operator->() const
    {
      return _obj;
    }
  };
}


namespace swig {
  struct SwigVar_PyObject : SwigPtr_PyObject {
    SwigVar_PyObject(PyObject* obj = 0) : SwigPtr_PyObject(obj, false) { }
    
    SwigVar_PyObject & operator = (PyObject* obj)
    {
      Py_XDECREF(_obj);
      _obj = obj;
      return *this;      
    }
  };
}



#define __OS_LINUX__
#include <Stk.h>
#include <Generator.h>
#include <Instrmnt.h>
#include <FM.h>
#include <Filter.h>
#include <Effect.h>
#include <Function.h>

#include <WvIn.h>
#include <WvOut.h>
#include <Sampler.h>
#include <ADSR.h>
#include <Asymp.h>
#include <BandedWG.h>
#include <BeeThree.h>
#include <BiQuad.h>
#include <Blit.h>
#include <BlitSaw.h>
#include <BlitSquare.h>
#include <BlowBotl.h>
#include <BlowHole.h>
#include <BowTable.h>
#include <Bowed.h>
#include <Brass.h>
#include <Chorus.h>
#include <Clarinet.h>
#include <Cubic.h>
#include <Delay.h>
#include <DelayA.h>
#include <DelayL.h>
#include <Drummer.h>
#include <Echo.h>
#include <Effect.h>
#include <Envelope.h>
#include <FMVoices.h>
#include <FileRead.h>
#include <FileWrite.h>
#include <FileWvIn.h>
#include <FileWvOut.h>
#include <FileLoop.h>
#include <Filter.h>
#include <Fir.h>
#include <Flute.h>
#include <FormSwep.h>
#include <FreeVerb.h>
#include <Granulate.h>
#include <Guitar.h>
#include <HevyMetl.h>
#include <Iir.h>
#include <JCRev.h>
#include <JetTable.h>
#include <LentPitShift.h>
#include <Mandolin.h>
#include <Mesh2D.h>
#include <Messager.h>
#include <MidiFileIn.h>
#include <Modal.h>
#include <ModalBar.h>
#include <Modulate.h>
#include <Moog.h>
#include <NRev.h>
#include <Noise.h>
#include <OnePole.h>
#include <OneZero.h>
#include <PRCRev.h>
#include <PercFlut.h>
#include <Phonemes.h>
#include <PitShift.h>
#include <Plucked.h>
#include <PoleZero.h>
#include <Recorder.h>
#include <ReedTable.h>
#include <Resonate.h>
#include <Rhodey.h>
#include <Saxofony.h>
#include <Shakers.h>
#include <Simple.h>
#include <SineWave.h>
#include <SingWave.h>
#include <Sitar.h>
#include <Sphere.h>
#include <StifKarp.h>
#include <TapDelay.h>
#include <TubeBell.h>
#include <Twang.h>
#include <TwoPole.h>
#include <TwoZero.h>
#include <Vector3D.h>
#include <VoicForm.h>
#include <Voicer.h>
#include <Whistle.h>
#include <Wurley.h>
#include <Socket.h>
#include <Mutex.h>
#include <Thread.h>
#include <InetWvIn.h>
#include <InetWvOut.h>
#include <TcpClient.h>
#include <TcpServer.h>
#include <UdpSocket.h>
#include <RtWvIn.h>
#include <RtWvOut.h>

using namespace stk;
using namespace stk;


#include <stdint.h>		// Use the C99 official header


#include <typeinfo>
#include <stdexcept>


#include <iostream>

#if PY_VERSION_HEX >= 0x03020000
# define SWIGPY_SLICE_ARG(obj) ((PyObject*) (obj))
#else
# define SWIGPY_SLICE_ARG(obj) ((PySliceObject*) (obj))
#endif


#if defined(__GNUC__)
#  if __GNUC__ == 2 && __GNUC_MINOR <= 96
#     define SWIG_STD_NOMODERN_STL
#  endif
#endif


#include <string>


#include <stddef.h>


namespace swig {
  struct stop_iteration {
  };

  struct SwigPyIterator {
  private:
    SwigPtr_PyObject _seq;

  protected:
    SwigPyIterator(PyObject *seq) : _seq(seq)
    {
    }
      
  public:
    virtual ~SwigPyIterator() {}

    // Access iterator method, required by Python
    virtual PyObject *value() const = 0;

    // Forward iterator method, required by Python
    virtual SwigPyIterator *incr(size_t n = 1) = 0;
    
    // Backward iterator method, very common in C++, but not required in Python
    virtual SwigPyIterator *decr(size_t /*n*/ = 1)
    {
      throw stop_iteration();
    }

    // Random access iterator methods, but not required in Python
    virtual ptrdiff_t distance(const SwigPyIterator &/*x*/) const
    {
      throw std::invalid_argument("operation not supported");
    }

    virtual bool equal (const SwigPyIterator &/*x*/) const
    {
      throw std::invalid_argument("operation not supported");
    }
    
    // C++ common/needed methods
    virtual SwigPyIterator *copy() const = 0;

    PyObject *next()     
    {
      SWIG_PYTHON_THREAD_BEGIN_BLOCK; // disable threads       
      PyObject *obj = value();
      incr();       
      SWIG_PYTHON_THREAD_END_BLOCK; // re-enable threads
      return obj;     
    }

    /* Make an alias for Python 3.x */
    PyObject *__next__()
    {
      return next();
    }

    PyObject *previous()
    {
      SWIG_PYTHON_THREAD_BEGIN_BLOCK; // disable threads       
      decr();
      PyObject *obj = value();
      SWIG_PYTHON_THREAD_END_BLOCK; // re-enable threads       
      return obj;
    }

    SwigPyIterator *advance(ptrdiff_t n)
    {
      return  (n > 0) ?  incr(n) : decr(-n);
    }
      
    bool operator == (const SwigPyIterator& x)  const
    {
      return equal(x);
    }
      
    bool operator != (const SwigPyIterator& x) const
    {
      return ! operator==(x);
    }
      
    SwigPyIterator& operator += (ptrdiff_t n)
    {
      return *advance(n);
    }

    SwigPyIterator& operator -= (ptrdiff_t n)
    {
      return *advance(-n);
    }
      
    SwigPyIterator* operator + (ptrdiff_t n) const
    {
      return copy()->advance(n);
    }

    SwigPyIterator* operator - (ptrdiff_t n) const
    {
      return copy()->advance(-n);
    }
      
    ptrdiff_t operator - (const SwigPyIterator& x) const
    {
      return x.distance(*this);
    }
      
    static swig_type_info* descriptor() {
      static int init = 0;
      static swig_type_info* desc = 0;
      if (!init) {
	desc = SWIG_TypeQuery("swig::SwigPyIterator *");
	init = 1;
      }	
      return desc;
    }    
  };

#if defined(SWIGPYTHON_BUILTIN)
  inline PyObject* make_output_iterator_builtin (PyObject *pyself)
  {
    Py_INCREF(pyself);
    return pyself;
  }
#endif
}


SWIGINTERN int
SWIG_AsVal_double (PyObject *obj, double *val)
{
  int res = SWIG_TypeError;
  if (PyFloat_Check(obj)) {
    if (val) *val = PyFloat_AsDouble(obj);
    return SWIG_OK;
#if PY_VERSION_HEX < 0x03000000
  } else if (PyInt_Check(obj)) {
    if (val) *val = (double) PyInt_AsLong(obj);
    return SWIG_OK;
#endif
  } else if (PyLong_Check(obj)) {
    double v = PyLong_AsDouble(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    int dispatch = 0;
    double d = PyFloat_AsDouble(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = d;
      return SWIG_AddCast(SWIG_OK);
    } else {
      PyErr_Clear();
    }
    if (!dispatch) {
      long v = PyLong_AsLong(obj);
      if (!PyErr_Occurred()) {
	if (val) *val = v;
	return SWIG_AddCast(SWIG_AddCast(SWIG_OK));
      } else {
	PyErr_Clear();
      }
    }
  }
#endif
  return res;
}


#include <float.h>


#include <math.h>


SWIGINTERNINLINE int
SWIG_CanCastAsInteger(double *d, double min, double max) {
  double x = *d;
  if ((min <= x && x <= max)) {
   double fx = floor(x);
   double cx = ceil(x);
   double rd =  ((x - fx) < 0.5) ? fx : cx; /* simple rint */
   if ((errno == EDOM) || (errno == ERANGE)) {
     errno = 0;
   } else {
     double summ, reps, diff;
     if (rd < x) {
       diff = x - rd;
     } else if (rd > x) {
       diff = rd - x;
     } else {
       return 1;
     }
     summ = rd + x;
     reps = diff/summ;
     if (reps < 8*DBL_EPSILON) {
       *d = rd;
       return 1;
     }
   }
  }
  return 0;
}


SWIGINTERN int
SWIG_AsVal_unsigned_SS_long (PyObject *obj, unsigned long *val) 
{
#if PY_VERSION_HEX < 0x03000000
  if (PyInt_Check(obj)) {
    long v = PyInt_AsLong(obj);
    if (v >= 0) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      return SWIG_OverflowError;
    }
  } else
#endif
  if (PyLong_Check(obj)) {
    unsigned long v = PyLong_AsUnsignedLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
      return SWIG_OverflowError;
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    int dispatch = 0;
    unsigned long v = PyLong_AsUnsignedLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_AddCast(SWIG_OK);
    } else {
      PyErr_Clear();
    }
    if (!dispatch) {
      double d;
      int res = SWIG_AddCast(SWIG_AsVal_double (obj,&d));
      if (SWIG_IsOK(res) && SWIG_CanCastAsInteger(&d, 0, ULONG_MAX)) {
	if (val) *val = (unsigned long)(d);
	return res;
      }
    }
  }
#endif
  return SWIG_TypeError;
}


#include <limits.h>
#if !defined(SWIG_NO_LLONG_MAX)
# if !defined(LLONG_MAX) && defined(__GNUC__) && defined (__LONG_LONG_MAX__)
#   define LLONG_MAX __LONG_LONG_MAX__
#   define LLONG_MIN (-LLONG_MAX - 1LL)
#   define ULLONG_MAX (LLONG_MAX * 2ULL + 1ULL)
# endif
#endif


#if defined(LLONG_MAX) && !defined(SWIG_LONG_LONG_AVAILABLE)
#  define SWIG_LONG_LONG_AVAILABLE
#endif


#ifdef SWIG_LONG_LONG_AVAILABLE
SWIGINTERN int
SWIG_AsVal_unsigned_SS_long_SS_long (PyObject *obj, unsigned long long *val)
{
  int res = SWIG_TypeError;
  if (PyLong_Check(obj)) {
    unsigned long long v = PyLong_AsUnsignedLongLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
      res = SWIG_OverflowError;
    }
  } else {
    unsigned long v;
    res = SWIG_AsVal_unsigned_SS_long (obj,&v);
    if (SWIG_IsOK(res)) {
      if (val) *val = v;
      return res;
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    const double mant_max = 1LL << DBL_MANT_DIG;
    double d;
    res = SWIG_AsVal_double (obj,&d);
    if (SWIG_IsOK(res) && !SWIG_CanCastAsInteger(&d, 0, mant_max))
      return SWIG_OverflowError;
    if (SWIG_IsOK(res) && SWIG_CanCastAsInteger(&d, 0, mant_max)) {
      if (val) *val = (unsigned long long)(d);
      return SWIG_AddCast(res);
    }
    res = SWIG_TypeError;
  }
#endif
  return res;
}
#endif


SWIGINTERNINLINE int
SWIG_AsVal_size_t (PyObject * obj, size_t *val)
{
  int res = SWIG_TypeError;
#ifdef SWIG_LONG_LONG_AVAILABLE
  if (sizeof(size_t) <= sizeof(unsigned long)) {
#endif
    unsigned long v;
    res = SWIG_AsVal_unsigned_SS_long (obj, val ? &v : 0);
    if (SWIG_IsOK(res) && val) *val = static_cast< size_t >(v);
#ifdef SWIG_LONG_LONG_AVAILABLE
  } else if (sizeof(size_t) <= sizeof(unsigned long long)) {
    unsigned long long v;
    res = SWIG_AsVal_unsigned_SS_long_SS_long (obj, val ? &v : 0);
    if (SWIG_IsOK(res) && val) *val = static_cast< size_t >(v);
  }
#endif
  return res;
}


  #define SWIG_From_long   PyInt_FromLong 


#ifdef SWIG_LONG_LONG_AVAILABLE
SWIGINTERNINLINE PyObject* 
SWIG_From_long_SS_long  (long long value)
{
  return ((value < LONG_MIN) || (value > LONG_MAX)) ?
    PyLong_FromLongLong(value) : PyInt_FromLong(static_cast< long >(value));
}
#endif


SWIGINTERNINLINE PyObject *
SWIG_From_ptrdiff_t  (ptrdiff_t value)
{    
#ifdef SWIG_LONG_LONG_AVAILABLE
  if (sizeof(ptrdiff_t) <= sizeof(long)) {
#endif
    return SWIG_From_long  (static_cast< long >(value));
#ifdef SWIG_LONG_LONG_AVAILABLE
  } else {
    /* assume sizeof(ptrdiff_t) <= sizeof(long long) */
    return SWIG_From_long_SS_long  (static_cast< long long >(value));
  }
#endif
}


SWIGINTERNINLINE PyObject*
  SWIG_From_bool  (bool value)
{
  return PyBool_FromLong(value ? 1 : 0);
}


SWIGINTERN int
SWIG_AsVal_long (PyObject *obj, long* val)
{
#if PY_VERSION_HEX < 0x03000000
  if (PyInt_Check(obj)) {
    if (val) *val = PyInt_AsLong(obj);
    return SWIG_OK;
  } else
#endif
  if (PyLong_Check(obj)) {
    long v = PyLong_AsLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
      return SWIG_OverflowError;
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    int dispatch = 0;
    long v = PyInt_AsLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_AddCast(SWIG_OK);
    } else {
      PyErr_Clear();
    }
    if (!dispatch) {
      double d;
      int res = SWIG_AddCast(SWIG_AsVal_double (obj,&d));
      if (SWIG_IsOK(res) && SWIG_CanCastAsInteger(&d, LONG_MIN, LONG_MAX)) {
	if (val) *val = (long)(d);
	return res;
      }
    }
  }
#endif
  return SWIG_TypeError;
}


#ifdef SWIG_LONG_LONG_AVAILABLE
SWIGINTERN int
SWIG_AsVal_long_SS_long (PyObject *obj, long long *val)
{
  int res = SWIG_TypeError;
  if (PyLong_Check(obj)) {
    long long v = PyLong_AsLongLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
      res = SWIG_OverflowError;
    }
  } else {
    long v;
    res = SWIG_AsVal_long (obj,&v);
    if (SWIG_IsOK(res)) {
      if (val) *val = v;
      return res;
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    const double mant_max = 1LL << DBL_MANT_DIG;
    const double mant_min = -mant_max;
    double d;
    res = SWIG_AsVal_double (obj,&d);
    if (SWIG_IsOK(res) && !SWIG_CanCastAsInteger(&d, mant_min, mant_max))
      return SWIG_OverflowError;
    if (SWIG_IsOK(res) && SWIG_CanCastAsInteger(&d, mant_min, mant_max)) {
      if (val) *val = (long long)(d);
      return SWIG_AddCast(res);
    }
    res = SWIG_TypeError;
  }
#endif
  return res;
}
#endif


SWIGINTERNINLINE int
SWIG_AsVal_ptrdiff_t (PyObject * obj, ptrdiff_t *val)
{
  int res = SWIG_TypeError;
#ifdef SWIG_LONG_LONG_AVAILABLE
  if (sizeof(ptrdiff_t) <= sizeof(long)) {
#endif
    long v;
    res = SWIG_AsVal_long (obj, val ? &v : 0);
    if (SWIG_IsOK(res) && val) *val = static_cast< ptrdiff_t >(v);
#ifdef SWIG_LONG_LONG_AVAILABLE
  } else if (sizeof(ptrdiff_t) <= sizeof(long long)) {
    long long v;
    res = SWIG_AsVal_long_SS_long (obj, val ? &v : 0);
    if (SWIG_IsOK(res) && val) *val = static_cast< ptrdiff_t >(v);
  }
#endif
  return res;
}


#include <algorithm>


#include <vector>


#include "Effect.h"
#include "Filter.h"
#include "Generator.h"
#include "Instrmnt.h"
#include "Filter.h"
#include "Function.h"
#include "FM.h"


SWIGINTERNINLINE PyObject*
  SWIG_From_int  (int value)
{
  return PyInt_FromLong((long) value);
}


SWIGINTERN int
SWIG_AsVal_int (PyObject * obj, int *val)
{
  long v;
  int res = SWIG_AsVal_long (obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v < INT_MIN || v > INT_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< int >(v);
    }
  }  
  return res;
}


SWIGINTERN swig_type_info*
SWIG_pchar_descriptor(void)
{
  static int init = 0;
  static swig_type_info* info = 0;
  if (!init) {
    info = SWIG_TypeQuery("_p_char");
    init = 1;
  }
  return info;
}


SWIGINTERNINLINE PyObject *
SWIG_FromCharPtrAndSize(const char* carray, size_t size)
{
  if (carray) {
    if (size > INT_MAX) {
      swig_type_info* pchar_descriptor = SWIG_pchar_descriptor();
      return pchar_descriptor ? 
	SWIG_InternalNewPointerObj(const_cast< char * >(carray), pchar_descriptor, 0) : SWIG_Py_Void();
    } else {
#if PY_VERSION_HEX >= 0x03000000
#if defined(SWIG_PYTHON_STRICT_BYTE_CHAR)
      return PyBytes_FromStringAndSize(carray, static_cast< Py_ssize_t >(size));
#else
      return PyUnicode_DecodeUTF8(carray, static_cast< Py_ssize_t >(size), "surrogateescape");
#endif
#else
      return PyString_FromStringAndSize(carray, static_cast< Py_ssize_t >(size));
#endif
    }
  } else {
    return SWIG_Py_Void();
  }
}


SWIGINTERNINLINE PyObject * 
SWIG_FromCharPtr(const char *cptr)
{ 
  return SWIG_FromCharPtrAndSize(cptr, (cptr ? strlen(cptr) : 0));
}


SWIGINTERN int
SWIG_AsVal_unsigned_SS_int (PyObject * obj, unsigned int *val)
{
  unsigned long v;
  int res = SWIG_AsVal_unsigned_SS_long (obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v > UINT_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< unsigned int >(v);
    }
  }  
  return res;
}


/* Getting isfinite working pre C99 across multiple platforms is non-trivial. Users can provide SWIG_isfinite on older platforms. */
#ifndef SWIG_isfinite
/* isfinite() is a macro for C99 */
# if defined(isfinite)
#  define SWIG_isfinite(X) (isfinite(X))
# elif defined(__cplusplus) && __cplusplus >= 201103L
/* Use a template so that this works whether isfinite() is std::isfinite() or
 * in the global namespace.  The reality seems to vary between compiler
 * versions.
 *
 * Make sure namespace std exists to avoid compiler warnings.
 *
 * extern "C++" is required as this fragment can end up inside an extern "C" { } block
 */
namespace std { }
extern "C++" template<typename T>
inline int SWIG_isfinite_func(T x) {
  using namespace std;
  return isfinite(x);
}
#  define SWIG_isfinite(X) (SWIG_isfinite_func(X))
# elif defined(__GNUC__) && (__GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ >= 2))
#  define SWIG_isfinite(X) (__builtin_isfinite(X))
# elif defined(_MSC_VER)
#  define SWIG_isfinite(X) (_finite(X))
# elif defined(__sun) && defined(__SVR4)
#  include <ieeefp.h>
#  define SWIG_isfinite(X) (finite(X))
# endif
#endif


/* Accept infinite as a valid float value unless we are unable to check if a value is finite */
#ifdef SWIG_isfinite
# define SWIG_Float_Overflow_Check(X) ((X < -FLT_MAX || X > FLT_MAX) && SWIG_isfinite(X))
#else
# define SWIG_Float_Overflow_Check(X) ((X < -FLT_MAX || X > FLT_MAX))
#endif


SWIGINTERN int
SWIG_AsVal_float (PyObject * obj, float *val)
{
  double v;
  int res = SWIG_AsVal_double (obj, &v);
  if (SWIG_IsOK(res)) {
    if (SWIG_Float_Overflow_Check(v)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< float >(v);
    }
  }  
  return res;
}

SWIGINTERN stk::StkFloat stk_StkFrames___getitem____SWIG(stk::StkFrames *self,size_t n){ return (*self)[n]; }

  #define SWIG_From_double   PyFloat_FromDouble 


SWIGINTERNINLINE PyObject *
SWIG_From_float  (float value)
{    
  return SWIG_From_double  (value);
}

SWIGINTERN void stk_StkFrames___setitem____SWIG(stk::StkFrames *self,size_t n,stk::StkFloat value){ (*self)[n] = value; }
SWIGINTERN stk::StkFloat &stk_StkFrames_get__SWIG(stk::StkFrames *self,size_t frame,unsigned int channel){ return (*self)(frame,channel); }

SWIGINTERNINLINE PyObject* 
SWIG_From_unsigned_SS_long  (unsigned long value)
{
  return (value > LONG_MAX) ?
    PyLong_FromUnsignedLong(value) : PyInt_FromLong(static_cast< long >(value));
}


#ifdef SWIG_LONG_LONG_AVAILABLE
SWIGINTERNINLINE PyObject* 
SWIG_From_unsigned_SS_long_SS_long  (unsigned long long value)
{
  return (value > LONG_MAX) ?
    PyLong_FromUnsignedLongLong(value) : PyInt_FromLong(static_cast< long >(value));
}
#endif


SWIGINTERNINLINE PyObject *
SWIG_From_size_t  (size_t value)
{    
#ifdef SWIG_LONG_LONG_AVAILABLE
  if (sizeof(size_t) <= sizeof(unsigned long)) {
#endif
    return SWIG_From_unsigned_SS_long  (static_cast< unsigned long >(value));
#ifdef SWIG_LONG_LONG_AVAILABLE
  } else {
    /* assume sizeof(size_t) <= sizeof(unsigned long long) */
    return SWIG_From_unsigned_SS_long_SS_long  (static_cast< unsigned long long >(value));
  }
#endif
}


SWIGINTERNINLINE PyObject*
  SWIG_From_unsigned_SS_int  (unsigned int value)
{
  return PyInt_FromSize_t((size_t) value);
}


#include "ADSR.h"    


#include "Asymp.h"


#include "BandedWG.h"


#include "BeeThree.h"


#include "BiQuad.h"


SWIGINTERN int
SWIG_AsVal_bool (PyObject *obj, bool *val)
{
  int r;
  if (!PyBool_Check(obj))
    return SWIG_ERROR;
  r = PyObject_IsTrue(obj);
  if (r == -1)
    return SWIG_ERROR;
  if (val) *val = r ? true : false;
  return SWIG_OK;
}


#include "Blit.h"


#include "BlitSaw.h"


#include "BlitSquare.h"


#include "BlowBotl.h"


#include "BlowHole.h"


#include "BowTable.h"


#include "Bowed.h"


#include "Brass.h"


#include "Chorus.h"


#include "Clarinet.h"    


#include "Cubic.h"


#include "Delay.h"


#include "DelayA.h"


#include "DelayL.h"


#include "Drummer.h"


#include "Echo.h"


#include "Envelope.h"


#include "FMVoices.h"


#include "FileRead.h"


#include "FileWrite.h"


#include "FileWvIn.h"


#include "FileWvOut.h"    


#include "FileLoop.h"


#include "Fir.h"


#include "Flute.h"


#include "FormSwep.h"


#include "FreeVerb.h"


#include "Granulate.h"


#include "Guitar.h"


#include "HevyMetl.h"


#include "Iir.h"


#include "JCRev.h"


#include "JetTable.h"


#include "LentPitShift.h"


#include "Mandolin.h"


#include "Mesh2D.h"


SWIGINTERN int
SWIG_AsVal_unsigned_SS_short (PyObject * obj, unsigned short *val)
{
  unsigned long v;
  int res = SWIG_AsVal_unsigned_SS_long (obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v > USHRT_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< unsigned short >(v);
    }
  }  
  return res;
}


#include "Messager.h"


SWIGINTERN int
SWIG_AsCharPtrAndSize(PyObject *obj, char** cptr, size_t* psize, int *alloc)
{
#if PY_VERSION_HEX>=0x03000000
#if defined(SWIG_PYTHON_STRICT_BYTE_CHAR)
  if (PyBytes_Check(obj))
#else
  if (PyUnicode_Check(obj))
#endif
#else  
  if (PyString_Check(obj))
#endif
  {
    char *cstr; Py_ssize_t len;
    int ret = SWIG_OK;
#if PY_VERSION_HEX>=0x03000000
#if !defined(SWIG_PYTHON_STRICT_BYTE_CHAR)
    if (!alloc && cptr) {
        /* We can't allow converting without allocation, since the internal
           representation of string in Python 3 is UCS-2/UCS-4 but we require
           a UTF-8 representation.
           TODO(bhy) More detailed explanation */
        return SWIG_RuntimeError;
    }
    obj = PyUnicode_AsUTF8String(obj);
    if (!obj)
      return SWIG_TypeError;
    if (alloc)
      *alloc = SWIG_NEWOBJ;
#endif
    if (PyBytes_AsStringAndSize(obj, &cstr, &len) == -1)
      return SWIG_TypeError;
#else
    if (PyString_AsStringAndSize(obj, &cstr, &len) == -1)
      return SWIG_TypeError;
#endif
    if (cptr) {
      if (alloc) {
	if (*alloc == SWIG_NEWOBJ) {
	  *cptr = reinterpret_cast< char* >(memcpy(new char[len + 1], cstr, sizeof(char)*(len + 1)));
	  *alloc = SWIG_NEWOBJ;
	} else {
	  *cptr = cstr;
	  *alloc = SWIG_OLDOBJ;
	}
      } else {
#if PY_VERSION_HEX>=0x03000000
#if defined(SWIG_PYTHON_STRICT_BYTE_CHAR)
	*cptr = PyBytes_AsString(obj);
#else
	assert(0); /* Should never reach here with Unicode strings in Python 3 */
#endif
#else
	*cptr = SWIG_Python_str_AsChar(obj);
        if (!*cptr)
          ret = SWIG_TypeError;
#endif
      }
    }
    if (psize) *psize = len + 1;
#if PY_VERSION_HEX>=0x03000000 && !defined(SWIG_PYTHON_STRICT_BYTE_CHAR)
    Py_XDECREF(obj);
#endif
    return ret;
  } else {
#if defined(SWIG_PYTHON_2_UNICODE)
#if defined(SWIG_PYTHON_STRICT_BYTE_CHAR)
#error "Cannot use both SWIG_PYTHON_2_UNICODE and SWIG_PYTHON_STRICT_BYTE_CHAR at once"
#endif
#if PY_VERSION_HEX<0x03000000
    if (PyUnicode_Check(obj)) {
      char *cstr; Py_ssize_t len;
      if (!alloc && cptr) {
        return SWIG_RuntimeError;
      }
      obj = PyUnicode_AsUTF8String(obj);
      if (!obj)
        return SWIG_TypeError;
      if (PyString_AsStringAndSize(obj, &cstr, &len) != -1) {
        if (cptr) {
          if (alloc) *alloc = SWIG_NEWOBJ;
          *cptr = reinterpret_cast< char* >(memcpy(new char[len + 1], cstr, sizeof(char)*(len + 1)));
        }
        if (psize) *psize = len + 1;

        Py_XDECREF(obj);
        return SWIG_OK;
      } else {
        Py_XDECREF(obj);
      }
    }
#endif
#endif

    swig_type_info* pchar_descriptor = SWIG_pchar_descriptor();
    if (pchar_descriptor) {
      void* vptr = 0;
      if (SWIG_ConvertPtr(obj, &vptr, pchar_descriptor, 0) == SWIG_OK) {
	if (cptr) *cptr = (char *) vptr;
	if (psize) *psize = vptr ? (strlen((char *)vptr) + 1) : 0;
	if (alloc) *alloc = SWIG_OLDOBJ;
	return SWIG_OK;
      }
    }
  }
  return SWIG_TypeError;
}





#include "MidiFileIn.h"


#include "Modal.h"


#include "Modulate.h"


#include "Moog.h"


#include "NRev.h"


#include "Noise.h"


#include "OnePole.h"


#include "OneZero.h"


#include "PRCRev.h"


#include "PercFlut.h"


#include "Phonemes.h"


#include "PitShift.h"


#include "Plucked.h"

    
    #include "PoleZero.h"


#include "Recorder.h"


#include "ReedTable.h"


#include "Resonate.h"


#include "Rhodey.h"


#include "Saxofony.h"


#include "Shakers.h"


#include "Simple.h"


#include "SineWave.h"


#include "SingWave.h"


#include "Sitar.h"


#include "Sphere.h"


#include "StifKarp.h"


#include "TapDelay.h"


#include "TubeBell.h"


#include "Twang.h"


#include "TwoPole.h"


#include "TwoZero.h"


#include "Vector3D.h"


#include "VoicForm.h"


#include "Voicer.h"


#include "Whistle.h"


#include "Wurley.h"


    #include "Socket.h"
    #include "TcpClient.h"
    #include "TcpServer.h"
    #include "UdpSocket.h"


#include "Mutex.h"


#include "Mutex.h"



#include "InetWvIn.h"


#include "InetWvOut.h"


#include "TcpClient.h"


#include "TcpServer.h"


#include "UdpSocket.h"


#include "RtWvIn.h"


#include "RtWvOut.h"


#include "Sampler.h"

#ifdef __cplusplus
extern "C" {
#endif
SWIGINTERN PyObject *_wrap_delete_SwigPyIterator(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SwigPyIterator" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_value(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  PyObject *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_value" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  try {
    result = (PyObject *)((swig::SwigPyIterator const *)arg1)->value();
  } catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_incr__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_incr" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  ecode2 = SWIG_AsVal_size_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator_incr" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  try {
    result = (swig::SwigPyIterator *)(arg1)->incr(arg2);
  } catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_incr__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_incr" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  try {
    result = (swig::SwigPyIterator *)(arg1)->incr();
  } catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_incr(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "SwigPyIterator_incr", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_swig__SwigPyIterator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SwigPyIterator_incr__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_swig__SwigPyIterator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SwigPyIterator_incr__SWIG_0(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'SwigPyIterator_incr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    swig::SwigPyIterator::incr(size_t)\n"
    "    swig::SwigPyIterator::incr()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_decr__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_decr" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  ecode2 = SWIG_AsVal_size_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator_decr" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  try {
    result = (swig::SwigPyIterator *)(arg1)->decr(arg2);
  } catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_decr__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_decr" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  try {
    result = (swig::SwigPyIterator *)(arg1)->decr();
  } catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_decr(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "SwigPyIterator_decr", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_swig__SwigPyIterator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SwigPyIterator_decr__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_swig__SwigPyIterator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SwigPyIterator_decr__SWIG_0(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'SwigPyIterator_decr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    swig::SwigPyIterator::decr(size_t)\n"
    "    swig::SwigPyIterator::decr()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_distance(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  swig::SwigPyIterator *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  ptrdiff_t result;
  
  if (!SWIG_Python_UnpackTuple(args, "SwigPyIterator_distance", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_distance" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_swig__SwigPyIterator,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SwigPyIterator_distance" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SwigPyIterator_distance" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  arg2 = reinterpret_cast< swig::SwigPyIterator * >(argp2);
  try {
    result = ((swig::SwigPyIterator const *)arg1)->distance((swig::SwigPyIterator const &)*arg2);
  } catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  resultobj = SWIG_From_ptrdiff_t(static_cast< ptrdiff_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_equal(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  swig::SwigPyIterator *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "SwigPyIterator_equal", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_equal" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_swig__SwigPyIterator,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SwigPyIterator_equal" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SwigPyIterator_equal" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  arg2 = reinterpret_cast< swig::SwigPyIterator * >(argp2);
  try {
    result = (bool)((swig::SwigPyIterator const *)arg1)->equal((swig::SwigPyIterator const &)*arg2);
  } catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_copy(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  swig::SwigPyIterator *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_copy" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  result = (swig::SwigPyIterator *)((swig::SwigPyIterator const *)arg1)->copy();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_next(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  PyObject *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_next" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  try {
    result = (PyObject *)(arg1)->next();
  } catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___next__(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  PyObject *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___next__" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  try {
    result = (PyObject *)(arg1)->__next__();
  } catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_previous(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  PyObject *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_previous" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  try {
    result = (PyObject *)(arg1)->previous();
  } catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_advance(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  ptrdiff_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  swig::SwigPyIterator *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "SwigPyIterator_advance", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_advance" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator_advance" "', argument " "2"" of type '" "ptrdiff_t""'");
  } 
  arg2 = static_cast< ptrdiff_t >(val2);
  try {
    result = (swig::SwigPyIterator *)(arg1)->advance(arg2);
  } catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___eq__(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  swig::SwigPyIterator *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "SwigPyIterator___eq__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___eq__" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_swig__SwigPyIterator,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SwigPyIterator___eq__" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SwigPyIterator___eq__" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  arg2 = reinterpret_cast< swig::SwigPyIterator * >(argp2);
  result = (bool)((swig::SwigPyIterator const *)arg1)->operator ==((swig::SwigPyIterator const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  PyErr_Clear();
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___ne__(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  swig::SwigPyIterator *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "SwigPyIterator___ne__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___ne__" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_swig__SwigPyIterator,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SwigPyIterator___ne__" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SwigPyIterator___ne__" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  arg2 = reinterpret_cast< swig::SwigPyIterator * >(argp2);
  result = (bool)((swig::SwigPyIterator const *)arg1)->operator !=((swig::SwigPyIterator const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  PyErr_Clear();
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___iadd__(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  ptrdiff_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  swig::SwigPyIterator *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "SwigPyIterator___iadd__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___iadd__" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator___iadd__" "', argument " "2"" of type '" "ptrdiff_t""'");
  } 
  arg2 = static_cast< ptrdiff_t >(val2);
  try {
    result = (swig::SwigPyIterator *) &(arg1)->operator +=(arg2);
  } catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___isub__(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  ptrdiff_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  swig::SwigPyIterator *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "SwigPyIterator___isub__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___isub__" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator___isub__" "', argument " "2"" of type '" "ptrdiff_t""'");
  } 
  arg2 = static_cast< ptrdiff_t >(val2);
  try {
    result = (swig::SwigPyIterator *) &(arg1)->operator -=(arg2);
  } catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___add__(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  ptrdiff_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  swig::SwigPyIterator *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "SwigPyIterator___add__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___add__" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator___add__" "', argument " "2"" of type '" "ptrdiff_t""'");
  } 
  arg2 = static_cast< ptrdiff_t >(val2);
  try {
    result = (swig::SwigPyIterator *)((swig::SwigPyIterator const *)arg1)->operator +(arg2);
  } catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  PyErr_Clear();
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___sub____SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  ptrdiff_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___sub__" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator___sub__" "', argument " "2"" of type '" "ptrdiff_t""'");
  } 
  arg2 = static_cast< ptrdiff_t >(val2);
  try {
    result = (swig::SwigPyIterator *)((swig::SwigPyIterator const *)arg1)->operator -(arg2);
  } catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  PyErr_Clear();
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___sub____SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  swig::SwigPyIterator *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  ptrdiff_t result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___sub__" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_swig__SwigPyIterator,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SwigPyIterator___sub__" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SwigPyIterator___sub__" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  arg2 = reinterpret_cast< swig::SwigPyIterator * >(argp2);
  result = ((swig::SwigPyIterator const *)arg1)->operator -((swig::SwigPyIterator const &)*arg2);
  resultobj = SWIG_From_ptrdiff_t(static_cast< ptrdiff_t >(result));
  return resultobj;
fail:
  PyErr_Clear();
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___sub__(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "SwigPyIterator___sub__", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_swig__SwigPyIterator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SwigPyIterator___sub____SWIG_1(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_swig__SwigPyIterator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SwigPyIterator___sub____SWIG_0(self, argc, argv);
      }
    }
  }
  
fail:
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *SwigPyIterator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_swig__SwigPyIterator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_StkError__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::string *arg1 = 0 ;
  stk::StkError::Type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  stk::StkError *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_std__string,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_StkError" "', argument " "1"" of type '" "std::string const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_StkError" "', argument " "1"" of type '" "std::string const &""'"); 
  }
  arg1 = reinterpret_cast< std::string * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_StkError" "', argument " "2"" of type '" "stk::StkError::Type""'");
  } 
  arg2 = static_cast< stk::StkError::Type >(val2);
  result = (stk::StkError *)new stk::StkError((std::string const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkError, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_StkError__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::string *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  stk::StkError *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_std__string,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_StkError" "', argument " "1"" of type '" "std::string const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_StkError" "', argument " "1"" of type '" "std::string const &""'"); 
  }
  arg1 = reinterpret_cast< std::string * >(argp1);
  result = (stk::StkError *)new stk::StkError((std::string const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkError, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_StkError(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_StkError", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_std__string, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_StkError__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_std__string, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_StkError__SWIG_0(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_StkError'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::StkError::StkError(std::string const &,stk::StkError::Type)\n"
    "    stk::StkError::StkError(std::string const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_StkError(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::StkError *arg1 = (stk::StkError *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__StkError, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_StkError" "', argument " "1"" of type '" "stk::StkError *""'"); 
  }
  arg1 = reinterpret_cast< stk::StkError * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StkError_printMessage(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::StkError *arg1 = (stk::StkError *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__StkError, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StkError_printMessage" "', argument " "1"" of type '" "stk::StkError *""'"); 
  }
  arg1 = reinterpret_cast< stk::StkError * >(argp1);
  (arg1)->printMessage();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StkError_getType(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::StkError *arg1 = (stk::StkError *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  stk::StkError::Type *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__StkError, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StkError_getType" "', argument " "1"" of type '" "stk::StkError *""'"); 
  }
  arg1 = reinterpret_cast< stk::StkError * >(argp1);
  result = (stk::StkError::Type *) &(arg1)->getType();
  resultobj = SWIG_From_int(static_cast< int >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StkError_getMessage(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::StkError *arg1 = (stk::StkError *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__StkError, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StkError_getMessage" "', argument " "1"" of type '" "stk::StkError *""'"); 
  }
  arg1 = reinterpret_cast< stk::StkError * >(argp1);
  result = (std::string *) &(arg1)->getMessage();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__string, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StkError_getMessageCString(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::StkError *arg1 = (stk::StkError *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__StkError, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StkError_getMessageCString" "', argument " "1"" of type '" "stk::StkError *""'"); 
  }
  arg1 = reinterpret_cast< stk::StkError * >(argp1);
  result = (char *)(arg1)->getMessageCString();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StkError_what(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::StkError *arg1 = (stk::StkError *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__StkError, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StkError_what" "', argument " "1"" of type '" "stk::StkError const *""'"); 
  }
  arg1 = reinterpret_cast< stk::StkError * >(argp1);
  result = (char *)((stk::StkError const *)arg1)->what();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *StkError_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_stk__StkError, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *StkError_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_StkFrames__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  unsigned int arg2 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_StkFrames" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_StkFrames" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (stk::StkFrames *)new stk::StkFrames(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_StkFrames__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_StkFrames" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  result = (stk::StkFrames *)new stk::StkFrames(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_StkFrames__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (stk::StkFrames *)new stk::StkFrames();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_StkFrames__SWIG_3(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::StkFloat *arg1 = 0 ;
  unsigned int arg2 ;
  unsigned int arg3 ;
  stk::StkFloat temp1 ;
  float val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_StkFrames" "', argument " "1"" of type '" "stk::StkFloat""'");
  } 
  temp1 = static_cast< stk::StkFloat >(val1);
  arg1 = &temp1;
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_StkFrames" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_StkFrames" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  result = (stk::StkFrames *)new stk::StkFrames((stk::StkFloat const &)*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_StkFrames(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::StkFrames *arg1 = (stk::StkFrames *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_StkFrames" "', argument " "1"" of type '" "stk::StkFrames *""'"); 
  }
  arg1 = reinterpret_cast< stk::StkFrames * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_StkFrames__SWIG_4(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::StkFrames *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_stk__StkFrames,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_StkFrames" "', argument " "1"" of type '" "stk::StkFrames const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_StkFrames" "', argument " "1"" of type '" "stk::StkFrames const &""'"); 
  }
  arg1 = reinterpret_cast< stk::StkFrames * >(argp1);
  result = (stk::StkFrames *)new stk::StkFrames((stk::StkFrames const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_StkFrames(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_StkFrames", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_StkFrames__SWIG_2(self, argc, argv);
  }
  if (argc == 1) {
    int _v = 0;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_StkFrames__SWIG_4(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v = 0;
    {
      int res = SWIG_AsVal_unsigned_SS_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_StkFrames__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    {
      int res = SWIG_AsVal_unsigned_SS_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_StkFrames__SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    {
      int res = SWIG_AsVal_float(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_StkFrames__SWIG_3(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_StkFrames'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::StkFrames::StkFrames(unsigned int,unsigned int)\n"
    "    stk::StkFrames::StkFrames(unsigned int)\n"
    "    stk::StkFrames::StkFrames()\n"
    "    stk::StkFrames::StkFrames(stk::StkFloat const &,unsigned int,unsigned int)\n"
    "    stk::StkFrames::StkFrames(stk::StkFrames const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_StkFrames___getitem__(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::StkFrames *arg1 = (stk::StkFrames *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  stk::StkFloat result;
  
  if (!SWIG_Python_UnpackTuple(args, "StkFrames___getitem__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StkFrames___getitem__" "', argument " "1"" of type '" "stk::StkFrames *""'"); 
  }
  arg1 = reinterpret_cast< stk::StkFrames * >(argp1);
  ecode2 = SWIG_AsVal_size_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "StkFrames___getitem__" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  result = (stk::StkFloat)stk_StkFrames___getitem____SWIG(arg1,arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StkFrames___setitem__(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::StkFrames *arg1 = (stk::StkFrames *) 0 ;
  size_t arg2 ;
  stk::StkFloat arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "StkFrames___setitem__", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StkFrames___setitem__" "', argument " "1"" of type '" "stk::StkFrames *""'"); 
  }
  arg1 = reinterpret_cast< stk::StkFrames * >(argp1);
  ecode2 = SWIG_AsVal_size_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "StkFrames___setitem__" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "StkFrames___setitem__" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  stk_StkFrames___setitem____SWIG(arg1,arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StkFrames___add__(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::StkFrames *arg1 = (stk::StkFrames *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  stk::StkFrames result;
  
  if (!SWIG_Python_UnpackTuple(args, "StkFrames___add__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StkFrames___add__" "', argument " "1"" of type '" "stk::StkFrames const *""'"); 
  }
  arg1 = reinterpret_cast< stk::StkFrames * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "StkFrames___add__" "', argument " "2"" of type '" "stk::StkFrames const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "StkFrames___add__" "', argument " "2"" of type '" "stk::StkFrames const &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  result = ((stk::StkFrames const *)arg1)->operator +((stk::StkFrames const &)*arg2);
  resultobj = SWIG_NewPointerObj((new stk::StkFrames(static_cast< const stk::StkFrames& >(result))), SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  PyErr_Clear();
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_StkFrames___iadd__(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::StkFrames *arg1 = (stk::StkFrames *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  stk::StkFrames *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "StkFrames___iadd__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StkFrames___iadd__" "', argument " "1"" of type '" "stk::StkFrames *""'"); 
  }
  arg1 = reinterpret_cast< stk::StkFrames * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "StkFrames___iadd__" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "StkFrames___iadd__" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  result = (stk::StkFrames *) &(arg1)->operator +=(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StkFrames___imul____SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::StkFrames *arg1 = (stk::StkFrames *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StkFrames___imul__" "', argument " "1"" of type '" "stk::StkFrames *""'"); 
  }
  arg1 = reinterpret_cast< stk::StkFrames * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "StkFrames___imul__" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "StkFrames___imul__" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  result = (stk::StkFrames *) &(arg1)->operator *=(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StkFrames___mul__(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::StkFrames *arg1 = (stk::StkFrames *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  stk::StkFrames result;
  
  if (!SWIG_Python_UnpackTuple(args, "StkFrames___mul__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StkFrames___mul__" "', argument " "1"" of type '" "stk::StkFrames const *""'"); 
  }
  arg1 = reinterpret_cast< stk::StkFrames * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "StkFrames___mul__" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  result = ((stk::StkFrames const *)arg1)->operator *(arg2);
  resultobj = SWIG_NewPointerObj((new stk::StkFrames(static_cast< const stk::StkFrames& >(result))), SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  PyErr_Clear();
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_StkFrames___imul____SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::StkFrames *arg1 = (stk::StkFrames *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StkFrames___imul__" "', argument " "1"" of type '" "stk::StkFrames *""'"); 
  }
  arg1 = reinterpret_cast< stk::StkFrames * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "StkFrames___imul__" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  result = (stk::StkFrames *) &(arg1)->operator *=(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StkFrames___imul__(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "StkFrames___imul__", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__StkFrames, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_StkFrames___imul____SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__StkFrames, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_StkFrames___imul____SWIG_1(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'StkFrames___imul__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::StkFrames::operator *=(stk::StkFrames &)\n"
    "    stk::StkFrames::operator *=(stk::StkFloat)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_StkFrames_get(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::StkFrames *arg1 = (stk::StkFrames *) 0 ;
  size_t arg2 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  stk::StkFloat *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "StkFrames_get", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StkFrames_get" "', argument " "1"" of type '" "stk::StkFrames *""'"); 
  }
  arg1 = reinterpret_cast< stk::StkFrames * >(argp1);
  ecode2 = SWIG_AsVal_size_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "StkFrames_get" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "StkFrames_get" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  result = (stk::StkFloat *) &stk_StkFrames_get__SWIG(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StkFrames_interpolate__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::StkFrames *arg1 = (stk::StkFrames *) 0 ;
  stk::StkFloat arg2 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StkFrames_interpolate" "', argument " "1"" of type '" "stk::StkFrames const *""'"); 
  }
  arg1 = reinterpret_cast< stk::StkFrames * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "StkFrames_interpolate" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "StkFrames_interpolate" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  result = (stk::StkFloat)((stk::StkFrames const *)arg1)->interpolate(arg2,arg3);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StkFrames_interpolate__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::StkFrames *arg1 = (stk::StkFrames *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StkFrames_interpolate" "', argument " "1"" of type '" "stk::StkFrames const *""'"); 
  }
  arg1 = reinterpret_cast< stk::StkFrames * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "StkFrames_interpolate" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  result = (stk::StkFloat)((stk::StkFrames const *)arg1)->interpolate(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StkFrames_interpolate(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "StkFrames_interpolate", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__StkFrames, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_StkFrames_interpolate__SWIG_1(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__StkFrames, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_StkFrames_interpolate__SWIG_0(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'StkFrames_interpolate'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::StkFrames::interpolate(stk::StkFloat,unsigned int) const\n"
    "    stk::StkFrames::interpolate(stk::StkFloat) const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_StkFrames_size(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::StkFrames *arg1 = (stk::StkFrames *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  size_t result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StkFrames_size" "', argument " "1"" of type '" "stk::StkFrames const *""'"); 
  }
  arg1 = reinterpret_cast< stk::StkFrames * >(argp1);
  result = ((stk::StkFrames const *)arg1)->size();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StkFrames_empty(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::StkFrames *arg1 = (stk::StkFrames *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StkFrames_empty" "', argument " "1"" of type '" "stk::StkFrames const *""'"); 
  }
  arg1 = reinterpret_cast< stk::StkFrames * >(argp1);
  result = (bool)((stk::StkFrames const *)arg1)->empty();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StkFrames_resize__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::StkFrames *arg1 = (stk::StkFrames *) 0 ;
  size_t arg2 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StkFrames_resize" "', argument " "1"" of type '" "stk::StkFrames *""'"); 
  }
  arg1 = reinterpret_cast< stk::StkFrames * >(argp1);
  ecode2 = SWIG_AsVal_size_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "StkFrames_resize" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "StkFrames_resize" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  (arg1)->resize(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StkFrames_resize__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::StkFrames *arg1 = (stk::StkFrames *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StkFrames_resize" "', argument " "1"" of type '" "stk::StkFrames *""'"); 
  }
  arg1 = reinterpret_cast< stk::StkFrames * >(argp1);
  ecode2 = SWIG_AsVal_size_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "StkFrames_resize" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  (arg1)->resize(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StkFrames_resize__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::StkFrames *arg1 = (stk::StkFrames *) 0 ;
  size_t arg2 ;
  unsigned int arg3 ;
  stk::StkFloat arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StkFrames_resize" "', argument " "1"" of type '" "stk::StkFrames *""'"); 
  }
  arg1 = reinterpret_cast< stk::StkFrames * >(argp1);
  ecode2 = SWIG_AsVal_size_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "StkFrames_resize" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "StkFrames_resize" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "StkFrames_resize" "', argument " "4"" of type '" "stk::StkFloat""'");
  } 
  arg4 = static_cast< stk::StkFloat >(val4);
  (arg1)->resize(arg2,arg3,arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StkFrames_resize(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "StkFrames_resize", 0, 4, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__StkFrames, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_StkFrames_resize__SWIG_1(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__StkFrames, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_StkFrames_resize__SWIG_0(self, argc, argv);
        }
      }
    }
  }
  if (argc == 4) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__StkFrames, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_StkFrames_resize__SWIG_2(self, argc, argv);
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'StkFrames_resize'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::StkFrames::resize(size_t,unsigned int)\n"
    "    stk::StkFrames::resize(size_t)\n"
    "    stk::StkFrames::resize(size_t,unsigned int,stk::StkFloat)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_StkFrames_getChannel(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::StkFrames *arg1 = (stk::StkFrames *) 0 ;
  unsigned int arg2 ;
  stk::StkFrames *arg3 = 0 ;
  unsigned int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  PyObject *swig_obj[4] ;
  stk::StkFrames *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "StkFrames_getChannel", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StkFrames_getChannel" "', argument " "1"" of type '" "stk::StkFrames const *""'"); 
  }
  arg1 = reinterpret_cast< stk::StkFrames * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "StkFrames_getChannel" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "StkFrames_getChannel" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "StkFrames_getChannel" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  arg3 = reinterpret_cast< stk::StkFrames * >(argp3);
  ecode4 = SWIG_AsVal_unsigned_SS_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "StkFrames_getChannel" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  result = (stk::StkFrames *) &((stk::StkFrames const *)arg1)->getChannel(arg2,*arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StkFrames_setChannel(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::StkFrames *arg1 = (stk::StkFrames *) 0 ;
  unsigned int arg2 ;
  stk::StkFrames *arg3 = 0 ;
  unsigned int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  PyObject *swig_obj[4] ;
  
  if (!SWIG_Python_UnpackTuple(args, "StkFrames_setChannel", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StkFrames_setChannel" "', argument " "1"" of type '" "stk::StkFrames *""'"); 
  }
  arg1 = reinterpret_cast< stk::StkFrames * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "StkFrames_setChannel" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_stk__StkFrames,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "StkFrames_setChannel" "', argument " "3"" of type '" "stk::StkFrames const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "StkFrames_setChannel" "', argument " "3"" of type '" "stk::StkFrames const &""'"); 
  }
  arg3 = reinterpret_cast< stk::StkFrames * >(argp3);
  ecode4 = SWIG_AsVal_unsigned_SS_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "StkFrames_setChannel" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  (arg1)->setChannel(arg2,(stk::StkFrames const &)*arg3,arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StkFrames_channels(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::StkFrames *arg1 = (stk::StkFrames *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StkFrames_channels" "', argument " "1"" of type '" "stk::StkFrames const *""'"); 
  }
  arg1 = reinterpret_cast< stk::StkFrames * >(argp1);
  result = (unsigned int)((stk::StkFrames const *)arg1)->channels();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StkFrames_frames(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::StkFrames *arg1 = (stk::StkFrames *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StkFrames_frames" "', argument " "1"" of type '" "stk::StkFrames const *""'"); 
  }
  arg1 = reinterpret_cast< stk::StkFrames * >(argp1);
  result = (unsigned int)((stk::StkFrames const *)arg1)->frames();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StkFrames_setDataRate(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::StkFrames *arg1 = (stk::StkFrames *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "StkFrames_setDataRate", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StkFrames_setDataRate" "', argument " "1"" of type '" "stk::StkFrames *""'"); 
  }
  arg1 = reinterpret_cast< stk::StkFrames * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "StkFrames_setDataRate" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setDataRate(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StkFrames_dataRate(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::StkFrames *arg1 = (stk::StkFrames *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  stk::StkFloat result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StkFrames_dataRate" "', argument " "1"" of type '" "stk::StkFrames const *""'"); 
  }
  arg1 = reinterpret_cast< stk::StkFrames * >(argp1);
  result = (stk::StkFloat)((stk::StkFrames const *)arg1)->dataRate();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *StkFrames_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_stk__StkFrames, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *StkFrames_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN int Swig_var_SRATE_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable SRATE is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_SRATE_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_float(static_cast< float >(stk::SRATE));
  return pyobj;
}


SWIGINTERN int Swig_var_RT_BUFFER_SIZE_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable RT_BUFFER_SIZE is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_RT_BUFFER_SIZE_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(stk::RT_BUFFER_SIZE));
  return pyobj;
}


SWIGINTERN int Swig_var_PI_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable PI is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_PI_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_float(static_cast< float >(stk::PI));
  return pyobj;
}


SWIGINTERN int Swig_var_TWO_PI_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable TWO_PI is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_TWO_PI_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_float(static_cast< float >(stk::TWO_PI));
  return pyobj;
}


SWIGINTERN int Swig_var_ONE_OVER_128_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ONE_OVER_128 is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_ONE_OVER_128_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_float(static_cast< float >(stk::ONE_OVER_128));
  return pyobj;
}


SWIGINTERN PyObject *_wrap_Effect_channelsOut(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Effect *arg1 = (stk::Effect *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Effect, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Effect_channelsOut" "', argument " "1"" of type '" "stk::Effect const *""'"); 
  }
  arg1 = reinterpret_cast< stk::Effect * >(argp1);
  result = (unsigned int)((stk::Effect const *)arg1)->channelsOut();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Effect_lastFrame(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Effect *arg1 = (stk::Effect *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  stk::StkFrames *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Effect, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Effect_lastFrame" "', argument " "1"" of type '" "stk::Effect const *""'"); 
  }
  arg1 = reinterpret_cast< stk::Effect * >(argp1);
  result = (stk::StkFrames *) &((stk::Effect const *)arg1)->lastFrame();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Effect_clear(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Effect *arg1 = (stk::Effect *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Effect, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Effect_clear" "', argument " "1"" of type '" "stk::Effect *""'"); 
  }
  arg1 = reinterpret_cast< stk::Effect * >(argp1);
  (arg1)->clear();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Effect_setEffectMix(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Effect *arg1 = (stk::Effect *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Effect_setEffectMix", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Effect, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Effect_setEffectMix" "', argument " "1"" of type '" "stk::Effect *""'"); 
  }
  arg1 = reinterpret_cast< stk::Effect * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Effect_setEffectMix" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setEffectMix(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Effect(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Effect *arg1 = (stk::Effect *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Effect, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Effect" "', argument " "1"" of type '" "stk::Effect *""'"); 
  }
  arg1 = reinterpret_cast< stk::Effect * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Effect_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_stk__Effect, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_Filter_channelsIn(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Filter *arg1 = (stk::Filter *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Filter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Filter_channelsIn" "', argument " "1"" of type '" "stk::Filter const *""'"); 
  }
  arg1 = reinterpret_cast< stk::Filter * >(argp1);
  result = (unsigned int)((stk::Filter const *)arg1)->channelsIn();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Filter_channelsOut(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Filter *arg1 = (stk::Filter *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Filter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Filter_channelsOut" "', argument " "1"" of type '" "stk::Filter const *""'"); 
  }
  arg1 = reinterpret_cast< stk::Filter * >(argp1);
  result = (unsigned int)((stk::Filter const *)arg1)->channelsOut();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Filter_clear(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Filter *arg1 = (stk::Filter *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Filter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Filter_clear" "', argument " "1"" of type '" "stk::Filter *""'"); 
  }
  arg1 = reinterpret_cast< stk::Filter * >(argp1);
  (arg1)->clear();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Filter_setGain(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Filter *arg1 = (stk::Filter *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Filter_setGain", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Filter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Filter_setGain" "', argument " "1"" of type '" "stk::Filter *""'"); 
  }
  arg1 = reinterpret_cast< stk::Filter * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Filter_setGain" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setGain(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Filter_getGain(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Filter *arg1 = (stk::Filter *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  stk::StkFloat result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Filter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Filter_getGain" "', argument " "1"" of type '" "stk::Filter const *""'"); 
  }
  arg1 = reinterpret_cast< stk::Filter * >(argp1);
  result = (stk::StkFloat)((stk::Filter const *)arg1)->getGain();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Filter_phaseDelay(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Filter *arg1 = (stk::Filter *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  stk::StkFloat result;
  
  if (!SWIG_Python_UnpackTuple(args, "Filter_phaseDelay", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Filter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Filter_phaseDelay" "', argument " "1"" of type '" "stk::Filter *""'"); 
  }
  arg1 = reinterpret_cast< stk::Filter * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Filter_phaseDelay" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  result = (stk::StkFloat)(arg1)->phaseDelay(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Filter_lastFrame(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Filter *arg1 = (stk::Filter *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  stk::StkFrames *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Filter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Filter_lastFrame" "', argument " "1"" of type '" "stk::Filter const *""'"); 
  }
  arg1 = reinterpret_cast< stk::Filter * >(argp1);
  result = (stk::StkFrames *) &((stk::Filter const *)arg1)->lastFrame();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Filter_tick__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Filter *arg1 = (stk::Filter *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Filter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Filter_tick" "', argument " "1"" of type '" "stk::Filter *""'"); 
  }
  arg1 = reinterpret_cast< stk::Filter * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Filter_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Filter_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Filter_tick" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Filter_tick__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Filter *arg1 = (stk::Filter *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Filter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Filter_tick" "', argument " "1"" of type '" "stk::Filter *""'"); 
  }
  arg1 = reinterpret_cast< stk::Filter * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Filter_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Filter_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Filter_tick(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Filter_tick", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Filter, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Filter_tick__SWIG_1(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Filter, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Filter_tick__SWIG_0(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Filter_tick'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::Filter::tick(stk::StkFrames &,unsigned int)\n"
    "    stk::Filter::tick(stk::StkFrames &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_Filter(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Filter *arg1 = (stk::Filter *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Filter, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Filter" "', argument " "1"" of type '" "stk::Filter *""'"); 
  }
  arg1 = reinterpret_cast< stk::Filter * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Filter_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_stk__Filter, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_Generator_channelsOut(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Generator *arg1 = (stk::Generator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Generator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Generator_channelsOut" "', argument " "1"" of type '" "stk::Generator const *""'"); 
  }
  arg1 = reinterpret_cast< stk::Generator * >(argp1);
  result = (unsigned int)((stk::Generator const *)arg1)->channelsOut();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Generator_lastFrame(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Generator *arg1 = (stk::Generator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  stk::StkFrames *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Generator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Generator_lastFrame" "', argument " "1"" of type '" "stk::Generator const *""'"); 
  }
  arg1 = reinterpret_cast< stk::Generator * >(argp1);
  result = (stk::StkFrames *) &((stk::Generator const *)arg1)->lastFrame();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Generator_tick__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Generator *arg1 = (stk::Generator *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Generator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Generator_tick" "', argument " "1"" of type '" "stk::Generator *""'"); 
  }
  arg1 = reinterpret_cast< stk::Generator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Generator_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Generator_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Generator_tick" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Generator_tick__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Generator *arg1 = (stk::Generator *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Generator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Generator_tick" "', argument " "1"" of type '" "stk::Generator *""'"); 
  }
  arg1 = reinterpret_cast< stk::Generator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Generator_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Generator_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Generator_tick(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Generator_tick", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Generator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Generator_tick__SWIG_1(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Generator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Generator_tick__SWIG_0(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Generator_tick'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::Generator::tick(stk::StkFrames &,unsigned int)\n"
    "    stk::Generator::tick(stk::StkFrames &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_Generator(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Generator *arg1 = (stk::Generator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Generator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Generator" "', argument " "1"" of type '" "stk::Generator *""'"); 
  }
  arg1 = reinterpret_cast< stk::Generator * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Generator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_stk__Generator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_Instrmnt_clear(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Instrmnt *arg1 = (stk::Instrmnt *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Instrmnt, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Instrmnt_clear" "', argument " "1"" of type '" "stk::Instrmnt *""'"); 
  }
  arg1 = reinterpret_cast< stk::Instrmnt * >(argp1);
  (arg1)->clear();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Instrmnt_noteOn(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Instrmnt *arg1 = (stk::Instrmnt *) 0 ;
  stk::StkFloat arg2 ;
  stk::StkFloat arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Instrmnt_noteOn", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Instrmnt, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Instrmnt_noteOn" "', argument " "1"" of type '" "stk::Instrmnt *""'"); 
  }
  arg1 = reinterpret_cast< stk::Instrmnt * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Instrmnt_noteOn" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Instrmnt_noteOn" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  (arg1)->noteOn(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Instrmnt_noteOff(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Instrmnt *arg1 = (stk::Instrmnt *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Instrmnt_noteOff", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Instrmnt, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Instrmnt_noteOff" "', argument " "1"" of type '" "stk::Instrmnt *""'"); 
  }
  arg1 = reinterpret_cast< stk::Instrmnt * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Instrmnt_noteOff" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->noteOff(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Instrmnt_setFrequency(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Instrmnt *arg1 = (stk::Instrmnt *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Instrmnt_setFrequency", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Instrmnt, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Instrmnt_setFrequency" "', argument " "1"" of type '" "stk::Instrmnt *""'"); 
  }
  arg1 = reinterpret_cast< stk::Instrmnt * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Instrmnt_setFrequency" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setFrequency(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Instrmnt_controlChange(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Instrmnt *arg1 = (stk::Instrmnt *) 0 ;
  int arg2 ;
  stk::StkFloat arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Instrmnt_controlChange", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Instrmnt, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Instrmnt_controlChange" "', argument " "1"" of type '" "stk::Instrmnt *""'"); 
  }
  arg1 = reinterpret_cast< stk::Instrmnt * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Instrmnt_controlChange" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Instrmnt_controlChange" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  (arg1)->controlChange(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Instrmnt_channelsOut(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Instrmnt *arg1 = (stk::Instrmnt *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Instrmnt, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Instrmnt_channelsOut" "', argument " "1"" of type '" "stk::Instrmnt const *""'"); 
  }
  arg1 = reinterpret_cast< stk::Instrmnt * >(argp1);
  result = (unsigned int)((stk::Instrmnt const *)arg1)->channelsOut();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Instrmnt_lastFrame(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Instrmnt *arg1 = (stk::Instrmnt *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  stk::StkFrames *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Instrmnt, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Instrmnt_lastFrame" "', argument " "1"" of type '" "stk::Instrmnt const *""'"); 
  }
  arg1 = reinterpret_cast< stk::Instrmnt * >(argp1);
  result = (stk::StkFrames *) &((stk::Instrmnt const *)arg1)->lastFrame();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Instrmnt_lastOut__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Instrmnt *arg1 = (stk::Instrmnt *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Instrmnt, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Instrmnt_lastOut" "', argument " "1"" of type '" "stk::Instrmnt *""'"); 
  }
  arg1 = reinterpret_cast< stk::Instrmnt * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Instrmnt_lastOut" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (stk::StkFloat)(arg1)->lastOut(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Instrmnt_lastOut__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Instrmnt *arg1 = (stk::Instrmnt *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Instrmnt, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Instrmnt_lastOut" "', argument " "1"" of type '" "stk::Instrmnt *""'"); 
  }
  arg1 = reinterpret_cast< stk::Instrmnt * >(argp1);
  result = (stk::StkFloat)(arg1)->lastOut();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Instrmnt_lastOut(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Instrmnt_lastOut", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Instrmnt, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Instrmnt_lastOut__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Instrmnt, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Instrmnt_lastOut__SWIG_0(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Instrmnt_lastOut'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::Instrmnt::lastOut(unsigned int)\n"
    "    stk::Instrmnt::lastOut()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Instrmnt_tick__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Instrmnt *arg1 = (stk::Instrmnt *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Instrmnt, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Instrmnt_tick" "', argument " "1"" of type '" "stk::Instrmnt *""'"); 
  }
  arg1 = reinterpret_cast< stk::Instrmnt * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Instrmnt_tick" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (stk::StkFloat)(arg1)->tick(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Instrmnt_tick__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Instrmnt *arg1 = (stk::Instrmnt *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Instrmnt, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Instrmnt_tick" "', argument " "1"" of type '" "stk::Instrmnt *""'"); 
  }
  arg1 = reinterpret_cast< stk::Instrmnt * >(argp1);
  result = (stk::StkFloat)(arg1)->tick();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Instrmnt_tick__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Instrmnt *arg1 = (stk::Instrmnt *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Instrmnt, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Instrmnt_tick" "', argument " "1"" of type '" "stk::Instrmnt *""'"); 
  }
  arg1 = reinterpret_cast< stk::Instrmnt * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Instrmnt_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Instrmnt_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Instrmnt_tick" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Instrmnt_tick__SWIG_3(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Instrmnt *arg1 = (stk::Instrmnt *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Instrmnt, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Instrmnt_tick" "', argument " "1"" of type '" "stk::Instrmnt *""'"); 
  }
  arg1 = reinterpret_cast< stk::Instrmnt * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Instrmnt_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Instrmnt_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Instrmnt_tick(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Instrmnt_tick", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Instrmnt, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Instrmnt_tick__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Instrmnt, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Instrmnt_tick__SWIG_3(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Instrmnt, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Instrmnt_tick__SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Instrmnt, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Instrmnt_tick__SWIG_2(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Instrmnt_tick'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::Instrmnt::tick(unsigned int)\n"
    "    stk::Instrmnt::tick()\n"
    "    stk::Instrmnt::tick(stk::StkFrames &,unsigned int)\n"
    "    stk::Instrmnt::tick(stk::StkFrames &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_Instrmnt(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Instrmnt *arg1 = (stk::Instrmnt *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Instrmnt, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Instrmnt" "', argument " "1"" of type '" "stk::Instrmnt *""'"); 
  }
  arg1 = reinterpret_cast< stk::Instrmnt * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Instrmnt_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_stk__Instrmnt, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_Function_lastOut(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Function *arg1 = (stk::Function *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  stk::StkFloat result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Function, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Function_lastOut" "', argument " "1"" of type '" "stk::Function const *""'"); 
  }
  arg1 = reinterpret_cast< stk::Function * >(argp1);
  result = (stk::StkFloat)((stk::Function const *)arg1)->lastOut();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Function_tick(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Function *arg1 = (stk::Function *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  stk::StkFloat result;
  
  if (!SWIG_Python_UnpackTuple(args, "Function_tick", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Function, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Function_tick" "', argument " "1"" of type '" "stk::Function *""'"); 
  }
  arg1 = reinterpret_cast< stk::Function * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Function_tick" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  result = (stk::StkFloat)(arg1)->tick(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Function(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Function *arg1 = (stk::Function *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Function, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Function" "', argument " "1"" of type '" "stk::Function *""'"); 
  }
  arg1 = reinterpret_cast< stk::Function * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Function_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_stk__Function, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_delete_FM(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::FM *arg1 = (stk::FM *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FM, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_FM" "', argument " "1"" of type '" "stk::FM *""'"); 
  }
  arg1 = reinterpret_cast< stk::FM * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FM_loadWaves(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::FM *arg1 = (stk::FM *) 0 ;
  char **arg2 = (char **) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "FM_loadWaves", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FM, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FM_loadWaves" "', argument " "1"" of type '" "stk::FM *""'"); 
  }
  arg1 = reinterpret_cast< stk::FM * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_p_char, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FM_loadWaves" "', argument " "2"" of type '" "char const **""'"); 
  }
  arg2 = reinterpret_cast< char ** >(argp2);
  (arg1)->loadWaves((char const **)arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FM_setFrequency(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::FM *arg1 = (stk::FM *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "FM_setFrequency", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FM, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FM_setFrequency" "', argument " "1"" of type '" "stk::FM *""'"); 
  }
  arg1 = reinterpret_cast< stk::FM * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FM_setFrequency" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setFrequency(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FM_setRatio(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::FM *arg1 = (stk::FM *) 0 ;
  unsigned int arg2 ;
  stk::StkFloat arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "FM_setRatio", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FM, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FM_setRatio" "', argument " "1"" of type '" "stk::FM *""'"); 
  }
  arg1 = reinterpret_cast< stk::FM * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FM_setRatio" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "FM_setRatio" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  (arg1)->setRatio(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FM_setGain(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::FM *arg1 = (stk::FM *) 0 ;
  unsigned int arg2 ;
  stk::StkFloat arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "FM_setGain", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FM, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FM_setGain" "', argument " "1"" of type '" "stk::FM *""'"); 
  }
  arg1 = reinterpret_cast< stk::FM * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FM_setGain" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "FM_setGain" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  (arg1)->setGain(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FM_setModulationSpeed(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::FM *arg1 = (stk::FM *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "FM_setModulationSpeed", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FM, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FM_setModulationSpeed" "', argument " "1"" of type '" "stk::FM *""'"); 
  }
  arg1 = reinterpret_cast< stk::FM * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FM_setModulationSpeed" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setModulationSpeed(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FM_setModulationDepth(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::FM *arg1 = (stk::FM *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "FM_setModulationDepth", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FM, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FM_setModulationDepth" "', argument " "1"" of type '" "stk::FM *""'"); 
  }
  arg1 = reinterpret_cast< stk::FM * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FM_setModulationDepth" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setModulationDepth(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FM_setControl1(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::FM *arg1 = (stk::FM *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "FM_setControl1", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FM, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FM_setControl1" "', argument " "1"" of type '" "stk::FM *""'"); 
  }
  arg1 = reinterpret_cast< stk::FM * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FM_setControl1" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setControl1(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FM_setControl2(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::FM *arg1 = (stk::FM *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "FM_setControl2", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FM, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FM_setControl2" "', argument " "1"" of type '" "stk::FM *""'"); 
  }
  arg1 = reinterpret_cast< stk::FM * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FM_setControl2" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setControl2(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FM_keyOn(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::FM *arg1 = (stk::FM *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FM, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FM_keyOn" "', argument " "1"" of type '" "stk::FM *""'"); 
  }
  arg1 = reinterpret_cast< stk::FM * >(argp1);
  (arg1)->keyOn();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FM_keyOff(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::FM *arg1 = (stk::FM *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FM, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FM_keyOff" "', argument " "1"" of type '" "stk::FM *""'"); 
  }
  arg1 = reinterpret_cast< stk::FM * >(argp1);
  (arg1)->keyOff();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FM_noteOff(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::FM *arg1 = (stk::FM *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "FM_noteOff", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FM, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FM_noteOff" "', argument " "1"" of type '" "stk::FM *""'"); 
  }
  arg1 = reinterpret_cast< stk::FM * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FM_noteOff" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->noteOff(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FM_controlChange(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::FM *arg1 = (stk::FM *) 0 ;
  int arg2 ;
  stk::StkFloat arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "FM_controlChange", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FM, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FM_controlChange" "', argument " "1"" of type '" "stk::FM *""'"); 
  }
  arg1 = reinterpret_cast< stk::FM * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FM_controlChange" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "FM_controlChange" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  (arg1)->controlChange(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FM_tick__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::FM *arg1 = (stk::FM *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FM, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FM_tick" "', argument " "1"" of type '" "stk::FM *""'"); 
  }
  arg1 = reinterpret_cast< stk::FM * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FM_tick" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (stk::StkFloat)(arg1)->tick(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FM_tick__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::FM *arg1 = (stk::FM *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FM, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FM_tick" "', argument " "1"" of type '" "stk::FM *""'"); 
  }
  arg1 = reinterpret_cast< stk::FM * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FM_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FM_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "FM_tick" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FM_tick__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::FM *arg1 = (stk::FM *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FM, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FM_tick" "', argument " "1"" of type '" "stk::FM *""'"); 
  }
  arg1 = reinterpret_cast< stk::FM * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FM_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FM_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FM_tick(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "FM_tick", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__FM, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_FM_tick__SWIG_2(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__FM, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_FM_tick__SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__FM, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_FM_tick__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'FM_tick'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::FM::tick(unsigned int)\n"
    "    stk::FM::tick(stk::StkFrames &,unsigned int)\n"
    "    stk::FM::tick(stk::StkFrames &)\n");
  return 0;
}


SWIGINTERN PyObject *FM_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_stk__FM, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_ADSR(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::ADSR *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_ADSR", 0, 0, 0)) SWIG_fail;
  result = (stk::ADSR *)new stk::ADSR();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__ADSR, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ADSR(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::ADSR *arg1 = (stk::ADSR *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__ADSR, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ADSR" "', argument " "1"" of type '" "stk::ADSR *""'"); 
  }
  arg1 = reinterpret_cast< stk::ADSR * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ADSR_keyOn(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::ADSR *arg1 = (stk::ADSR *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__ADSR, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ADSR_keyOn" "', argument " "1"" of type '" "stk::ADSR *""'"); 
  }
  arg1 = reinterpret_cast< stk::ADSR * >(argp1);
  (arg1)->keyOn();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ADSR_keyOff(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::ADSR *arg1 = (stk::ADSR *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__ADSR, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ADSR_keyOff" "', argument " "1"" of type '" "stk::ADSR *""'"); 
  }
  arg1 = reinterpret_cast< stk::ADSR * >(argp1);
  (arg1)->keyOff();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ADSR_setAttackRate(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::ADSR *arg1 = (stk::ADSR *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ADSR_setAttackRate", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__ADSR, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ADSR_setAttackRate" "', argument " "1"" of type '" "stk::ADSR *""'"); 
  }
  arg1 = reinterpret_cast< stk::ADSR * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ADSR_setAttackRate" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setAttackRate(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ADSR_setAttackTarget(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::ADSR *arg1 = (stk::ADSR *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ADSR_setAttackTarget", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__ADSR, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ADSR_setAttackTarget" "', argument " "1"" of type '" "stk::ADSR *""'"); 
  }
  arg1 = reinterpret_cast< stk::ADSR * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ADSR_setAttackTarget" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setAttackTarget(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ADSR_setDecayRate(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::ADSR *arg1 = (stk::ADSR *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ADSR_setDecayRate", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__ADSR, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ADSR_setDecayRate" "', argument " "1"" of type '" "stk::ADSR *""'"); 
  }
  arg1 = reinterpret_cast< stk::ADSR * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ADSR_setDecayRate" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setDecayRate(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ADSR_setSustainLevel(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::ADSR *arg1 = (stk::ADSR *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ADSR_setSustainLevel", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__ADSR, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ADSR_setSustainLevel" "', argument " "1"" of type '" "stk::ADSR *""'"); 
  }
  arg1 = reinterpret_cast< stk::ADSR * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ADSR_setSustainLevel" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setSustainLevel(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ADSR_setReleaseRate(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::ADSR *arg1 = (stk::ADSR *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ADSR_setReleaseRate", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__ADSR, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ADSR_setReleaseRate" "', argument " "1"" of type '" "stk::ADSR *""'"); 
  }
  arg1 = reinterpret_cast< stk::ADSR * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ADSR_setReleaseRate" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setReleaseRate(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ADSR_setAttackTime(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::ADSR *arg1 = (stk::ADSR *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ADSR_setAttackTime", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__ADSR, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ADSR_setAttackTime" "', argument " "1"" of type '" "stk::ADSR *""'"); 
  }
  arg1 = reinterpret_cast< stk::ADSR * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ADSR_setAttackTime" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setAttackTime(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ADSR_setDecayTime(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::ADSR *arg1 = (stk::ADSR *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ADSR_setDecayTime", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__ADSR, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ADSR_setDecayTime" "', argument " "1"" of type '" "stk::ADSR *""'"); 
  }
  arg1 = reinterpret_cast< stk::ADSR * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ADSR_setDecayTime" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setDecayTime(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ADSR_setReleaseTime(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::ADSR *arg1 = (stk::ADSR *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ADSR_setReleaseTime", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__ADSR, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ADSR_setReleaseTime" "', argument " "1"" of type '" "stk::ADSR *""'"); 
  }
  arg1 = reinterpret_cast< stk::ADSR * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ADSR_setReleaseTime" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setReleaseTime(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ADSR_setAllTimes(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::ADSR *arg1 = (stk::ADSR *) 0 ;
  stk::StkFloat arg2 ;
  stk::StkFloat arg3 ;
  stk::StkFloat arg4 ;
  stk::StkFloat arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  PyObject *swig_obj[5] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ADSR_setAllTimes", 5, 5, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__ADSR, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ADSR_setAllTimes" "', argument " "1"" of type '" "stk::ADSR *""'"); 
  }
  arg1 = reinterpret_cast< stk::ADSR * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ADSR_setAllTimes" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ADSR_setAllTimes" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "ADSR_setAllTimes" "', argument " "4"" of type '" "stk::StkFloat""'");
  } 
  arg4 = static_cast< stk::StkFloat >(val4);
  ecode5 = SWIG_AsVal_float(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "ADSR_setAllTimes" "', argument " "5"" of type '" "stk::StkFloat""'");
  } 
  arg5 = static_cast< stk::StkFloat >(val5);
  (arg1)->setAllTimes(arg2,arg3,arg4,arg5);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ADSR_setTarget(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::ADSR *arg1 = (stk::ADSR *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ADSR_setTarget", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__ADSR, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ADSR_setTarget" "', argument " "1"" of type '" "stk::ADSR *""'"); 
  }
  arg1 = reinterpret_cast< stk::ADSR * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ADSR_setTarget" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setTarget(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ADSR_getState(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::ADSR *arg1 = (stk::ADSR *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__ADSR, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ADSR_getState" "', argument " "1"" of type '" "stk::ADSR const *""'"); 
  }
  arg1 = reinterpret_cast< stk::ADSR * >(argp1);
  result = (int)((stk::ADSR const *)arg1)->getState();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ADSR_setValue(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::ADSR *arg1 = (stk::ADSR *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ADSR_setValue", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__ADSR, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ADSR_setValue" "', argument " "1"" of type '" "stk::ADSR *""'"); 
  }
  arg1 = reinterpret_cast< stk::ADSR * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ADSR_setValue" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setValue(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ADSR_lastOut(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::ADSR *arg1 = (stk::ADSR *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  stk::StkFloat result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__ADSR, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ADSR_lastOut" "', argument " "1"" of type '" "stk::ADSR const *""'"); 
  }
  arg1 = reinterpret_cast< stk::ADSR * >(argp1);
  result = (stk::StkFloat)((stk::ADSR const *)arg1)->lastOut();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ADSR_tick__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::ADSR *arg1 = (stk::ADSR *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__ADSR, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ADSR_tick" "', argument " "1"" of type '" "stk::ADSR *""'"); 
  }
  arg1 = reinterpret_cast< stk::ADSR * >(argp1);
  result = (stk::StkFloat)(arg1)->tick();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ADSR_tick__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::ADSR *arg1 = (stk::ADSR *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__ADSR, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ADSR_tick" "', argument " "1"" of type '" "stk::ADSR *""'"); 
  }
  arg1 = reinterpret_cast< stk::ADSR * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ADSR_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ADSR_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ADSR_tick" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ADSR_tick__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::ADSR *arg1 = (stk::ADSR *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__ADSR, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ADSR_tick" "', argument " "1"" of type '" "stk::ADSR *""'"); 
  }
  arg1 = reinterpret_cast< stk::ADSR * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ADSR_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ADSR_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ADSR_tick(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "ADSR_tick", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__ADSR, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_ADSR_tick__SWIG_0(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__ADSR, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_ADSR_tick__SWIG_2(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__ADSR, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_ADSR_tick__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'ADSR_tick'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::ADSR::tick()\n"
    "    stk::ADSR::tick(stk::StkFrames &,unsigned int)\n"
    "    stk::ADSR::tick(stk::StkFrames &)\n");
  return 0;
}


SWIGINTERN PyObject *ADSR_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_stk__ADSR, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *ADSR_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN int Swig_var_TARGET_THRESHOLD_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable TARGET_THRESHOLD is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_TARGET_THRESHOLD_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_float(static_cast< float >(stk::TARGET_THRESHOLD));
  return pyobj;
}


SWIGINTERN PyObject *_wrap_new_Asymp(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Asymp *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_Asymp", 0, 0, 0)) SWIG_fail;
  result = (stk::Asymp *)new stk::Asymp();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__Asymp, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Asymp(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Asymp *arg1 = (stk::Asymp *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Asymp, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Asymp" "', argument " "1"" of type '" "stk::Asymp *""'"); 
  }
  arg1 = reinterpret_cast< stk::Asymp * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Asymp_keyOn(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Asymp *arg1 = (stk::Asymp *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Asymp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Asymp_keyOn" "', argument " "1"" of type '" "stk::Asymp *""'"); 
  }
  arg1 = reinterpret_cast< stk::Asymp * >(argp1);
  (arg1)->keyOn();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Asymp_keyOff(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Asymp *arg1 = (stk::Asymp *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Asymp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Asymp_keyOff" "', argument " "1"" of type '" "stk::Asymp *""'"); 
  }
  arg1 = reinterpret_cast< stk::Asymp * >(argp1);
  (arg1)->keyOff();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Asymp_setTau(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Asymp *arg1 = (stk::Asymp *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Asymp_setTau", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Asymp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Asymp_setTau" "', argument " "1"" of type '" "stk::Asymp *""'"); 
  }
  arg1 = reinterpret_cast< stk::Asymp * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Asymp_setTau" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setTau(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Asymp_setTime(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Asymp *arg1 = (stk::Asymp *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Asymp_setTime", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Asymp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Asymp_setTime" "', argument " "1"" of type '" "stk::Asymp *""'"); 
  }
  arg1 = reinterpret_cast< stk::Asymp * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Asymp_setTime" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setTime(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Asymp_setT60(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Asymp *arg1 = (stk::Asymp *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Asymp_setT60", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Asymp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Asymp_setT60" "', argument " "1"" of type '" "stk::Asymp *""'"); 
  }
  arg1 = reinterpret_cast< stk::Asymp * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Asymp_setT60" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setT60(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Asymp_setTarget(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Asymp *arg1 = (stk::Asymp *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Asymp_setTarget", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Asymp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Asymp_setTarget" "', argument " "1"" of type '" "stk::Asymp *""'"); 
  }
  arg1 = reinterpret_cast< stk::Asymp * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Asymp_setTarget" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setTarget(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Asymp_setValue(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Asymp *arg1 = (stk::Asymp *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Asymp_setValue", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Asymp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Asymp_setValue" "', argument " "1"" of type '" "stk::Asymp *""'"); 
  }
  arg1 = reinterpret_cast< stk::Asymp * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Asymp_setValue" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setValue(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Asymp_getState(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Asymp *arg1 = (stk::Asymp *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Asymp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Asymp_getState" "', argument " "1"" of type '" "stk::Asymp const *""'"); 
  }
  arg1 = reinterpret_cast< stk::Asymp * >(argp1);
  result = (int)((stk::Asymp const *)arg1)->getState();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Asymp_lastOut(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Asymp *arg1 = (stk::Asymp *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  stk::StkFloat result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Asymp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Asymp_lastOut" "', argument " "1"" of type '" "stk::Asymp const *""'"); 
  }
  arg1 = reinterpret_cast< stk::Asymp * >(argp1);
  result = (stk::StkFloat)((stk::Asymp const *)arg1)->lastOut();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Asymp_tick__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Asymp *arg1 = (stk::Asymp *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Asymp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Asymp_tick" "', argument " "1"" of type '" "stk::Asymp *""'"); 
  }
  arg1 = reinterpret_cast< stk::Asymp * >(argp1);
  result = (stk::StkFloat)(arg1)->tick();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Asymp_tick__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Asymp *arg1 = (stk::Asymp *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Asymp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Asymp_tick" "', argument " "1"" of type '" "stk::Asymp *""'"); 
  }
  arg1 = reinterpret_cast< stk::Asymp * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Asymp_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Asymp_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Asymp_tick" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Asymp_tick__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Asymp *arg1 = (stk::Asymp *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Asymp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Asymp_tick" "', argument " "1"" of type '" "stk::Asymp *""'"); 
  }
  arg1 = reinterpret_cast< stk::Asymp * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Asymp_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Asymp_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Asymp_tick(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Asymp_tick", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Asymp, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Asymp_tick__SWIG_0(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Asymp, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Asymp_tick__SWIG_2(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Asymp, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Asymp_tick__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Asymp_tick'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::Asymp::tick()\n"
    "    stk::Asymp::tick(stk::StkFrames &,unsigned int)\n"
    "    stk::Asymp::tick(stk::StkFrames &)\n");
  return 0;
}


SWIGINTERN PyObject *Asymp_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_stk__Asymp, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *Asymp_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN int Swig_var_MAX_BANDED_MODES_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable MAX_BANDED_MODES is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_MAX_BANDED_MODES_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_int(static_cast< int >(stk::MAX_BANDED_MODES));
  return pyobj;
}


SWIGINTERN PyObject *_wrap_new_BandedWG(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::BandedWG *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_BandedWG", 0, 0, 0)) SWIG_fail;
  result = (stk::BandedWG *)new stk::BandedWG();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__BandedWG, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_BandedWG(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::BandedWG *arg1 = (stk::BandedWG *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__BandedWG, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_BandedWG" "', argument " "1"" of type '" "stk::BandedWG *""'"); 
  }
  arg1 = reinterpret_cast< stk::BandedWG * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BandedWG_clear(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::BandedWG *arg1 = (stk::BandedWG *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__BandedWG, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BandedWG_clear" "', argument " "1"" of type '" "stk::BandedWG *""'"); 
  }
  arg1 = reinterpret_cast< stk::BandedWG * >(argp1);
  (arg1)->clear();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BandedWG_setStrikePosition(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::BandedWG *arg1 = (stk::BandedWG *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "BandedWG_setStrikePosition", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__BandedWG, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BandedWG_setStrikePosition" "', argument " "1"" of type '" "stk::BandedWG *""'"); 
  }
  arg1 = reinterpret_cast< stk::BandedWG * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BandedWG_setStrikePosition" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setStrikePosition(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BandedWG_setPreset(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::BandedWG *arg1 = (stk::BandedWG *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "BandedWG_setPreset", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__BandedWG, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BandedWG_setPreset" "', argument " "1"" of type '" "stk::BandedWG *""'"); 
  }
  arg1 = reinterpret_cast< stk::BandedWG * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BandedWG_setPreset" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->setPreset(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BandedWG_setFrequency(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::BandedWG *arg1 = (stk::BandedWG *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "BandedWG_setFrequency", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__BandedWG, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BandedWG_setFrequency" "', argument " "1"" of type '" "stk::BandedWG *""'"); 
  }
  arg1 = reinterpret_cast< stk::BandedWG * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BandedWG_setFrequency" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setFrequency(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BandedWG_startBowing(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::BandedWG *arg1 = (stk::BandedWG *) 0 ;
  stk::StkFloat arg2 ;
  stk::StkFloat arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "BandedWG_startBowing", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__BandedWG, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BandedWG_startBowing" "', argument " "1"" of type '" "stk::BandedWG *""'"); 
  }
  arg1 = reinterpret_cast< stk::BandedWG * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BandedWG_startBowing" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "BandedWG_startBowing" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  (arg1)->startBowing(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BandedWG_stopBowing(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::BandedWG *arg1 = (stk::BandedWG *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "BandedWG_stopBowing", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__BandedWG, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BandedWG_stopBowing" "', argument " "1"" of type '" "stk::BandedWG *""'"); 
  }
  arg1 = reinterpret_cast< stk::BandedWG * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BandedWG_stopBowing" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->stopBowing(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BandedWG_pluck(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::BandedWG *arg1 = (stk::BandedWG *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "BandedWG_pluck", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__BandedWG, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BandedWG_pluck" "', argument " "1"" of type '" "stk::BandedWG *""'"); 
  }
  arg1 = reinterpret_cast< stk::BandedWG * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BandedWG_pluck" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->pluck(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BandedWG_noteOn(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::BandedWG *arg1 = (stk::BandedWG *) 0 ;
  stk::StkFloat arg2 ;
  stk::StkFloat arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "BandedWG_noteOn", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__BandedWG, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BandedWG_noteOn" "', argument " "1"" of type '" "stk::BandedWG *""'"); 
  }
  arg1 = reinterpret_cast< stk::BandedWG * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BandedWG_noteOn" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "BandedWG_noteOn" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  (arg1)->noteOn(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BandedWG_noteOff(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::BandedWG *arg1 = (stk::BandedWG *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "BandedWG_noteOff", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__BandedWG, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BandedWG_noteOff" "', argument " "1"" of type '" "stk::BandedWG *""'"); 
  }
  arg1 = reinterpret_cast< stk::BandedWG * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BandedWG_noteOff" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->noteOff(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BandedWG_controlChange(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::BandedWG *arg1 = (stk::BandedWG *) 0 ;
  int arg2 ;
  stk::StkFloat arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "BandedWG_controlChange", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__BandedWG, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BandedWG_controlChange" "', argument " "1"" of type '" "stk::BandedWG *""'"); 
  }
  arg1 = reinterpret_cast< stk::BandedWG * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BandedWG_controlChange" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "BandedWG_controlChange" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  (arg1)->controlChange(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BandedWG_tick__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::BandedWG *arg1 = (stk::BandedWG *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__BandedWG, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BandedWG_tick" "', argument " "1"" of type '" "stk::BandedWG *""'"); 
  }
  arg1 = reinterpret_cast< stk::BandedWG * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BandedWG_tick" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (stk::StkFloat)(arg1)->tick(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BandedWG_tick__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::BandedWG *arg1 = (stk::BandedWG *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__BandedWG, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BandedWG_tick" "', argument " "1"" of type '" "stk::BandedWG *""'"); 
  }
  arg1 = reinterpret_cast< stk::BandedWG * >(argp1);
  result = (stk::StkFloat)(arg1)->tick();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BandedWG_tick__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::BandedWG *arg1 = (stk::BandedWG *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__BandedWG, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BandedWG_tick" "', argument " "1"" of type '" "stk::BandedWG *""'"); 
  }
  arg1 = reinterpret_cast< stk::BandedWG * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BandedWG_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BandedWG_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "BandedWG_tick" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BandedWG_tick__SWIG_3(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::BandedWG *arg1 = (stk::BandedWG *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__BandedWG, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BandedWG_tick" "', argument " "1"" of type '" "stk::BandedWG *""'"); 
  }
  arg1 = reinterpret_cast< stk::BandedWG * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BandedWG_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BandedWG_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BandedWG_tick(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "BandedWG_tick", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__BandedWG, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_BandedWG_tick__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__BandedWG, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_BandedWG_tick__SWIG_3(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__BandedWG, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_BandedWG_tick__SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__BandedWG, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_BandedWG_tick__SWIG_2(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'BandedWG_tick'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::BandedWG::tick(unsigned int)\n"
    "    stk::BandedWG::tick()\n"
    "    stk::BandedWG::tick(stk::StkFrames &,unsigned int)\n"
    "    stk::BandedWG::tick(stk::StkFrames &)\n");
  return 0;
}


SWIGINTERN PyObject *BandedWG_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_stk__BandedWG, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *BandedWG_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_BeeThree(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::BeeThree *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_BeeThree", 0, 0, 0)) SWIG_fail;
  result = (stk::BeeThree *)new stk::BeeThree();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__BeeThree, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_BeeThree(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::BeeThree *arg1 = (stk::BeeThree *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__BeeThree, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_BeeThree" "', argument " "1"" of type '" "stk::BeeThree *""'"); 
  }
  arg1 = reinterpret_cast< stk::BeeThree * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BeeThree_noteOn(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::BeeThree *arg1 = (stk::BeeThree *) 0 ;
  stk::StkFloat arg2 ;
  stk::StkFloat arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "BeeThree_noteOn", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__BeeThree, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BeeThree_noteOn" "', argument " "1"" of type '" "stk::BeeThree *""'"); 
  }
  arg1 = reinterpret_cast< stk::BeeThree * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BeeThree_noteOn" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "BeeThree_noteOn" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  (arg1)->noteOn(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BeeThree_tick__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::BeeThree *arg1 = (stk::BeeThree *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__BeeThree, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BeeThree_tick" "', argument " "1"" of type '" "stk::BeeThree *""'"); 
  }
  arg1 = reinterpret_cast< stk::BeeThree * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BeeThree_tick" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (stk::StkFloat)(arg1)->tick(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BeeThree_tick__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::BeeThree *arg1 = (stk::BeeThree *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__BeeThree, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BeeThree_tick" "', argument " "1"" of type '" "stk::BeeThree *""'"); 
  }
  arg1 = reinterpret_cast< stk::BeeThree * >(argp1);
  result = (stk::StkFloat)(arg1)->tick();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BeeThree_tick__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::BeeThree *arg1 = (stk::BeeThree *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__BeeThree, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BeeThree_tick" "', argument " "1"" of type '" "stk::BeeThree *""'"); 
  }
  arg1 = reinterpret_cast< stk::BeeThree * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BeeThree_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BeeThree_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "BeeThree_tick" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BeeThree_tick__SWIG_3(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::BeeThree *arg1 = (stk::BeeThree *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__BeeThree, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BeeThree_tick" "', argument " "1"" of type '" "stk::BeeThree *""'"); 
  }
  arg1 = reinterpret_cast< stk::BeeThree * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BeeThree_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BeeThree_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BeeThree_tick(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "BeeThree_tick", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__BeeThree, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_BeeThree_tick__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__BeeThree, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_BeeThree_tick__SWIG_3(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__BeeThree, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_BeeThree_tick__SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__BeeThree, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_BeeThree_tick__SWIG_2(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'BeeThree_tick'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::BeeThree::tick(unsigned int)\n"
    "    stk::BeeThree::tick()\n"
    "    stk::BeeThree::tick(stk::StkFrames &,unsigned int)\n"
    "    stk::BeeThree::tick(stk::StkFrames &)\n");
  return 0;
}


SWIGINTERN PyObject *BeeThree_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_stk__BeeThree, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *BeeThree_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_BiQuad(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::BiQuad *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_BiQuad", 0, 0, 0)) SWIG_fail;
  result = (stk::BiQuad *)new stk::BiQuad();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__BiQuad, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_BiQuad(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::BiQuad *arg1 = (stk::BiQuad *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__BiQuad, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_BiQuad" "', argument " "1"" of type '" "stk::BiQuad *""'"); 
  }
  arg1 = reinterpret_cast< stk::BiQuad * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BiQuad_ignoreSampleRateChange__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::BiQuad *arg1 = (stk::BiQuad *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__BiQuad, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BiQuad_ignoreSampleRateChange" "', argument " "1"" of type '" "stk::BiQuad *""'"); 
  }
  arg1 = reinterpret_cast< stk::BiQuad * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BiQuad_ignoreSampleRateChange" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->ignoreSampleRateChange(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BiQuad_ignoreSampleRateChange__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::BiQuad *arg1 = (stk::BiQuad *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__BiQuad, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BiQuad_ignoreSampleRateChange" "', argument " "1"" of type '" "stk::BiQuad *""'"); 
  }
  arg1 = reinterpret_cast< stk::BiQuad * >(argp1);
  (arg1)->ignoreSampleRateChange();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BiQuad_ignoreSampleRateChange(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "BiQuad_ignoreSampleRateChange", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__BiQuad, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_BiQuad_ignoreSampleRateChange__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__BiQuad, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_BiQuad_ignoreSampleRateChange__SWIG_0(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'BiQuad_ignoreSampleRateChange'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::BiQuad::ignoreSampleRateChange(bool)\n"
    "    stk::BiQuad::ignoreSampleRateChange()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_BiQuad_setCoefficients__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::BiQuad *arg1 = (stk::BiQuad *) 0 ;
  stk::StkFloat arg2 ;
  stk::StkFloat arg3 ;
  stk::StkFloat arg4 ;
  stk::StkFloat arg5 ;
  stk::StkFloat arg6 ;
  bool arg7 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  float val6 ;
  int ecode6 = 0 ;
  bool val7 ;
  int ecode7 = 0 ;
  
  if ((nobjs < 7) || (nobjs > 7)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__BiQuad, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BiQuad_setCoefficients" "', argument " "1"" of type '" "stk::BiQuad *""'"); 
  }
  arg1 = reinterpret_cast< stk::BiQuad * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BiQuad_setCoefficients" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "BiQuad_setCoefficients" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "BiQuad_setCoefficients" "', argument " "4"" of type '" "stk::StkFloat""'");
  } 
  arg4 = static_cast< stk::StkFloat >(val4);
  ecode5 = SWIG_AsVal_float(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "BiQuad_setCoefficients" "', argument " "5"" of type '" "stk::StkFloat""'");
  } 
  arg5 = static_cast< stk::StkFloat >(val5);
  ecode6 = SWIG_AsVal_float(swig_obj[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "BiQuad_setCoefficients" "', argument " "6"" of type '" "stk::StkFloat""'");
  } 
  arg6 = static_cast< stk::StkFloat >(val6);
  ecode7 = SWIG_AsVal_bool(swig_obj[6], &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "BiQuad_setCoefficients" "', argument " "7"" of type '" "bool""'");
  } 
  arg7 = static_cast< bool >(val7);
  (arg1)->setCoefficients(arg2,arg3,arg4,arg5,arg6,arg7);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BiQuad_setCoefficients__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::BiQuad *arg1 = (stk::BiQuad *) 0 ;
  stk::StkFloat arg2 ;
  stk::StkFloat arg3 ;
  stk::StkFloat arg4 ;
  stk::StkFloat arg5 ;
  stk::StkFloat arg6 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  float val6 ;
  int ecode6 = 0 ;
  
  if ((nobjs < 6) || (nobjs > 6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__BiQuad, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BiQuad_setCoefficients" "', argument " "1"" of type '" "stk::BiQuad *""'"); 
  }
  arg1 = reinterpret_cast< stk::BiQuad * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BiQuad_setCoefficients" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "BiQuad_setCoefficients" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "BiQuad_setCoefficients" "', argument " "4"" of type '" "stk::StkFloat""'");
  } 
  arg4 = static_cast< stk::StkFloat >(val4);
  ecode5 = SWIG_AsVal_float(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "BiQuad_setCoefficients" "', argument " "5"" of type '" "stk::StkFloat""'");
  } 
  arg5 = static_cast< stk::StkFloat >(val5);
  ecode6 = SWIG_AsVal_float(swig_obj[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "BiQuad_setCoefficients" "', argument " "6"" of type '" "stk::StkFloat""'");
  } 
  arg6 = static_cast< stk::StkFloat >(val6);
  (arg1)->setCoefficients(arg2,arg3,arg4,arg5,arg6);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BiQuad_setCoefficients(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[8] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "BiQuad_setCoefficients", 0, 7, argv))) SWIG_fail;
  --argc;
  if (argc == 6) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__BiQuad, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_float(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_float(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                return _wrap_BiQuad_setCoefficients__SWIG_1(self, argc, argv);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 7) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__BiQuad, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_float(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_float(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                {
                  int res = SWIG_AsVal_bool(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  return _wrap_BiQuad_setCoefficients__SWIG_0(self, argc, argv);
                }
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'BiQuad_setCoefficients'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::BiQuad::setCoefficients(stk::StkFloat,stk::StkFloat,stk::StkFloat,stk::StkFloat,stk::StkFloat,bool)\n"
    "    stk::BiQuad::setCoefficients(stk::StkFloat,stk::StkFloat,stk::StkFloat,stk::StkFloat,stk::StkFloat)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_BiQuad_setB0(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::BiQuad *arg1 = (stk::BiQuad *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "BiQuad_setB0", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__BiQuad, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BiQuad_setB0" "', argument " "1"" of type '" "stk::BiQuad *""'"); 
  }
  arg1 = reinterpret_cast< stk::BiQuad * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BiQuad_setB0" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setB0(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BiQuad_setB1(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::BiQuad *arg1 = (stk::BiQuad *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "BiQuad_setB1", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__BiQuad, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BiQuad_setB1" "', argument " "1"" of type '" "stk::BiQuad *""'"); 
  }
  arg1 = reinterpret_cast< stk::BiQuad * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BiQuad_setB1" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setB1(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BiQuad_setB2(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::BiQuad *arg1 = (stk::BiQuad *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "BiQuad_setB2", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__BiQuad, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BiQuad_setB2" "', argument " "1"" of type '" "stk::BiQuad *""'"); 
  }
  arg1 = reinterpret_cast< stk::BiQuad * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BiQuad_setB2" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setB2(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BiQuad_setA1(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::BiQuad *arg1 = (stk::BiQuad *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "BiQuad_setA1", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__BiQuad, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BiQuad_setA1" "', argument " "1"" of type '" "stk::BiQuad *""'"); 
  }
  arg1 = reinterpret_cast< stk::BiQuad * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BiQuad_setA1" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setA1(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BiQuad_setA2(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::BiQuad *arg1 = (stk::BiQuad *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "BiQuad_setA2", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__BiQuad, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BiQuad_setA2" "', argument " "1"" of type '" "stk::BiQuad *""'"); 
  }
  arg1 = reinterpret_cast< stk::BiQuad * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BiQuad_setA2" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setA2(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BiQuad_setResonance__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::BiQuad *arg1 = (stk::BiQuad *) 0 ;
  stk::StkFloat arg2 ;
  stk::StkFloat arg3 ;
  bool arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__BiQuad, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BiQuad_setResonance" "', argument " "1"" of type '" "stk::BiQuad *""'"); 
  }
  arg1 = reinterpret_cast< stk::BiQuad * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BiQuad_setResonance" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "BiQuad_setResonance" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  ecode4 = SWIG_AsVal_bool(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "BiQuad_setResonance" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  (arg1)->setResonance(arg2,arg3,arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BiQuad_setResonance__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::BiQuad *arg1 = (stk::BiQuad *) 0 ;
  stk::StkFloat arg2 ;
  stk::StkFloat arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__BiQuad, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BiQuad_setResonance" "', argument " "1"" of type '" "stk::BiQuad *""'"); 
  }
  arg1 = reinterpret_cast< stk::BiQuad * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BiQuad_setResonance" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "BiQuad_setResonance" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  (arg1)->setResonance(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BiQuad_setResonance(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "BiQuad_setResonance", 0, 4, argv))) SWIG_fail;
  --argc;
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__BiQuad, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_BiQuad_setResonance__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  if (argc == 4) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__BiQuad, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_BiQuad_setResonance__SWIG_0(self, argc, argv);
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'BiQuad_setResonance'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::BiQuad::setResonance(stk::StkFloat,stk::StkFloat,bool)\n"
    "    stk::BiQuad::setResonance(stk::StkFloat,stk::StkFloat)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_BiQuad_setNotch(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::BiQuad *arg1 = (stk::BiQuad *) 0 ;
  stk::StkFloat arg2 ;
  stk::StkFloat arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "BiQuad_setNotch", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__BiQuad, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BiQuad_setNotch" "', argument " "1"" of type '" "stk::BiQuad *""'"); 
  }
  arg1 = reinterpret_cast< stk::BiQuad * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BiQuad_setNotch" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "BiQuad_setNotch" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  (arg1)->setNotch(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BiQuad_setEqualGainZeroes(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::BiQuad *arg1 = (stk::BiQuad *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__BiQuad, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BiQuad_setEqualGainZeroes" "', argument " "1"" of type '" "stk::BiQuad *""'"); 
  }
  arg1 = reinterpret_cast< stk::BiQuad * >(argp1);
  (arg1)->setEqualGainZeroes();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BiQuad_lastOut(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::BiQuad *arg1 = (stk::BiQuad *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  stk::StkFloat result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__BiQuad, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BiQuad_lastOut" "', argument " "1"" of type '" "stk::BiQuad const *""'"); 
  }
  arg1 = reinterpret_cast< stk::BiQuad * >(argp1);
  result = (stk::StkFloat)((stk::BiQuad const *)arg1)->lastOut();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BiQuad_tick__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::BiQuad *arg1 = (stk::BiQuad *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__BiQuad, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BiQuad_tick" "', argument " "1"" of type '" "stk::BiQuad *""'"); 
  }
  arg1 = reinterpret_cast< stk::BiQuad * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BiQuad_tick" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  result = (stk::StkFloat)(arg1)->tick(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BiQuad_tick__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::BiQuad *arg1 = (stk::BiQuad *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__BiQuad, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BiQuad_tick" "', argument " "1"" of type '" "stk::BiQuad *""'"); 
  }
  arg1 = reinterpret_cast< stk::BiQuad * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BiQuad_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BiQuad_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "BiQuad_tick" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BiQuad_tick__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::BiQuad *arg1 = (stk::BiQuad *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__BiQuad, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BiQuad_tick" "', argument " "1"" of type '" "stk::BiQuad *""'"); 
  }
  arg1 = reinterpret_cast< stk::BiQuad * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BiQuad_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BiQuad_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BiQuad_tick__SWIG_3(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::BiQuad *arg1 = (stk::BiQuad *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  stk::StkFrames *arg3 = 0 ;
  unsigned int arg4 ;
  unsigned int arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  unsigned int val5 ;
  int ecode5 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__BiQuad, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BiQuad_tick" "', argument " "1"" of type '" "stk::BiQuad *""'"); 
  }
  arg1 = reinterpret_cast< stk::BiQuad * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BiQuad_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BiQuad_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "BiQuad_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BiQuad_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  arg3 = reinterpret_cast< stk::StkFrames * >(argp3);
  ecode4 = SWIG_AsVal_unsigned_SS_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "BiQuad_tick" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  ecode5 = SWIG_AsVal_unsigned_SS_int(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "BiQuad_tick" "', argument " "5"" of type '" "unsigned int""'");
  } 
  arg5 = static_cast< unsigned int >(val5);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,*arg3,arg4,arg5);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BiQuad_tick__SWIG_4(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::BiQuad *arg1 = (stk::BiQuad *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  stk::StkFrames *arg3 = 0 ;
  unsigned int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__BiQuad, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BiQuad_tick" "', argument " "1"" of type '" "stk::BiQuad *""'"); 
  }
  arg1 = reinterpret_cast< stk::BiQuad * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BiQuad_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BiQuad_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "BiQuad_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BiQuad_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  arg3 = reinterpret_cast< stk::StkFrames * >(argp3);
  ecode4 = SWIG_AsVal_unsigned_SS_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "BiQuad_tick" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,*arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BiQuad_tick__SWIG_5(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::BiQuad *arg1 = (stk::BiQuad *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  stk::StkFrames *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__BiQuad, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BiQuad_tick" "', argument " "1"" of type '" "stk::BiQuad *""'"); 
  }
  arg1 = reinterpret_cast< stk::BiQuad * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BiQuad_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BiQuad_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "BiQuad_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BiQuad_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  arg3 = reinterpret_cast< stk::StkFrames * >(argp3);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,*arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BiQuad_tick(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[6] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "BiQuad_tick", 0, 5, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__BiQuad, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_BiQuad_tick__SWIG_2(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__BiQuad, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_BiQuad_tick__SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__BiQuad, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_BiQuad_tick__SWIG_5(self, argc, argv);
        }
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__BiQuad, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_BiQuad_tick__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  if (argc == 4) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__BiQuad, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_BiQuad_tick__SWIG_4(self, argc, argv);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__BiQuad, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_unsigned_SS_int(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_BiQuad_tick__SWIG_3(self, argc, argv);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'BiQuad_tick'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::BiQuad::tick(stk::StkFloat)\n"
    "    stk::BiQuad::tick(stk::StkFrames &,unsigned int)\n"
    "    stk::BiQuad::tick(stk::StkFrames &)\n"
    "    stk::BiQuad::tick(stk::StkFrames &,stk::StkFrames &,unsigned int,unsigned int)\n"
    "    stk::BiQuad::tick(stk::StkFrames &,stk::StkFrames &,unsigned int)\n"
    "    stk::BiQuad::tick(stk::StkFrames &,stk::StkFrames &)\n");
  return 0;
}


SWIGINTERN PyObject *BiQuad_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_stk__BiQuad, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *BiQuad_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_Blit__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::StkFloat arg1 ;
  float val1 ;
  int ecode1 = 0 ;
  stk::Blit *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Blit" "', argument " "1"" of type '" "stk::StkFloat""'");
  } 
  arg1 = static_cast< stk::StkFloat >(val1);
  result = (stk::Blit *)new stk::Blit(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__Blit, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Blit__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  stk::Blit *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (stk::Blit *)new stk::Blit();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__Blit, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Blit(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_Blit", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_Blit__SWIG_1(self, argc, argv);
  }
  if (argc == 1) {
    int _v = 0;
    {
      int res = SWIG_AsVal_float(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_Blit__SWIG_0(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_Blit'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::Blit::Blit(stk::StkFloat)\n"
    "    stk::Blit::Blit()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_Blit(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Blit *arg1 = (stk::Blit *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Blit, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Blit" "', argument " "1"" of type '" "stk::Blit *""'"); 
  }
  arg1 = reinterpret_cast< stk::Blit * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Blit_reset(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Blit *arg1 = (stk::Blit *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Blit, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Blit_reset" "', argument " "1"" of type '" "stk::Blit *""'"); 
  }
  arg1 = reinterpret_cast< stk::Blit * >(argp1);
  (arg1)->reset();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Blit_setPhase(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Blit *arg1 = (stk::Blit *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Blit_setPhase", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Blit, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Blit_setPhase" "', argument " "1"" of type '" "stk::Blit *""'"); 
  }
  arg1 = reinterpret_cast< stk::Blit * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Blit_setPhase" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setPhase(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Blit_getPhase(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Blit *arg1 = (stk::Blit *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  stk::StkFloat result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Blit, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Blit_getPhase" "', argument " "1"" of type '" "stk::Blit const *""'"); 
  }
  arg1 = reinterpret_cast< stk::Blit * >(argp1);
  result = (stk::StkFloat)((stk::Blit const *)arg1)->getPhase();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Blit_setFrequency(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Blit *arg1 = (stk::Blit *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Blit_setFrequency", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Blit, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Blit_setFrequency" "', argument " "1"" of type '" "stk::Blit *""'"); 
  }
  arg1 = reinterpret_cast< stk::Blit * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Blit_setFrequency" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setFrequency(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Blit_setHarmonics__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Blit *arg1 = (stk::Blit *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Blit, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Blit_setHarmonics" "', argument " "1"" of type '" "stk::Blit *""'"); 
  }
  arg1 = reinterpret_cast< stk::Blit * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Blit_setHarmonics" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  (arg1)->setHarmonics(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Blit_setHarmonics__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Blit *arg1 = (stk::Blit *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Blit, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Blit_setHarmonics" "', argument " "1"" of type '" "stk::Blit *""'"); 
  }
  arg1 = reinterpret_cast< stk::Blit * >(argp1);
  (arg1)->setHarmonics();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Blit_setHarmonics(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Blit_setHarmonics", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Blit, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Blit_setHarmonics__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Blit, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Blit_setHarmonics__SWIG_0(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Blit_setHarmonics'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::Blit::setHarmonics(unsigned int)\n"
    "    stk::Blit::setHarmonics()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Blit_lastOut(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Blit *arg1 = (stk::Blit *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  stk::StkFloat result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Blit, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Blit_lastOut" "', argument " "1"" of type '" "stk::Blit const *""'"); 
  }
  arg1 = reinterpret_cast< stk::Blit * >(argp1);
  result = (stk::StkFloat)((stk::Blit const *)arg1)->lastOut();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Blit_tick__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Blit *arg1 = (stk::Blit *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Blit, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Blit_tick" "', argument " "1"" of type '" "stk::Blit *""'"); 
  }
  arg1 = reinterpret_cast< stk::Blit * >(argp1);
  result = (stk::StkFloat)(arg1)->tick();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Blit_tick__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Blit *arg1 = (stk::Blit *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Blit, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Blit_tick" "', argument " "1"" of type '" "stk::Blit *""'"); 
  }
  arg1 = reinterpret_cast< stk::Blit * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Blit_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Blit_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Blit_tick" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Blit_tick__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Blit *arg1 = (stk::Blit *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Blit, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Blit_tick" "', argument " "1"" of type '" "stk::Blit *""'"); 
  }
  arg1 = reinterpret_cast< stk::Blit * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Blit_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Blit_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Blit_tick(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Blit_tick", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Blit, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Blit_tick__SWIG_0(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Blit, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Blit_tick__SWIG_2(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Blit, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Blit_tick__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Blit_tick'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::Blit::tick()\n"
    "    stk::Blit::tick(stk::StkFrames &,unsigned int)\n"
    "    stk::Blit::tick(stk::StkFrames &)\n");
  return 0;
}


SWIGINTERN PyObject *Blit_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_stk__Blit, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *Blit_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_BlitSaw__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::StkFloat arg1 ;
  float val1 ;
  int ecode1 = 0 ;
  stk::BlitSaw *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_BlitSaw" "', argument " "1"" of type '" "stk::StkFloat""'");
  } 
  arg1 = static_cast< stk::StkFloat >(val1);
  result = (stk::BlitSaw *)new stk::BlitSaw(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__BlitSaw, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_BlitSaw__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  stk::BlitSaw *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (stk::BlitSaw *)new stk::BlitSaw();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__BlitSaw, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_BlitSaw(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_BlitSaw", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_BlitSaw__SWIG_1(self, argc, argv);
  }
  if (argc == 1) {
    int _v = 0;
    {
      int res = SWIG_AsVal_float(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_BlitSaw__SWIG_0(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_BlitSaw'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::BlitSaw::BlitSaw(stk::StkFloat)\n"
    "    stk::BlitSaw::BlitSaw()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_BlitSaw(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::BlitSaw *arg1 = (stk::BlitSaw *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__BlitSaw, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_BlitSaw" "', argument " "1"" of type '" "stk::BlitSaw *""'"); 
  }
  arg1 = reinterpret_cast< stk::BlitSaw * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BlitSaw_reset(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::BlitSaw *arg1 = (stk::BlitSaw *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__BlitSaw, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BlitSaw_reset" "', argument " "1"" of type '" "stk::BlitSaw *""'"); 
  }
  arg1 = reinterpret_cast< stk::BlitSaw * >(argp1);
  (arg1)->reset();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BlitSaw_setFrequency(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::BlitSaw *arg1 = (stk::BlitSaw *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "BlitSaw_setFrequency", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__BlitSaw, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BlitSaw_setFrequency" "', argument " "1"" of type '" "stk::BlitSaw *""'"); 
  }
  arg1 = reinterpret_cast< stk::BlitSaw * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BlitSaw_setFrequency" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setFrequency(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BlitSaw_setHarmonics__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::BlitSaw *arg1 = (stk::BlitSaw *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__BlitSaw, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BlitSaw_setHarmonics" "', argument " "1"" of type '" "stk::BlitSaw *""'"); 
  }
  arg1 = reinterpret_cast< stk::BlitSaw * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BlitSaw_setHarmonics" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  (arg1)->setHarmonics(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BlitSaw_setHarmonics__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::BlitSaw *arg1 = (stk::BlitSaw *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__BlitSaw, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BlitSaw_setHarmonics" "', argument " "1"" of type '" "stk::BlitSaw *""'"); 
  }
  arg1 = reinterpret_cast< stk::BlitSaw * >(argp1);
  (arg1)->setHarmonics();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BlitSaw_setHarmonics(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "BlitSaw_setHarmonics", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__BlitSaw, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_BlitSaw_setHarmonics__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__BlitSaw, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_BlitSaw_setHarmonics__SWIG_0(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'BlitSaw_setHarmonics'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::BlitSaw::setHarmonics(unsigned int)\n"
    "    stk::BlitSaw::setHarmonics()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_BlitSaw_lastOut(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::BlitSaw *arg1 = (stk::BlitSaw *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  stk::StkFloat result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__BlitSaw, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BlitSaw_lastOut" "', argument " "1"" of type '" "stk::BlitSaw const *""'"); 
  }
  arg1 = reinterpret_cast< stk::BlitSaw * >(argp1);
  result = (stk::StkFloat)((stk::BlitSaw const *)arg1)->lastOut();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BlitSaw_tick__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::BlitSaw *arg1 = (stk::BlitSaw *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__BlitSaw, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BlitSaw_tick" "', argument " "1"" of type '" "stk::BlitSaw *""'"); 
  }
  arg1 = reinterpret_cast< stk::BlitSaw * >(argp1);
  result = (stk::StkFloat)(arg1)->tick();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BlitSaw_tick__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::BlitSaw *arg1 = (stk::BlitSaw *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__BlitSaw, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BlitSaw_tick" "', argument " "1"" of type '" "stk::BlitSaw *""'"); 
  }
  arg1 = reinterpret_cast< stk::BlitSaw * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BlitSaw_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BlitSaw_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "BlitSaw_tick" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BlitSaw_tick__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::BlitSaw *arg1 = (stk::BlitSaw *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__BlitSaw, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BlitSaw_tick" "', argument " "1"" of type '" "stk::BlitSaw *""'"); 
  }
  arg1 = reinterpret_cast< stk::BlitSaw * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BlitSaw_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BlitSaw_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BlitSaw_tick(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "BlitSaw_tick", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__BlitSaw, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_BlitSaw_tick__SWIG_0(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__BlitSaw, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_BlitSaw_tick__SWIG_2(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__BlitSaw, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_BlitSaw_tick__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'BlitSaw_tick'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::BlitSaw::tick()\n"
    "    stk::BlitSaw::tick(stk::StkFrames &,unsigned int)\n"
    "    stk::BlitSaw::tick(stk::StkFrames &)\n");
  return 0;
}


SWIGINTERN PyObject *BlitSaw_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_stk__BlitSaw, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *BlitSaw_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_BlitSquare__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::StkFloat arg1 ;
  float val1 ;
  int ecode1 = 0 ;
  stk::BlitSquare *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_BlitSquare" "', argument " "1"" of type '" "stk::StkFloat""'");
  } 
  arg1 = static_cast< stk::StkFloat >(val1);
  result = (stk::BlitSquare *)new stk::BlitSquare(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__BlitSquare, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_BlitSquare__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  stk::BlitSquare *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (stk::BlitSquare *)new stk::BlitSquare();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__BlitSquare, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_BlitSquare(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_BlitSquare", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_BlitSquare__SWIG_1(self, argc, argv);
  }
  if (argc == 1) {
    int _v = 0;
    {
      int res = SWIG_AsVal_float(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_BlitSquare__SWIG_0(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_BlitSquare'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::BlitSquare::BlitSquare(stk::StkFloat)\n"
    "    stk::BlitSquare::BlitSquare()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_BlitSquare(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::BlitSquare *arg1 = (stk::BlitSquare *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__BlitSquare, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_BlitSquare" "', argument " "1"" of type '" "stk::BlitSquare *""'"); 
  }
  arg1 = reinterpret_cast< stk::BlitSquare * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BlitSquare_reset(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::BlitSquare *arg1 = (stk::BlitSquare *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__BlitSquare, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BlitSquare_reset" "', argument " "1"" of type '" "stk::BlitSquare *""'"); 
  }
  arg1 = reinterpret_cast< stk::BlitSquare * >(argp1);
  (arg1)->reset();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BlitSquare_setPhase(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::BlitSquare *arg1 = (stk::BlitSquare *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "BlitSquare_setPhase", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__BlitSquare, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BlitSquare_setPhase" "', argument " "1"" of type '" "stk::BlitSquare *""'"); 
  }
  arg1 = reinterpret_cast< stk::BlitSquare * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BlitSquare_setPhase" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setPhase(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BlitSquare_getPhase(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::BlitSquare *arg1 = (stk::BlitSquare *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  stk::StkFloat result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__BlitSquare, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BlitSquare_getPhase" "', argument " "1"" of type '" "stk::BlitSquare const *""'"); 
  }
  arg1 = reinterpret_cast< stk::BlitSquare * >(argp1);
  result = (stk::StkFloat)((stk::BlitSquare const *)arg1)->getPhase();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BlitSquare_setFrequency(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::BlitSquare *arg1 = (stk::BlitSquare *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "BlitSquare_setFrequency", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__BlitSquare, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BlitSquare_setFrequency" "', argument " "1"" of type '" "stk::BlitSquare *""'"); 
  }
  arg1 = reinterpret_cast< stk::BlitSquare * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BlitSquare_setFrequency" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setFrequency(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BlitSquare_setHarmonics__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::BlitSquare *arg1 = (stk::BlitSquare *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__BlitSquare, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BlitSquare_setHarmonics" "', argument " "1"" of type '" "stk::BlitSquare *""'"); 
  }
  arg1 = reinterpret_cast< stk::BlitSquare * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BlitSquare_setHarmonics" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  (arg1)->setHarmonics(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BlitSquare_setHarmonics__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::BlitSquare *arg1 = (stk::BlitSquare *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__BlitSquare, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BlitSquare_setHarmonics" "', argument " "1"" of type '" "stk::BlitSquare *""'"); 
  }
  arg1 = reinterpret_cast< stk::BlitSquare * >(argp1);
  (arg1)->setHarmonics();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BlitSquare_setHarmonics(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "BlitSquare_setHarmonics", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__BlitSquare, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_BlitSquare_setHarmonics__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__BlitSquare, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_BlitSquare_setHarmonics__SWIG_0(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'BlitSquare_setHarmonics'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::BlitSquare::setHarmonics(unsigned int)\n"
    "    stk::BlitSquare::setHarmonics()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_BlitSquare_lastOut(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::BlitSquare *arg1 = (stk::BlitSquare *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  stk::StkFloat result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__BlitSquare, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BlitSquare_lastOut" "', argument " "1"" of type '" "stk::BlitSquare const *""'"); 
  }
  arg1 = reinterpret_cast< stk::BlitSquare * >(argp1);
  result = (stk::StkFloat)((stk::BlitSquare const *)arg1)->lastOut();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BlitSquare_tick__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::BlitSquare *arg1 = (stk::BlitSquare *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__BlitSquare, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BlitSquare_tick" "', argument " "1"" of type '" "stk::BlitSquare *""'"); 
  }
  arg1 = reinterpret_cast< stk::BlitSquare * >(argp1);
  result = (stk::StkFloat)(arg1)->tick();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BlitSquare_tick__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::BlitSquare *arg1 = (stk::BlitSquare *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__BlitSquare, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BlitSquare_tick" "', argument " "1"" of type '" "stk::BlitSquare *""'"); 
  }
  arg1 = reinterpret_cast< stk::BlitSquare * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BlitSquare_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BlitSquare_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "BlitSquare_tick" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BlitSquare_tick__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::BlitSquare *arg1 = (stk::BlitSquare *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__BlitSquare, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BlitSquare_tick" "', argument " "1"" of type '" "stk::BlitSquare *""'"); 
  }
  arg1 = reinterpret_cast< stk::BlitSquare * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BlitSquare_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BlitSquare_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BlitSquare_tick(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "BlitSquare_tick", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__BlitSquare, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_BlitSquare_tick__SWIG_0(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__BlitSquare, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_BlitSquare_tick__SWIG_2(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__BlitSquare, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_BlitSquare_tick__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'BlitSquare_tick'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::BlitSquare::tick()\n"
    "    stk::BlitSquare::tick(stk::StkFrames &,unsigned int)\n"
    "    stk::BlitSquare::tick(stk::StkFrames &)\n");
  return 0;
}


SWIGINTERN PyObject *BlitSquare_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_stk__BlitSquare, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *BlitSquare_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_BlowBotl(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::BlowBotl *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_BlowBotl", 0, 0, 0)) SWIG_fail;
  result = (stk::BlowBotl *)new stk::BlowBotl();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__BlowBotl, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_BlowBotl(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::BlowBotl *arg1 = (stk::BlowBotl *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__BlowBotl, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_BlowBotl" "', argument " "1"" of type '" "stk::BlowBotl *""'"); 
  }
  arg1 = reinterpret_cast< stk::BlowBotl * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BlowBotl_clear(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::BlowBotl *arg1 = (stk::BlowBotl *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__BlowBotl, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BlowBotl_clear" "', argument " "1"" of type '" "stk::BlowBotl *""'"); 
  }
  arg1 = reinterpret_cast< stk::BlowBotl * >(argp1);
  (arg1)->clear();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BlowBotl_setFrequency(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::BlowBotl *arg1 = (stk::BlowBotl *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "BlowBotl_setFrequency", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__BlowBotl, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BlowBotl_setFrequency" "', argument " "1"" of type '" "stk::BlowBotl *""'"); 
  }
  arg1 = reinterpret_cast< stk::BlowBotl * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BlowBotl_setFrequency" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setFrequency(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BlowBotl_startBlowing(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::BlowBotl *arg1 = (stk::BlowBotl *) 0 ;
  stk::StkFloat arg2 ;
  stk::StkFloat arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "BlowBotl_startBlowing", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__BlowBotl, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BlowBotl_startBlowing" "', argument " "1"" of type '" "stk::BlowBotl *""'"); 
  }
  arg1 = reinterpret_cast< stk::BlowBotl * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BlowBotl_startBlowing" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "BlowBotl_startBlowing" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  (arg1)->startBlowing(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BlowBotl_stopBlowing(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::BlowBotl *arg1 = (stk::BlowBotl *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "BlowBotl_stopBlowing", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__BlowBotl, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BlowBotl_stopBlowing" "', argument " "1"" of type '" "stk::BlowBotl *""'"); 
  }
  arg1 = reinterpret_cast< stk::BlowBotl * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BlowBotl_stopBlowing" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->stopBlowing(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BlowBotl_noteOn(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::BlowBotl *arg1 = (stk::BlowBotl *) 0 ;
  stk::StkFloat arg2 ;
  stk::StkFloat arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "BlowBotl_noteOn", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__BlowBotl, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BlowBotl_noteOn" "', argument " "1"" of type '" "stk::BlowBotl *""'"); 
  }
  arg1 = reinterpret_cast< stk::BlowBotl * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BlowBotl_noteOn" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "BlowBotl_noteOn" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  (arg1)->noteOn(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BlowBotl_noteOff(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::BlowBotl *arg1 = (stk::BlowBotl *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "BlowBotl_noteOff", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__BlowBotl, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BlowBotl_noteOff" "', argument " "1"" of type '" "stk::BlowBotl *""'"); 
  }
  arg1 = reinterpret_cast< stk::BlowBotl * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BlowBotl_noteOff" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->noteOff(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BlowBotl_controlChange(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::BlowBotl *arg1 = (stk::BlowBotl *) 0 ;
  int arg2 ;
  stk::StkFloat arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "BlowBotl_controlChange", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__BlowBotl, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BlowBotl_controlChange" "', argument " "1"" of type '" "stk::BlowBotl *""'"); 
  }
  arg1 = reinterpret_cast< stk::BlowBotl * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BlowBotl_controlChange" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "BlowBotl_controlChange" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  (arg1)->controlChange(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BlowBotl_tick__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::BlowBotl *arg1 = (stk::BlowBotl *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__BlowBotl, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BlowBotl_tick" "', argument " "1"" of type '" "stk::BlowBotl *""'"); 
  }
  arg1 = reinterpret_cast< stk::BlowBotl * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BlowBotl_tick" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (stk::StkFloat)(arg1)->tick(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BlowBotl_tick__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::BlowBotl *arg1 = (stk::BlowBotl *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__BlowBotl, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BlowBotl_tick" "', argument " "1"" of type '" "stk::BlowBotl *""'"); 
  }
  arg1 = reinterpret_cast< stk::BlowBotl * >(argp1);
  result = (stk::StkFloat)(arg1)->tick();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BlowBotl_tick__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::BlowBotl *arg1 = (stk::BlowBotl *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__BlowBotl, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BlowBotl_tick" "', argument " "1"" of type '" "stk::BlowBotl *""'"); 
  }
  arg1 = reinterpret_cast< stk::BlowBotl * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BlowBotl_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BlowBotl_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "BlowBotl_tick" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BlowBotl_tick__SWIG_3(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::BlowBotl *arg1 = (stk::BlowBotl *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__BlowBotl, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BlowBotl_tick" "', argument " "1"" of type '" "stk::BlowBotl *""'"); 
  }
  arg1 = reinterpret_cast< stk::BlowBotl * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BlowBotl_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BlowBotl_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BlowBotl_tick(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "BlowBotl_tick", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__BlowBotl, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_BlowBotl_tick__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__BlowBotl, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_BlowBotl_tick__SWIG_3(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__BlowBotl, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_BlowBotl_tick__SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__BlowBotl, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_BlowBotl_tick__SWIG_2(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'BlowBotl_tick'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::BlowBotl::tick(unsigned int)\n"
    "    stk::BlowBotl::tick()\n"
    "    stk::BlowBotl::tick(stk::StkFrames &,unsigned int)\n"
    "    stk::BlowBotl::tick(stk::StkFrames &)\n");
  return 0;
}


SWIGINTERN PyObject *BlowBotl_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_stk__BlowBotl, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *BlowBotl_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_BlowHole(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::StkFloat arg1 ;
  float val1 ;
  int ecode1 = 0 ;
  PyObject *swig_obj[1] ;
  stk::BlowHole *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_BlowHole" "', argument " "1"" of type '" "stk::StkFloat""'");
  } 
  arg1 = static_cast< stk::StkFloat >(val1);
  result = (stk::BlowHole *)new stk::BlowHole(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__BlowHole, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_BlowHole(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::BlowHole *arg1 = (stk::BlowHole *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__BlowHole, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_BlowHole" "', argument " "1"" of type '" "stk::BlowHole *""'"); 
  }
  arg1 = reinterpret_cast< stk::BlowHole * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BlowHole_clear(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::BlowHole *arg1 = (stk::BlowHole *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__BlowHole, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BlowHole_clear" "', argument " "1"" of type '" "stk::BlowHole *""'"); 
  }
  arg1 = reinterpret_cast< stk::BlowHole * >(argp1);
  (arg1)->clear();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BlowHole_setFrequency(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::BlowHole *arg1 = (stk::BlowHole *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "BlowHole_setFrequency", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__BlowHole, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BlowHole_setFrequency" "', argument " "1"" of type '" "stk::BlowHole *""'"); 
  }
  arg1 = reinterpret_cast< stk::BlowHole * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BlowHole_setFrequency" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setFrequency(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BlowHole_setTonehole(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::BlowHole *arg1 = (stk::BlowHole *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "BlowHole_setTonehole", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__BlowHole, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BlowHole_setTonehole" "', argument " "1"" of type '" "stk::BlowHole *""'"); 
  }
  arg1 = reinterpret_cast< stk::BlowHole * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BlowHole_setTonehole" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setTonehole(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BlowHole_setVent(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::BlowHole *arg1 = (stk::BlowHole *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "BlowHole_setVent", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__BlowHole, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BlowHole_setVent" "', argument " "1"" of type '" "stk::BlowHole *""'"); 
  }
  arg1 = reinterpret_cast< stk::BlowHole * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BlowHole_setVent" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setVent(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BlowHole_startBlowing(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::BlowHole *arg1 = (stk::BlowHole *) 0 ;
  stk::StkFloat arg2 ;
  stk::StkFloat arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "BlowHole_startBlowing", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__BlowHole, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BlowHole_startBlowing" "', argument " "1"" of type '" "stk::BlowHole *""'"); 
  }
  arg1 = reinterpret_cast< stk::BlowHole * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BlowHole_startBlowing" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "BlowHole_startBlowing" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  (arg1)->startBlowing(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BlowHole_stopBlowing(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::BlowHole *arg1 = (stk::BlowHole *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "BlowHole_stopBlowing", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__BlowHole, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BlowHole_stopBlowing" "', argument " "1"" of type '" "stk::BlowHole *""'"); 
  }
  arg1 = reinterpret_cast< stk::BlowHole * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BlowHole_stopBlowing" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->stopBlowing(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BlowHole_noteOn(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::BlowHole *arg1 = (stk::BlowHole *) 0 ;
  stk::StkFloat arg2 ;
  stk::StkFloat arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "BlowHole_noteOn", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__BlowHole, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BlowHole_noteOn" "', argument " "1"" of type '" "stk::BlowHole *""'"); 
  }
  arg1 = reinterpret_cast< stk::BlowHole * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BlowHole_noteOn" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "BlowHole_noteOn" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  (arg1)->noteOn(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BlowHole_noteOff(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::BlowHole *arg1 = (stk::BlowHole *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "BlowHole_noteOff", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__BlowHole, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BlowHole_noteOff" "', argument " "1"" of type '" "stk::BlowHole *""'"); 
  }
  arg1 = reinterpret_cast< stk::BlowHole * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BlowHole_noteOff" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->noteOff(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BlowHole_controlChange(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::BlowHole *arg1 = (stk::BlowHole *) 0 ;
  int arg2 ;
  stk::StkFloat arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "BlowHole_controlChange", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__BlowHole, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BlowHole_controlChange" "', argument " "1"" of type '" "stk::BlowHole *""'"); 
  }
  arg1 = reinterpret_cast< stk::BlowHole * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BlowHole_controlChange" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "BlowHole_controlChange" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  (arg1)->controlChange(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BlowHole_tick__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::BlowHole *arg1 = (stk::BlowHole *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__BlowHole, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BlowHole_tick" "', argument " "1"" of type '" "stk::BlowHole *""'"); 
  }
  arg1 = reinterpret_cast< stk::BlowHole * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BlowHole_tick" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (stk::StkFloat)(arg1)->tick(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BlowHole_tick__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::BlowHole *arg1 = (stk::BlowHole *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__BlowHole, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BlowHole_tick" "', argument " "1"" of type '" "stk::BlowHole *""'"); 
  }
  arg1 = reinterpret_cast< stk::BlowHole * >(argp1);
  result = (stk::StkFloat)(arg1)->tick();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BlowHole_tick__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::BlowHole *arg1 = (stk::BlowHole *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__BlowHole, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BlowHole_tick" "', argument " "1"" of type '" "stk::BlowHole *""'"); 
  }
  arg1 = reinterpret_cast< stk::BlowHole * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BlowHole_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BlowHole_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "BlowHole_tick" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BlowHole_tick__SWIG_3(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::BlowHole *arg1 = (stk::BlowHole *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__BlowHole, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BlowHole_tick" "', argument " "1"" of type '" "stk::BlowHole *""'"); 
  }
  arg1 = reinterpret_cast< stk::BlowHole * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BlowHole_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BlowHole_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BlowHole_tick(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "BlowHole_tick", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__BlowHole, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_BlowHole_tick__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__BlowHole, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_BlowHole_tick__SWIG_3(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__BlowHole, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_BlowHole_tick__SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__BlowHole, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_BlowHole_tick__SWIG_2(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'BlowHole_tick'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::BlowHole::tick(unsigned int)\n"
    "    stk::BlowHole::tick()\n"
    "    stk::BlowHole::tick(stk::StkFrames &,unsigned int)\n"
    "    stk::BlowHole::tick(stk::StkFrames &)\n");
  return 0;
}


SWIGINTERN PyObject *BlowHole_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_stk__BlowHole, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *BlowHole_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_BowTable(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::BowTable *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_BowTable", 0, 0, 0)) SWIG_fail;
  result = (stk::BowTable *)new stk::BowTable();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__BowTable, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BowTable_setOffset(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::BowTable *arg1 = (stk::BowTable *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "BowTable_setOffset", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__BowTable, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BowTable_setOffset" "', argument " "1"" of type '" "stk::BowTable *""'"); 
  }
  arg1 = reinterpret_cast< stk::BowTable * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BowTable_setOffset" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setOffset(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BowTable_setSlope(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::BowTable *arg1 = (stk::BowTable *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "BowTable_setSlope", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__BowTable, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BowTable_setSlope" "', argument " "1"" of type '" "stk::BowTable *""'"); 
  }
  arg1 = reinterpret_cast< stk::BowTable * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BowTable_setSlope" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setSlope(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BowTable_setMinOutput(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::BowTable *arg1 = (stk::BowTable *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "BowTable_setMinOutput", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__BowTable, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BowTable_setMinOutput" "', argument " "1"" of type '" "stk::BowTable *""'"); 
  }
  arg1 = reinterpret_cast< stk::BowTable * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BowTable_setMinOutput" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setMinOutput(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BowTable_setMaxOutput(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::BowTable *arg1 = (stk::BowTable *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "BowTable_setMaxOutput", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__BowTable, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BowTable_setMaxOutput" "', argument " "1"" of type '" "stk::BowTable *""'"); 
  }
  arg1 = reinterpret_cast< stk::BowTable * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BowTable_setMaxOutput" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setMaxOutput(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BowTable_tick__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::BowTable *arg1 = (stk::BowTable *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__BowTable, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BowTable_tick" "', argument " "1"" of type '" "stk::BowTable *""'"); 
  }
  arg1 = reinterpret_cast< stk::BowTable * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BowTable_tick" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  result = (stk::StkFloat)(arg1)->tick(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BowTable_tick__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::BowTable *arg1 = (stk::BowTable *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__BowTable, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BowTable_tick" "', argument " "1"" of type '" "stk::BowTable *""'"); 
  }
  arg1 = reinterpret_cast< stk::BowTable * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BowTable_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BowTable_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "BowTable_tick" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BowTable_tick__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::BowTable *arg1 = (stk::BowTable *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__BowTable, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BowTable_tick" "', argument " "1"" of type '" "stk::BowTable *""'"); 
  }
  arg1 = reinterpret_cast< stk::BowTable * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BowTable_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BowTable_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BowTable_tick__SWIG_3(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::BowTable *arg1 = (stk::BowTable *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  stk::StkFrames *arg3 = 0 ;
  unsigned int arg4 ;
  unsigned int arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  unsigned int val5 ;
  int ecode5 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__BowTable, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BowTable_tick" "', argument " "1"" of type '" "stk::BowTable *""'"); 
  }
  arg1 = reinterpret_cast< stk::BowTable * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BowTable_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BowTable_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "BowTable_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BowTable_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  arg3 = reinterpret_cast< stk::StkFrames * >(argp3);
  ecode4 = SWIG_AsVal_unsigned_SS_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "BowTable_tick" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  ecode5 = SWIG_AsVal_unsigned_SS_int(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "BowTable_tick" "', argument " "5"" of type '" "unsigned int""'");
  } 
  arg5 = static_cast< unsigned int >(val5);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,*arg3,arg4,arg5);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BowTable_tick__SWIG_4(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::BowTable *arg1 = (stk::BowTable *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  stk::StkFrames *arg3 = 0 ;
  unsigned int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__BowTable, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BowTable_tick" "', argument " "1"" of type '" "stk::BowTable *""'"); 
  }
  arg1 = reinterpret_cast< stk::BowTable * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BowTable_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BowTable_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "BowTable_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BowTable_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  arg3 = reinterpret_cast< stk::StkFrames * >(argp3);
  ecode4 = SWIG_AsVal_unsigned_SS_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "BowTable_tick" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,*arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BowTable_tick__SWIG_5(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::BowTable *arg1 = (stk::BowTable *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  stk::StkFrames *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__BowTable, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BowTable_tick" "', argument " "1"" of type '" "stk::BowTable *""'"); 
  }
  arg1 = reinterpret_cast< stk::BowTable * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BowTable_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BowTable_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "BowTable_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BowTable_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  arg3 = reinterpret_cast< stk::StkFrames * >(argp3);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,*arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BowTable_tick(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[6] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "BowTable_tick", 0, 5, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__BowTable, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_BowTable_tick__SWIG_2(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__BowTable, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_BowTable_tick__SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__BowTable, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_BowTable_tick__SWIG_5(self, argc, argv);
        }
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__BowTable, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_BowTable_tick__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  if (argc == 4) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__BowTable, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_BowTable_tick__SWIG_4(self, argc, argv);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__BowTable, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_unsigned_SS_int(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_BowTable_tick__SWIG_3(self, argc, argv);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'BowTable_tick'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::BowTable::tick(stk::StkFloat)\n"
    "    stk::BowTable::tick(stk::StkFrames &,unsigned int)\n"
    "    stk::BowTable::tick(stk::StkFrames &)\n"
    "    stk::BowTable::tick(stk::StkFrames &,stk::StkFrames &,unsigned int,unsigned int)\n"
    "    stk::BowTable::tick(stk::StkFrames &,stk::StkFrames &,unsigned int)\n"
    "    stk::BowTable::tick(stk::StkFrames &,stk::StkFrames &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_BowTable(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::BowTable *arg1 = (stk::BowTable *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__BowTable, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_BowTable" "', argument " "1"" of type '" "stk::BowTable *""'"); 
  }
  arg1 = reinterpret_cast< stk::BowTable * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *BowTable_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_stk__BowTable, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *BowTable_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_delete_Bowed(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Bowed *arg1 = (stk::Bowed *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Bowed, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Bowed" "', argument " "1"" of type '" "stk::Bowed *""'"); 
  }
  arg1 = reinterpret_cast< stk::Bowed * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Bowed_clear(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Bowed *arg1 = (stk::Bowed *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Bowed, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Bowed_clear" "', argument " "1"" of type '" "stk::Bowed *""'"); 
  }
  arg1 = reinterpret_cast< stk::Bowed * >(argp1);
  (arg1)->clear();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Bowed_setFrequency(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Bowed *arg1 = (stk::Bowed *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Bowed_setFrequency", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Bowed, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Bowed_setFrequency" "', argument " "1"" of type '" "stk::Bowed *""'"); 
  }
  arg1 = reinterpret_cast< stk::Bowed * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Bowed_setFrequency" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setFrequency(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Bowed_setVibrato(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Bowed *arg1 = (stk::Bowed *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Bowed_setVibrato", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Bowed, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Bowed_setVibrato" "', argument " "1"" of type '" "stk::Bowed *""'"); 
  }
  arg1 = reinterpret_cast< stk::Bowed * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Bowed_setVibrato" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setVibrato(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Bowed_startBowing(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Bowed *arg1 = (stk::Bowed *) 0 ;
  stk::StkFloat arg2 ;
  stk::StkFloat arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Bowed_startBowing", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Bowed, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Bowed_startBowing" "', argument " "1"" of type '" "stk::Bowed *""'"); 
  }
  arg1 = reinterpret_cast< stk::Bowed * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Bowed_startBowing" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Bowed_startBowing" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  (arg1)->startBowing(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Bowed_stopBowing(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Bowed *arg1 = (stk::Bowed *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Bowed_stopBowing", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Bowed, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Bowed_stopBowing" "', argument " "1"" of type '" "stk::Bowed *""'"); 
  }
  arg1 = reinterpret_cast< stk::Bowed * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Bowed_stopBowing" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->stopBowing(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Bowed_noteOn(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Bowed *arg1 = (stk::Bowed *) 0 ;
  stk::StkFloat arg2 ;
  stk::StkFloat arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Bowed_noteOn", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Bowed, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Bowed_noteOn" "', argument " "1"" of type '" "stk::Bowed *""'"); 
  }
  arg1 = reinterpret_cast< stk::Bowed * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Bowed_noteOn" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Bowed_noteOn" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  (arg1)->noteOn(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Bowed_noteOff(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Bowed *arg1 = (stk::Bowed *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Bowed_noteOff", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Bowed, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Bowed_noteOff" "', argument " "1"" of type '" "stk::Bowed *""'"); 
  }
  arg1 = reinterpret_cast< stk::Bowed * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Bowed_noteOff" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->noteOff(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Bowed_controlChange(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Bowed *arg1 = (stk::Bowed *) 0 ;
  int arg2 ;
  stk::StkFloat arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Bowed_controlChange", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Bowed, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Bowed_controlChange" "', argument " "1"" of type '" "stk::Bowed *""'"); 
  }
  arg1 = reinterpret_cast< stk::Bowed * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Bowed_controlChange" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Bowed_controlChange" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  (arg1)->controlChange(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Bowed_tick__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Bowed *arg1 = (stk::Bowed *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Bowed, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Bowed_tick" "', argument " "1"" of type '" "stk::Bowed *""'"); 
  }
  arg1 = reinterpret_cast< stk::Bowed * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Bowed_tick" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (stk::StkFloat)(arg1)->tick(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Bowed_tick__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Bowed *arg1 = (stk::Bowed *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Bowed, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Bowed_tick" "', argument " "1"" of type '" "stk::Bowed *""'"); 
  }
  arg1 = reinterpret_cast< stk::Bowed * >(argp1);
  result = (stk::StkFloat)(arg1)->tick();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Bowed_tick(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Bowed_tick", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Bowed, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Bowed_tick__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Bowed, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Bowed_tick__SWIG_0(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Bowed_tick'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::Bowed::tick(unsigned int)\n"
    "    stk::Bowed::tick()\n");
  return 0;
}


SWIGINTERN PyObject *Bowed_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_stk__Bowed, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_Brass__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::StkFloat arg1 ;
  float val1 ;
  int ecode1 = 0 ;
  stk::Brass *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Brass" "', argument " "1"" of type '" "stk::StkFloat""'");
  } 
  arg1 = static_cast< stk::StkFloat >(val1);
  result = (stk::Brass *)new stk::Brass(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__Brass, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Brass__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  stk::Brass *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (stk::Brass *)new stk::Brass();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__Brass, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Brass(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_Brass", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_Brass__SWIG_1(self, argc, argv);
  }
  if (argc == 1) {
    int _v = 0;
    {
      int res = SWIG_AsVal_float(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_Brass__SWIG_0(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_Brass'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::Brass::Brass(stk::StkFloat)\n"
    "    stk::Brass::Brass()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_Brass(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Brass *arg1 = (stk::Brass *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Brass, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Brass" "', argument " "1"" of type '" "stk::Brass *""'"); 
  }
  arg1 = reinterpret_cast< stk::Brass * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Brass_clear(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Brass *arg1 = (stk::Brass *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Brass, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Brass_clear" "', argument " "1"" of type '" "stk::Brass *""'"); 
  }
  arg1 = reinterpret_cast< stk::Brass * >(argp1);
  (arg1)->clear();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Brass_setFrequency(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Brass *arg1 = (stk::Brass *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Brass_setFrequency", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Brass, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Brass_setFrequency" "', argument " "1"" of type '" "stk::Brass *""'"); 
  }
  arg1 = reinterpret_cast< stk::Brass * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Brass_setFrequency" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setFrequency(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Brass_setLip(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Brass *arg1 = (stk::Brass *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Brass_setLip", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Brass, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Brass_setLip" "', argument " "1"" of type '" "stk::Brass *""'"); 
  }
  arg1 = reinterpret_cast< stk::Brass * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Brass_setLip" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setLip(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Brass_startBlowing(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Brass *arg1 = (stk::Brass *) 0 ;
  stk::StkFloat arg2 ;
  stk::StkFloat arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Brass_startBlowing", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Brass, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Brass_startBlowing" "', argument " "1"" of type '" "stk::Brass *""'"); 
  }
  arg1 = reinterpret_cast< stk::Brass * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Brass_startBlowing" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Brass_startBlowing" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  (arg1)->startBlowing(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Brass_stopBlowing(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Brass *arg1 = (stk::Brass *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Brass_stopBlowing", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Brass, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Brass_stopBlowing" "', argument " "1"" of type '" "stk::Brass *""'"); 
  }
  arg1 = reinterpret_cast< stk::Brass * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Brass_stopBlowing" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->stopBlowing(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Brass_noteOn(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Brass *arg1 = (stk::Brass *) 0 ;
  stk::StkFloat arg2 ;
  stk::StkFloat arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Brass_noteOn", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Brass, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Brass_noteOn" "', argument " "1"" of type '" "stk::Brass *""'"); 
  }
  arg1 = reinterpret_cast< stk::Brass * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Brass_noteOn" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Brass_noteOn" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  (arg1)->noteOn(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Brass_noteOff(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Brass *arg1 = (stk::Brass *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Brass_noteOff", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Brass, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Brass_noteOff" "', argument " "1"" of type '" "stk::Brass *""'"); 
  }
  arg1 = reinterpret_cast< stk::Brass * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Brass_noteOff" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->noteOff(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Brass_controlChange(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Brass *arg1 = (stk::Brass *) 0 ;
  int arg2 ;
  stk::StkFloat arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Brass_controlChange", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Brass, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Brass_controlChange" "', argument " "1"" of type '" "stk::Brass *""'"); 
  }
  arg1 = reinterpret_cast< stk::Brass * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Brass_controlChange" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Brass_controlChange" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  (arg1)->controlChange(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Brass_tick__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Brass *arg1 = (stk::Brass *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Brass, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Brass_tick" "', argument " "1"" of type '" "stk::Brass *""'"); 
  }
  arg1 = reinterpret_cast< stk::Brass * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Brass_tick" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (stk::StkFloat)(arg1)->tick(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Brass_tick__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Brass *arg1 = (stk::Brass *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Brass, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Brass_tick" "', argument " "1"" of type '" "stk::Brass *""'"); 
  }
  arg1 = reinterpret_cast< stk::Brass * >(argp1);
  result = (stk::StkFloat)(arg1)->tick();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Brass_tick__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Brass *arg1 = (stk::Brass *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Brass, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Brass_tick" "', argument " "1"" of type '" "stk::Brass *""'"); 
  }
  arg1 = reinterpret_cast< stk::Brass * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Brass_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Brass_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Brass_tick" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Brass_tick__SWIG_3(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Brass *arg1 = (stk::Brass *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Brass, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Brass_tick" "', argument " "1"" of type '" "stk::Brass *""'"); 
  }
  arg1 = reinterpret_cast< stk::Brass * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Brass_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Brass_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Brass_tick(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Brass_tick", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Brass, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Brass_tick__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Brass, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Brass_tick__SWIG_3(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Brass, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Brass_tick__SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Brass, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Brass_tick__SWIG_2(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Brass_tick'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::Brass::tick(unsigned int)\n"
    "    stk::Brass::tick()\n"
    "    stk::Brass::tick(stk::StkFrames &,unsigned int)\n"
    "    stk::Brass::tick(stk::StkFrames &)\n");
  return 0;
}


SWIGINTERN PyObject *Brass_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_stk__Brass, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *Brass_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_Chorus__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::StkFloat arg1 ;
  float val1 ;
  int ecode1 = 0 ;
  stk::Chorus *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Chorus" "', argument " "1"" of type '" "stk::StkFloat""'");
  } 
  arg1 = static_cast< stk::StkFloat >(val1);
  result = (stk::Chorus *)new stk::Chorus(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__Chorus, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Chorus__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  stk::Chorus *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (stk::Chorus *)new stk::Chorus();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__Chorus, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Chorus(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_Chorus", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_Chorus__SWIG_1(self, argc, argv);
  }
  if (argc == 1) {
    int _v = 0;
    {
      int res = SWIG_AsVal_float(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_Chorus__SWIG_0(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_Chorus'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::Chorus::Chorus(stk::StkFloat)\n"
    "    stk::Chorus::Chorus()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Chorus_clear(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Chorus *arg1 = (stk::Chorus *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Chorus, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Chorus_clear" "', argument " "1"" of type '" "stk::Chorus *""'"); 
  }
  arg1 = reinterpret_cast< stk::Chorus * >(argp1);
  (arg1)->clear();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Chorus_setModDepth(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Chorus *arg1 = (stk::Chorus *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Chorus_setModDepth", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Chorus, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Chorus_setModDepth" "', argument " "1"" of type '" "stk::Chorus *""'"); 
  }
  arg1 = reinterpret_cast< stk::Chorus * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Chorus_setModDepth" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setModDepth(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Chorus_setModFrequency(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Chorus *arg1 = (stk::Chorus *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Chorus_setModFrequency", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Chorus, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Chorus_setModFrequency" "', argument " "1"" of type '" "stk::Chorus *""'"); 
  }
  arg1 = reinterpret_cast< stk::Chorus * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Chorus_setModFrequency" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setModFrequency(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Chorus_lastOut__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Chorus *arg1 = (stk::Chorus *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Chorus, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Chorus_lastOut" "', argument " "1"" of type '" "stk::Chorus *""'"); 
  }
  arg1 = reinterpret_cast< stk::Chorus * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Chorus_lastOut" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (stk::StkFloat)(arg1)->lastOut(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Chorus_lastOut__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Chorus *arg1 = (stk::Chorus *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Chorus, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Chorus_lastOut" "', argument " "1"" of type '" "stk::Chorus *""'"); 
  }
  arg1 = reinterpret_cast< stk::Chorus * >(argp1);
  result = (stk::StkFloat)(arg1)->lastOut();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Chorus_lastOut(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Chorus_lastOut", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Chorus, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Chorus_lastOut__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Chorus, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Chorus_lastOut__SWIG_0(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Chorus_lastOut'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::Chorus::lastOut(unsigned int)\n"
    "    stk::Chorus::lastOut()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Chorus_tick__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Chorus *arg1 = (stk::Chorus *) 0 ;
  stk::StkFloat arg2 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Chorus, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Chorus_tick" "', argument " "1"" of type '" "stk::Chorus *""'"); 
  }
  arg1 = reinterpret_cast< stk::Chorus * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Chorus_tick" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Chorus_tick" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  result = (stk::StkFloat)(arg1)->tick(arg2,arg3);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Chorus_tick__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Chorus *arg1 = (stk::Chorus *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Chorus, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Chorus_tick" "', argument " "1"" of type '" "stk::Chorus *""'"); 
  }
  arg1 = reinterpret_cast< stk::Chorus * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Chorus_tick" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  result = (stk::StkFloat)(arg1)->tick(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Chorus_tick__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Chorus *arg1 = (stk::Chorus *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Chorus, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Chorus_tick" "', argument " "1"" of type '" "stk::Chorus *""'"); 
  }
  arg1 = reinterpret_cast< stk::Chorus * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Chorus_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Chorus_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Chorus_tick" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Chorus_tick__SWIG_3(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Chorus *arg1 = (stk::Chorus *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Chorus, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Chorus_tick" "', argument " "1"" of type '" "stk::Chorus *""'"); 
  }
  arg1 = reinterpret_cast< stk::Chorus * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Chorus_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Chorus_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Chorus_tick__SWIG_4(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Chorus *arg1 = (stk::Chorus *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  stk::StkFrames *arg3 = 0 ;
  unsigned int arg4 ;
  unsigned int arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  unsigned int val5 ;
  int ecode5 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Chorus, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Chorus_tick" "', argument " "1"" of type '" "stk::Chorus *""'"); 
  }
  arg1 = reinterpret_cast< stk::Chorus * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Chorus_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Chorus_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Chorus_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Chorus_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  arg3 = reinterpret_cast< stk::StkFrames * >(argp3);
  ecode4 = SWIG_AsVal_unsigned_SS_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Chorus_tick" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  ecode5 = SWIG_AsVal_unsigned_SS_int(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "Chorus_tick" "', argument " "5"" of type '" "unsigned int""'");
  } 
  arg5 = static_cast< unsigned int >(val5);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,*arg3,arg4,arg5);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Chorus_tick__SWIG_5(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Chorus *arg1 = (stk::Chorus *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  stk::StkFrames *arg3 = 0 ;
  unsigned int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Chorus, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Chorus_tick" "', argument " "1"" of type '" "stk::Chorus *""'"); 
  }
  arg1 = reinterpret_cast< stk::Chorus * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Chorus_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Chorus_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Chorus_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Chorus_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  arg3 = reinterpret_cast< stk::StkFrames * >(argp3);
  ecode4 = SWIG_AsVal_unsigned_SS_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Chorus_tick" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,*arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Chorus_tick__SWIG_6(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Chorus *arg1 = (stk::Chorus *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  stk::StkFrames *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Chorus, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Chorus_tick" "', argument " "1"" of type '" "stk::Chorus *""'"); 
  }
  arg1 = reinterpret_cast< stk::Chorus * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Chorus_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Chorus_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Chorus_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Chorus_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  arg3 = reinterpret_cast< stk::StkFrames * >(argp3);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,*arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Chorus_tick(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[6] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Chorus_tick", 0, 5, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Chorus, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Chorus_tick__SWIG_3(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Chorus, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Chorus_tick__SWIG_1(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Chorus, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_Chorus_tick__SWIG_6(self, argc, argv);
        }
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Chorus, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Chorus_tick__SWIG_2(self, argc, argv);
        }
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Chorus, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Chorus_tick__SWIG_0(self, argc, argv);
        }
      }
    }
  }
  if (argc == 4) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Chorus, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_Chorus_tick__SWIG_5(self, argc, argv);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Chorus, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_unsigned_SS_int(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_Chorus_tick__SWIG_4(self, argc, argv);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Chorus_tick'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::Chorus::tick(stk::StkFloat,unsigned int)\n"
    "    stk::Chorus::tick(stk::StkFloat)\n"
    "    stk::Chorus::tick(stk::StkFrames &,unsigned int)\n"
    "    stk::Chorus::tick(stk::StkFrames &)\n"
    "    stk::Chorus::tick(stk::StkFrames &,stk::StkFrames &,unsigned int,unsigned int)\n"
    "    stk::Chorus::tick(stk::StkFrames &,stk::StkFrames &,unsigned int)\n"
    "    stk::Chorus::tick(stk::StkFrames &,stk::StkFrames &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_Chorus(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Chorus *arg1 = (stk::Chorus *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Chorus, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Chorus" "', argument " "1"" of type '" "stk::Chorus *""'"); 
  }
  arg1 = reinterpret_cast< stk::Chorus * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Chorus_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_stk__Chorus, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *Chorus_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_Clarinet__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::StkFloat arg1 ;
  float val1 ;
  int ecode1 = 0 ;
  stk::Clarinet *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Clarinet" "', argument " "1"" of type '" "stk::StkFloat""'");
  } 
  arg1 = static_cast< stk::StkFloat >(val1);
  result = (stk::Clarinet *)new stk::Clarinet(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__Clarinet, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Clarinet__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  stk::Clarinet *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (stk::Clarinet *)new stk::Clarinet();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__Clarinet, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Clarinet(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_Clarinet", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_Clarinet__SWIG_1(self, argc, argv);
  }
  if (argc == 1) {
    int _v = 0;
    {
      int res = SWIG_AsVal_float(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_Clarinet__SWIG_0(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_Clarinet'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::Clarinet::Clarinet(stk::StkFloat)\n"
    "    stk::Clarinet::Clarinet()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_Clarinet(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Clarinet *arg1 = (stk::Clarinet *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Clarinet, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Clarinet" "', argument " "1"" of type '" "stk::Clarinet *""'"); 
  }
  arg1 = reinterpret_cast< stk::Clarinet * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Clarinet_clear(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Clarinet *arg1 = (stk::Clarinet *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Clarinet, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Clarinet_clear" "', argument " "1"" of type '" "stk::Clarinet *""'"); 
  }
  arg1 = reinterpret_cast< stk::Clarinet * >(argp1);
  (arg1)->clear();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Clarinet_setFrequency(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Clarinet *arg1 = (stk::Clarinet *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Clarinet_setFrequency", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Clarinet, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Clarinet_setFrequency" "', argument " "1"" of type '" "stk::Clarinet *""'"); 
  }
  arg1 = reinterpret_cast< stk::Clarinet * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Clarinet_setFrequency" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setFrequency(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Clarinet_startBlowing(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Clarinet *arg1 = (stk::Clarinet *) 0 ;
  stk::StkFloat arg2 ;
  stk::StkFloat arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Clarinet_startBlowing", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Clarinet, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Clarinet_startBlowing" "', argument " "1"" of type '" "stk::Clarinet *""'"); 
  }
  arg1 = reinterpret_cast< stk::Clarinet * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Clarinet_startBlowing" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Clarinet_startBlowing" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  (arg1)->startBlowing(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Clarinet_stopBlowing(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Clarinet *arg1 = (stk::Clarinet *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Clarinet_stopBlowing", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Clarinet, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Clarinet_stopBlowing" "', argument " "1"" of type '" "stk::Clarinet *""'"); 
  }
  arg1 = reinterpret_cast< stk::Clarinet * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Clarinet_stopBlowing" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->stopBlowing(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Clarinet_noteOn(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Clarinet *arg1 = (stk::Clarinet *) 0 ;
  stk::StkFloat arg2 ;
  stk::StkFloat arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Clarinet_noteOn", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Clarinet, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Clarinet_noteOn" "', argument " "1"" of type '" "stk::Clarinet *""'"); 
  }
  arg1 = reinterpret_cast< stk::Clarinet * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Clarinet_noteOn" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Clarinet_noteOn" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  (arg1)->noteOn(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Clarinet_noteOff(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Clarinet *arg1 = (stk::Clarinet *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Clarinet_noteOff", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Clarinet, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Clarinet_noteOff" "', argument " "1"" of type '" "stk::Clarinet *""'"); 
  }
  arg1 = reinterpret_cast< stk::Clarinet * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Clarinet_noteOff" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->noteOff(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Clarinet_controlChange(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Clarinet *arg1 = (stk::Clarinet *) 0 ;
  int arg2 ;
  stk::StkFloat arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Clarinet_controlChange", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Clarinet, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Clarinet_controlChange" "', argument " "1"" of type '" "stk::Clarinet *""'"); 
  }
  arg1 = reinterpret_cast< stk::Clarinet * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Clarinet_controlChange" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Clarinet_controlChange" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  (arg1)->controlChange(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Clarinet_tick__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Clarinet *arg1 = (stk::Clarinet *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Clarinet, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Clarinet_tick" "', argument " "1"" of type '" "stk::Clarinet *""'"); 
  }
  arg1 = reinterpret_cast< stk::Clarinet * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Clarinet_tick" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (stk::StkFloat)(arg1)->tick(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Clarinet_tick__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Clarinet *arg1 = (stk::Clarinet *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Clarinet, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Clarinet_tick" "', argument " "1"" of type '" "stk::Clarinet *""'"); 
  }
  arg1 = reinterpret_cast< stk::Clarinet * >(argp1);
  result = (stk::StkFloat)(arg1)->tick();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Clarinet_tick__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Clarinet *arg1 = (stk::Clarinet *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Clarinet, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Clarinet_tick" "', argument " "1"" of type '" "stk::Clarinet *""'"); 
  }
  arg1 = reinterpret_cast< stk::Clarinet * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Clarinet_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Clarinet_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Clarinet_tick" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Clarinet_tick__SWIG_3(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Clarinet *arg1 = (stk::Clarinet *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Clarinet, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Clarinet_tick" "', argument " "1"" of type '" "stk::Clarinet *""'"); 
  }
  arg1 = reinterpret_cast< stk::Clarinet * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Clarinet_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Clarinet_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Clarinet_tick(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Clarinet_tick", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Clarinet, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Clarinet_tick__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Clarinet, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Clarinet_tick__SWIG_3(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Clarinet, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Clarinet_tick__SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Clarinet, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Clarinet_tick__SWIG_2(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Clarinet_tick'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::Clarinet::tick(unsigned int)\n"
    "    stk::Clarinet::tick()\n"
    "    stk::Clarinet::tick(stk::StkFrames &,unsigned int)\n"
    "    stk::Clarinet::tick(stk::StkFrames &)\n");
  return 0;
}


SWIGINTERN PyObject *Clarinet_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_stk__Clarinet, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *Clarinet_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_Cubic(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Cubic *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_Cubic", 0, 0, 0)) SWIG_fail;
  result = (stk::Cubic *)new stk::Cubic();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__Cubic, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Cubic_setA1(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Cubic *arg1 = (stk::Cubic *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Cubic_setA1", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Cubic, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Cubic_setA1" "', argument " "1"" of type '" "stk::Cubic *""'"); 
  }
  arg1 = reinterpret_cast< stk::Cubic * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Cubic_setA1" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setA1(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Cubic_setA2(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Cubic *arg1 = (stk::Cubic *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Cubic_setA2", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Cubic, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Cubic_setA2" "', argument " "1"" of type '" "stk::Cubic *""'"); 
  }
  arg1 = reinterpret_cast< stk::Cubic * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Cubic_setA2" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setA2(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Cubic_setA3(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Cubic *arg1 = (stk::Cubic *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Cubic_setA3", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Cubic, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Cubic_setA3" "', argument " "1"" of type '" "stk::Cubic *""'"); 
  }
  arg1 = reinterpret_cast< stk::Cubic * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Cubic_setA3" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setA3(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Cubic_setGain(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Cubic *arg1 = (stk::Cubic *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Cubic_setGain", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Cubic, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Cubic_setGain" "', argument " "1"" of type '" "stk::Cubic *""'"); 
  }
  arg1 = reinterpret_cast< stk::Cubic * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Cubic_setGain" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setGain(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Cubic_setThreshold(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Cubic *arg1 = (stk::Cubic *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Cubic_setThreshold", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Cubic, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Cubic_setThreshold" "', argument " "1"" of type '" "stk::Cubic *""'"); 
  }
  arg1 = reinterpret_cast< stk::Cubic * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Cubic_setThreshold" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setThreshold(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Cubic_tick__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Cubic *arg1 = (stk::Cubic *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Cubic, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Cubic_tick" "', argument " "1"" of type '" "stk::Cubic *""'"); 
  }
  arg1 = reinterpret_cast< stk::Cubic * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Cubic_tick" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  result = (stk::StkFloat)(arg1)->tick(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Cubic_tick__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Cubic *arg1 = (stk::Cubic *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Cubic, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Cubic_tick" "', argument " "1"" of type '" "stk::Cubic *""'"); 
  }
  arg1 = reinterpret_cast< stk::Cubic * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Cubic_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Cubic_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Cubic_tick" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Cubic_tick__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Cubic *arg1 = (stk::Cubic *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Cubic, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Cubic_tick" "', argument " "1"" of type '" "stk::Cubic *""'"); 
  }
  arg1 = reinterpret_cast< stk::Cubic * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Cubic_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Cubic_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Cubic_tick__SWIG_3(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Cubic *arg1 = (stk::Cubic *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  stk::StkFrames *arg3 = 0 ;
  unsigned int arg4 ;
  unsigned int arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  unsigned int val5 ;
  int ecode5 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Cubic, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Cubic_tick" "', argument " "1"" of type '" "stk::Cubic *""'"); 
  }
  arg1 = reinterpret_cast< stk::Cubic * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Cubic_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Cubic_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Cubic_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Cubic_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  arg3 = reinterpret_cast< stk::StkFrames * >(argp3);
  ecode4 = SWIG_AsVal_unsigned_SS_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Cubic_tick" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  ecode5 = SWIG_AsVal_unsigned_SS_int(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "Cubic_tick" "', argument " "5"" of type '" "unsigned int""'");
  } 
  arg5 = static_cast< unsigned int >(val5);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,*arg3,arg4,arg5);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Cubic_tick__SWIG_4(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Cubic *arg1 = (stk::Cubic *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  stk::StkFrames *arg3 = 0 ;
  unsigned int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Cubic, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Cubic_tick" "', argument " "1"" of type '" "stk::Cubic *""'"); 
  }
  arg1 = reinterpret_cast< stk::Cubic * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Cubic_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Cubic_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Cubic_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Cubic_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  arg3 = reinterpret_cast< stk::StkFrames * >(argp3);
  ecode4 = SWIG_AsVal_unsigned_SS_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Cubic_tick" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,*arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Cubic_tick__SWIG_5(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Cubic *arg1 = (stk::Cubic *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  stk::StkFrames *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Cubic, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Cubic_tick" "', argument " "1"" of type '" "stk::Cubic *""'"); 
  }
  arg1 = reinterpret_cast< stk::Cubic * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Cubic_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Cubic_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Cubic_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Cubic_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  arg3 = reinterpret_cast< stk::StkFrames * >(argp3);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,*arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Cubic_tick(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[6] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Cubic_tick", 0, 5, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Cubic, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Cubic_tick__SWIG_2(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Cubic, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Cubic_tick__SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Cubic, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_Cubic_tick__SWIG_5(self, argc, argv);
        }
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Cubic, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Cubic_tick__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  if (argc == 4) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Cubic, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_Cubic_tick__SWIG_4(self, argc, argv);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Cubic, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_unsigned_SS_int(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_Cubic_tick__SWIG_3(self, argc, argv);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Cubic_tick'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::Cubic::tick(stk::StkFloat)\n"
    "    stk::Cubic::tick(stk::StkFrames &,unsigned int)\n"
    "    stk::Cubic::tick(stk::StkFrames &)\n"
    "    stk::Cubic::tick(stk::StkFrames &,stk::StkFrames &,unsigned int,unsigned int)\n"
    "    stk::Cubic::tick(stk::StkFrames &,stk::StkFrames &,unsigned int)\n"
    "    stk::Cubic::tick(stk::StkFrames &,stk::StkFrames &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_Cubic(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Cubic *arg1 = (stk::Cubic *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Cubic, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Cubic" "', argument " "1"" of type '" "stk::Cubic *""'"); 
  }
  arg1 = reinterpret_cast< stk::Cubic * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Cubic_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_stk__Cubic, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *Cubic_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_Delay__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  unsigned long arg1 ;
  unsigned long arg2 ;
  unsigned long val1 ;
  int ecode1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  stk::Delay *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Delay" "', argument " "1"" of type '" "unsigned long""'");
  } 
  arg1 = static_cast< unsigned long >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_Delay" "', argument " "2"" of type '" "unsigned long""'");
  } 
  arg2 = static_cast< unsigned long >(val2);
  result = (stk::Delay *)new stk::Delay(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__Delay, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Delay__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  unsigned long arg1 ;
  unsigned long val1 ;
  int ecode1 = 0 ;
  stk::Delay *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Delay" "', argument " "1"" of type '" "unsigned long""'");
  } 
  arg1 = static_cast< unsigned long >(val1);
  result = (stk::Delay *)new stk::Delay(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__Delay, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Delay__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  stk::Delay *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (stk::Delay *)new stk::Delay();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__Delay, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Delay(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_Delay", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_Delay__SWIG_2(self, argc, argv);
  }
  if (argc == 1) {
    int _v = 0;
    {
      int res = SWIG_AsVal_unsigned_SS_long(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_Delay__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    {
      int res = SWIG_AsVal_unsigned_SS_long(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_long(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_Delay__SWIG_0(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_Delay'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::Delay::Delay(unsigned long,unsigned long)\n"
    "    stk::Delay::Delay(unsigned long)\n"
    "    stk::Delay::Delay()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_Delay(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Delay *arg1 = (stk::Delay *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Delay, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Delay" "', argument " "1"" of type '" "stk::Delay *""'"); 
  }
  arg1 = reinterpret_cast< stk::Delay * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Delay_getMaximumDelay(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Delay *arg1 = (stk::Delay *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned long result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Delay, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Delay_getMaximumDelay" "', argument " "1"" of type '" "stk::Delay *""'"); 
  }
  arg1 = reinterpret_cast< stk::Delay * >(argp1);
  result = (unsigned long)(arg1)->getMaximumDelay();
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Delay_setMaximumDelay(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Delay *arg1 = (stk::Delay *) 0 ;
  unsigned long arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Delay_setMaximumDelay", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Delay, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Delay_setMaximumDelay" "', argument " "1"" of type '" "stk::Delay *""'"); 
  }
  arg1 = reinterpret_cast< stk::Delay * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Delay_setMaximumDelay" "', argument " "2"" of type '" "unsigned long""'");
  } 
  arg2 = static_cast< unsigned long >(val2);
  (arg1)->setMaximumDelay(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Delay_setDelay(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Delay *arg1 = (stk::Delay *) 0 ;
  unsigned long arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Delay_setDelay", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Delay, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Delay_setDelay" "', argument " "1"" of type '" "stk::Delay *""'"); 
  }
  arg1 = reinterpret_cast< stk::Delay * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Delay_setDelay" "', argument " "2"" of type '" "unsigned long""'");
  } 
  arg2 = static_cast< unsigned long >(val2);
  (arg1)->setDelay(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Delay_getDelay(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Delay *arg1 = (stk::Delay *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned long result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Delay, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Delay_getDelay" "', argument " "1"" of type '" "stk::Delay const *""'"); 
  }
  arg1 = reinterpret_cast< stk::Delay * >(argp1);
  result = (unsigned long)((stk::Delay const *)arg1)->getDelay();
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Delay_tapOut(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Delay *arg1 = (stk::Delay *) 0 ;
  unsigned long arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  stk::StkFloat result;
  
  if (!SWIG_Python_UnpackTuple(args, "Delay_tapOut", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Delay, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Delay_tapOut" "', argument " "1"" of type '" "stk::Delay *""'"); 
  }
  arg1 = reinterpret_cast< stk::Delay * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Delay_tapOut" "', argument " "2"" of type '" "unsigned long""'");
  } 
  arg2 = static_cast< unsigned long >(val2);
  result = (stk::StkFloat)(arg1)->tapOut(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Delay_tapIn(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Delay *arg1 = (stk::Delay *) 0 ;
  stk::StkFloat arg2 ;
  unsigned long arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  unsigned long val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Delay_tapIn", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Delay, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Delay_tapIn" "', argument " "1"" of type '" "stk::Delay *""'"); 
  }
  arg1 = reinterpret_cast< stk::Delay * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Delay_tapIn" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_long(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Delay_tapIn" "', argument " "3"" of type '" "unsigned long""'");
  } 
  arg3 = static_cast< unsigned long >(val3);
  (arg1)->tapIn(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Delay_addTo(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Delay *arg1 = (stk::Delay *) 0 ;
  stk::StkFloat arg2 ;
  unsigned long arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  unsigned long val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  stk::StkFloat result;
  
  if (!SWIG_Python_UnpackTuple(args, "Delay_addTo", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Delay, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Delay_addTo" "', argument " "1"" of type '" "stk::Delay *""'"); 
  }
  arg1 = reinterpret_cast< stk::Delay * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Delay_addTo" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_long(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Delay_addTo" "', argument " "3"" of type '" "unsigned long""'");
  } 
  arg3 = static_cast< unsigned long >(val3);
  result = (stk::StkFloat)(arg1)->addTo(arg2,arg3);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Delay_lastOut(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Delay *arg1 = (stk::Delay *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  stk::StkFloat result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Delay, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Delay_lastOut" "', argument " "1"" of type '" "stk::Delay const *""'"); 
  }
  arg1 = reinterpret_cast< stk::Delay * >(argp1);
  result = (stk::StkFloat)((stk::Delay const *)arg1)->lastOut();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Delay_nextOut(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Delay *arg1 = (stk::Delay *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  stk::StkFloat result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Delay, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Delay_nextOut" "', argument " "1"" of type '" "stk::Delay *""'"); 
  }
  arg1 = reinterpret_cast< stk::Delay * >(argp1);
  result = (stk::StkFloat)(arg1)->nextOut();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Delay_energy(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Delay *arg1 = (stk::Delay *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  stk::StkFloat result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Delay, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Delay_energy" "', argument " "1"" of type '" "stk::Delay const *""'"); 
  }
  arg1 = reinterpret_cast< stk::Delay * >(argp1);
  result = (stk::StkFloat)((stk::Delay const *)arg1)->energy();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Delay_tick__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Delay *arg1 = (stk::Delay *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Delay, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Delay_tick" "', argument " "1"" of type '" "stk::Delay *""'"); 
  }
  arg1 = reinterpret_cast< stk::Delay * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Delay_tick" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  result = (stk::StkFloat)(arg1)->tick(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Delay_tick__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Delay *arg1 = (stk::Delay *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Delay, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Delay_tick" "', argument " "1"" of type '" "stk::Delay *""'"); 
  }
  arg1 = reinterpret_cast< stk::Delay * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Delay_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Delay_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Delay_tick" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Delay_tick__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Delay *arg1 = (stk::Delay *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Delay, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Delay_tick" "', argument " "1"" of type '" "stk::Delay *""'"); 
  }
  arg1 = reinterpret_cast< stk::Delay * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Delay_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Delay_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Delay_tick__SWIG_3(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Delay *arg1 = (stk::Delay *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  stk::StkFrames *arg3 = 0 ;
  unsigned int arg4 ;
  unsigned int arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  unsigned int val5 ;
  int ecode5 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Delay, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Delay_tick" "', argument " "1"" of type '" "stk::Delay *""'"); 
  }
  arg1 = reinterpret_cast< stk::Delay * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Delay_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Delay_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Delay_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Delay_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  arg3 = reinterpret_cast< stk::StkFrames * >(argp3);
  ecode4 = SWIG_AsVal_unsigned_SS_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Delay_tick" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  ecode5 = SWIG_AsVal_unsigned_SS_int(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "Delay_tick" "', argument " "5"" of type '" "unsigned int""'");
  } 
  arg5 = static_cast< unsigned int >(val5);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,*arg3,arg4,arg5);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Delay_tick__SWIG_4(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Delay *arg1 = (stk::Delay *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  stk::StkFrames *arg3 = 0 ;
  unsigned int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Delay, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Delay_tick" "', argument " "1"" of type '" "stk::Delay *""'"); 
  }
  arg1 = reinterpret_cast< stk::Delay * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Delay_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Delay_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Delay_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Delay_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  arg3 = reinterpret_cast< stk::StkFrames * >(argp3);
  ecode4 = SWIG_AsVal_unsigned_SS_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Delay_tick" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,*arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Delay_tick__SWIG_5(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Delay *arg1 = (stk::Delay *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  stk::StkFrames *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Delay, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Delay_tick" "', argument " "1"" of type '" "stk::Delay *""'"); 
  }
  arg1 = reinterpret_cast< stk::Delay * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Delay_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Delay_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Delay_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Delay_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  arg3 = reinterpret_cast< stk::StkFrames * >(argp3);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,*arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Delay_tick(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[6] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Delay_tick", 0, 5, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Delay, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Delay_tick__SWIG_2(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Delay, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Delay_tick__SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Delay, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_Delay_tick__SWIG_5(self, argc, argv);
        }
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Delay, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Delay_tick__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  if (argc == 4) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Delay, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_Delay_tick__SWIG_4(self, argc, argv);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Delay, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_unsigned_SS_int(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_Delay_tick__SWIG_3(self, argc, argv);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Delay_tick'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::Delay::tick(stk::StkFloat)\n"
    "    stk::Delay::tick(stk::StkFrames &,unsigned int)\n"
    "    stk::Delay::tick(stk::StkFrames &)\n"
    "    stk::Delay::tick(stk::StkFrames &,stk::StkFrames &,unsigned int,unsigned int)\n"
    "    stk::Delay::tick(stk::StkFrames &,stk::StkFrames &,unsigned int)\n"
    "    stk::Delay::tick(stk::StkFrames &,stk::StkFrames &)\n");
  return 0;
}


SWIGINTERN PyObject *Delay_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_stk__Delay, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *Delay_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_DelayA__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::StkFloat arg1 ;
  unsigned long arg2 ;
  float val1 ;
  int ecode1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  stk::DelayA *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_DelayA" "', argument " "1"" of type '" "stk::StkFloat""'");
  } 
  arg1 = static_cast< stk::StkFloat >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_DelayA" "', argument " "2"" of type '" "unsigned long""'");
  } 
  arg2 = static_cast< unsigned long >(val2);
  result = (stk::DelayA *)new stk::DelayA(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__DelayA, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DelayA__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::StkFloat arg1 ;
  float val1 ;
  int ecode1 = 0 ;
  stk::DelayA *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_DelayA" "', argument " "1"" of type '" "stk::StkFloat""'");
  } 
  arg1 = static_cast< stk::StkFloat >(val1);
  result = (stk::DelayA *)new stk::DelayA(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__DelayA, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DelayA__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  stk::DelayA *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (stk::DelayA *)new stk::DelayA();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__DelayA, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DelayA(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_DelayA", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_DelayA__SWIG_2(self, argc, argv);
  }
  if (argc == 1) {
    int _v = 0;
    {
      int res = SWIG_AsVal_float(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_DelayA__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    {
      int res = SWIG_AsVal_float(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_long(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_DelayA__SWIG_0(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_DelayA'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::DelayA::DelayA(stk::StkFloat,unsigned long)\n"
    "    stk::DelayA::DelayA(stk::StkFloat)\n"
    "    stk::DelayA::DelayA()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_DelayA(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::DelayA *arg1 = (stk::DelayA *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__DelayA, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_DelayA" "', argument " "1"" of type '" "stk::DelayA *""'"); 
  }
  arg1 = reinterpret_cast< stk::DelayA * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DelayA_clear(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::DelayA *arg1 = (stk::DelayA *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__DelayA, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DelayA_clear" "', argument " "1"" of type '" "stk::DelayA *""'"); 
  }
  arg1 = reinterpret_cast< stk::DelayA * >(argp1);
  (arg1)->clear();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DelayA_getMaximumDelay(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::DelayA *arg1 = (stk::DelayA *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned long result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__DelayA, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DelayA_getMaximumDelay" "', argument " "1"" of type '" "stk::DelayA *""'"); 
  }
  arg1 = reinterpret_cast< stk::DelayA * >(argp1);
  result = (unsigned long)(arg1)->getMaximumDelay();
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DelayA_setMaximumDelay(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::DelayA *arg1 = (stk::DelayA *) 0 ;
  unsigned long arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "DelayA_setMaximumDelay", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__DelayA, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DelayA_setMaximumDelay" "', argument " "1"" of type '" "stk::DelayA *""'"); 
  }
  arg1 = reinterpret_cast< stk::DelayA * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DelayA_setMaximumDelay" "', argument " "2"" of type '" "unsigned long""'");
  } 
  arg2 = static_cast< unsigned long >(val2);
  (arg1)->setMaximumDelay(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DelayA_setDelay(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::DelayA *arg1 = (stk::DelayA *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "DelayA_setDelay", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__DelayA, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DelayA_setDelay" "', argument " "1"" of type '" "stk::DelayA *""'"); 
  }
  arg1 = reinterpret_cast< stk::DelayA * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DelayA_setDelay" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setDelay(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DelayA_getDelay(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::DelayA *arg1 = (stk::DelayA *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  stk::StkFloat result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__DelayA, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DelayA_getDelay" "', argument " "1"" of type '" "stk::DelayA const *""'"); 
  }
  arg1 = reinterpret_cast< stk::DelayA * >(argp1);
  result = (stk::StkFloat)((stk::DelayA const *)arg1)->getDelay();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DelayA_tapOut(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::DelayA *arg1 = (stk::DelayA *) 0 ;
  unsigned long arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  stk::StkFloat result;
  
  if (!SWIG_Python_UnpackTuple(args, "DelayA_tapOut", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__DelayA, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DelayA_tapOut" "', argument " "1"" of type '" "stk::DelayA *""'"); 
  }
  arg1 = reinterpret_cast< stk::DelayA * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DelayA_tapOut" "', argument " "2"" of type '" "unsigned long""'");
  } 
  arg2 = static_cast< unsigned long >(val2);
  result = (stk::StkFloat)(arg1)->tapOut(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DelayA_lastOut(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::DelayA *arg1 = (stk::DelayA *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  stk::StkFloat result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__DelayA, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DelayA_lastOut" "', argument " "1"" of type '" "stk::DelayA const *""'"); 
  }
  arg1 = reinterpret_cast< stk::DelayA * >(argp1);
  result = (stk::StkFloat)((stk::DelayA const *)arg1)->lastOut();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DelayA_nextOut(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::DelayA *arg1 = (stk::DelayA *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  stk::StkFloat result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__DelayA, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DelayA_nextOut" "', argument " "1"" of type '" "stk::DelayA *""'"); 
  }
  arg1 = reinterpret_cast< stk::DelayA * >(argp1);
  result = (stk::StkFloat)(arg1)->nextOut();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DelayA_tick__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::DelayA *arg1 = (stk::DelayA *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__DelayA, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DelayA_tick" "', argument " "1"" of type '" "stk::DelayA *""'"); 
  }
  arg1 = reinterpret_cast< stk::DelayA * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DelayA_tick" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  result = (stk::StkFloat)(arg1)->tick(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DelayA_tick__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::DelayA *arg1 = (stk::DelayA *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__DelayA, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DelayA_tick" "', argument " "1"" of type '" "stk::DelayA *""'"); 
  }
  arg1 = reinterpret_cast< stk::DelayA * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DelayA_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DelayA_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "DelayA_tick" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DelayA_tick__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::DelayA *arg1 = (stk::DelayA *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__DelayA, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DelayA_tick" "', argument " "1"" of type '" "stk::DelayA *""'"); 
  }
  arg1 = reinterpret_cast< stk::DelayA * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DelayA_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DelayA_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DelayA_tick__SWIG_3(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::DelayA *arg1 = (stk::DelayA *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  stk::StkFrames *arg3 = 0 ;
  unsigned int arg4 ;
  unsigned int arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  unsigned int val5 ;
  int ecode5 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__DelayA, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DelayA_tick" "', argument " "1"" of type '" "stk::DelayA *""'"); 
  }
  arg1 = reinterpret_cast< stk::DelayA * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DelayA_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DelayA_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "DelayA_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DelayA_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  arg3 = reinterpret_cast< stk::StkFrames * >(argp3);
  ecode4 = SWIG_AsVal_unsigned_SS_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "DelayA_tick" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  ecode5 = SWIG_AsVal_unsigned_SS_int(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "DelayA_tick" "', argument " "5"" of type '" "unsigned int""'");
  } 
  arg5 = static_cast< unsigned int >(val5);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,*arg3,arg4,arg5);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DelayA_tick__SWIG_4(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::DelayA *arg1 = (stk::DelayA *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  stk::StkFrames *arg3 = 0 ;
  unsigned int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__DelayA, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DelayA_tick" "', argument " "1"" of type '" "stk::DelayA *""'"); 
  }
  arg1 = reinterpret_cast< stk::DelayA * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DelayA_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DelayA_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "DelayA_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DelayA_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  arg3 = reinterpret_cast< stk::StkFrames * >(argp3);
  ecode4 = SWIG_AsVal_unsigned_SS_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "DelayA_tick" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,*arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DelayA_tick__SWIG_5(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::DelayA *arg1 = (stk::DelayA *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  stk::StkFrames *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__DelayA, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DelayA_tick" "', argument " "1"" of type '" "stk::DelayA *""'"); 
  }
  arg1 = reinterpret_cast< stk::DelayA * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DelayA_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DelayA_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "DelayA_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DelayA_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  arg3 = reinterpret_cast< stk::StkFrames * >(argp3);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,*arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DelayA_tick(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[6] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "DelayA_tick", 0, 5, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__DelayA, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_DelayA_tick__SWIG_2(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__DelayA, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_DelayA_tick__SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__DelayA, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_DelayA_tick__SWIG_5(self, argc, argv);
        }
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__DelayA, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_DelayA_tick__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  if (argc == 4) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__DelayA, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_DelayA_tick__SWIG_4(self, argc, argv);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__DelayA, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_unsigned_SS_int(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_DelayA_tick__SWIG_3(self, argc, argv);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'DelayA_tick'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::DelayA::tick(stk::StkFloat)\n"
    "    stk::DelayA::tick(stk::StkFrames &,unsigned int)\n"
    "    stk::DelayA::tick(stk::StkFrames &)\n"
    "    stk::DelayA::tick(stk::StkFrames &,stk::StkFrames &,unsigned int,unsigned int)\n"
    "    stk::DelayA::tick(stk::StkFrames &,stk::StkFrames &,unsigned int)\n"
    "    stk::DelayA::tick(stk::StkFrames &,stk::StkFrames &)\n");
  return 0;
}


SWIGINTERN PyObject *DelayA_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_stk__DelayA, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *DelayA_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_DelayL__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::StkFloat arg1 ;
  unsigned long arg2 ;
  float val1 ;
  int ecode1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  stk::DelayL *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_DelayL" "', argument " "1"" of type '" "stk::StkFloat""'");
  } 
  arg1 = static_cast< stk::StkFloat >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_DelayL" "', argument " "2"" of type '" "unsigned long""'");
  } 
  arg2 = static_cast< unsigned long >(val2);
  result = (stk::DelayL *)new stk::DelayL(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__DelayL, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DelayL__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::StkFloat arg1 ;
  float val1 ;
  int ecode1 = 0 ;
  stk::DelayL *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_DelayL" "', argument " "1"" of type '" "stk::StkFloat""'");
  } 
  arg1 = static_cast< stk::StkFloat >(val1);
  result = (stk::DelayL *)new stk::DelayL(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__DelayL, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DelayL__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  stk::DelayL *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (stk::DelayL *)new stk::DelayL();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__DelayL, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DelayL(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_DelayL", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_DelayL__SWIG_2(self, argc, argv);
  }
  if (argc == 1) {
    int _v = 0;
    {
      int res = SWIG_AsVal_float(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_DelayL__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    {
      int res = SWIG_AsVal_float(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_long(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_DelayL__SWIG_0(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_DelayL'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::DelayL::DelayL(stk::StkFloat,unsigned long)\n"
    "    stk::DelayL::DelayL(stk::StkFloat)\n"
    "    stk::DelayL::DelayL()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_DelayL(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::DelayL *arg1 = (stk::DelayL *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__DelayL, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_DelayL" "', argument " "1"" of type '" "stk::DelayL *""'"); 
  }
  arg1 = reinterpret_cast< stk::DelayL * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DelayL_getMaximumDelay(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::DelayL *arg1 = (stk::DelayL *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned long result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__DelayL, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DelayL_getMaximumDelay" "', argument " "1"" of type '" "stk::DelayL *""'"); 
  }
  arg1 = reinterpret_cast< stk::DelayL * >(argp1);
  result = (unsigned long)(arg1)->getMaximumDelay();
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DelayL_setMaximumDelay(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::DelayL *arg1 = (stk::DelayL *) 0 ;
  unsigned long arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "DelayL_setMaximumDelay", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__DelayL, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DelayL_setMaximumDelay" "', argument " "1"" of type '" "stk::DelayL *""'"); 
  }
  arg1 = reinterpret_cast< stk::DelayL * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DelayL_setMaximumDelay" "', argument " "2"" of type '" "unsigned long""'");
  } 
  arg2 = static_cast< unsigned long >(val2);
  (arg1)->setMaximumDelay(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DelayL_setDelay(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::DelayL *arg1 = (stk::DelayL *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "DelayL_setDelay", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__DelayL, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DelayL_setDelay" "', argument " "1"" of type '" "stk::DelayL *""'"); 
  }
  arg1 = reinterpret_cast< stk::DelayL * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DelayL_setDelay" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setDelay(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DelayL_getDelay(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::DelayL *arg1 = (stk::DelayL *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  stk::StkFloat result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__DelayL, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DelayL_getDelay" "', argument " "1"" of type '" "stk::DelayL const *""'"); 
  }
  arg1 = reinterpret_cast< stk::DelayL * >(argp1);
  result = (stk::StkFloat)((stk::DelayL const *)arg1)->getDelay();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DelayL_tapOut(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::DelayL *arg1 = (stk::DelayL *) 0 ;
  unsigned long arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  stk::StkFloat result;
  
  if (!SWIG_Python_UnpackTuple(args, "DelayL_tapOut", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__DelayL, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DelayL_tapOut" "', argument " "1"" of type '" "stk::DelayL *""'"); 
  }
  arg1 = reinterpret_cast< stk::DelayL * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DelayL_tapOut" "', argument " "2"" of type '" "unsigned long""'");
  } 
  arg2 = static_cast< unsigned long >(val2);
  result = (stk::StkFloat)(arg1)->tapOut(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DelayL_tapIn(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::DelayL *arg1 = (stk::DelayL *) 0 ;
  stk::StkFloat arg2 ;
  unsigned long arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  unsigned long val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "DelayL_tapIn", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__DelayL, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DelayL_tapIn" "', argument " "1"" of type '" "stk::DelayL *""'"); 
  }
  arg1 = reinterpret_cast< stk::DelayL * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DelayL_tapIn" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_long(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "DelayL_tapIn" "', argument " "3"" of type '" "unsigned long""'");
  } 
  arg3 = static_cast< unsigned long >(val3);
  (arg1)->tapIn(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DelayL_lastOut(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::DelayL *arg1 = (stk::DelayL *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  stk::StkFloat result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__DelayL, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DelayL_lastOut" "', argument " "1"" of type '" "stk::DelayL const *""'"); 
  }
  arg1 = reinterpret_cast< stk::DelayL * >(argp1);
  result = (stk::StkFloat)((stk::DelayL const *)arg1)->lastOut();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DelayL_nextOut(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::DelayL *arg1 = (stk::DelayL *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  stk::StkFloat result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__DelayL, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DelayL_nextOut" "', argument " "1"" of type '" "stk::DelayL *""'"); 
  }
  arg1 = reinterpret_cast< stk::DelayL * >(argp1);
  result = (stk::StkFloat)(arg1)->nextOut();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DelayL_tick__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::DelayL *arg1 = (stk::DelayL *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__DelayL, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DelayL_tick" "', argument " "1"" of type '" "stk::DelayL *""'"); 
  }
  arg1 = reinterpret_cast< stk::DelayL * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DelayL_tick" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  result = (stk::StkFloat)(arg1)->tick(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DelayL_tick__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::DelayL *arg1 = (stk::DelayL *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__DelayL, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DelayL_tick" "', argument " "1"" of type '" "stk::DelayL *""'"); 
  }
  arg1 = reinterpret_cast< stk::DelayL * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DelayL_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DelayL_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "DelayL_tick" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DelayL_tick__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::DelayL *arg1 = (stk::DelayL *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__DelayL, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DelayL_tick" "', argument " "1"" of type '" "stk::DelayL *""'"); 
  }
  arg1 = reinterpret_cast< stk::DelayL * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DelayL_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DelayL_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DelayL_tick__SWIG_3(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::DelayL *arg1 = (stk::DelayL *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  stk::StkFrames *arg3 = 0 ;
  unsigned int arg4 ;
  unsigned int arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  unsigned int val5 ;
  int ecode5 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__DelayL, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DelayL_tick" "', argument " "1"" of type '" "stk::DelayL *""'"); 
  }
  arg1 = reinterpret_cast< stk::DelayL * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DelayL_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DelayL_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "DelayL_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DelayL_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  arg3 = reinterpret_cast< stk::StkFrames * >(argp3);
  ecode4 = SWIG_AsVal_unsigned_SS_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "DelayL_tick" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  ecode5 = SWIG_AsVal_unsigned_SS_int(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "DelayL_tick" "', argument " "5"" of type '" "unsigned int""'");
  } 
  arg5 = static_cast< unsigned int >(val5);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,*arg3,arg4,arg5);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DelayL_tick__SWIG_4(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::DelayL *arg1 = (stk::DelayL *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  stk::StkFrames *arg3 = 0 ;
  unsigned int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__DelayL, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DelayL_tick" "', argument " "1"" of type '" "stk::DelayL *""'"); 
  }
  arg1 = reinterpret_cast< stk::DelayL * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DelayL_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DelayL_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "DelayL_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DelayL_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  arg3 = reinterpret_cast< stk::StkFrames * >(argp3);
  ecode4 = SWIG_AsVal_unsigned_SS_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "DelayL_tick" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,*arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DelayL_tick__SWIG_5(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::DelayL *arg1 = (stk::DelayL *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  stk::StkFrames *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__DelayL, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DelayL_tick" "', argument " "1"" of type '" "stk::DelayL *""'"); 
  }
  arg1 = reinterpret_cast< stk::DelayL * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DelayL_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DelayL_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "DelayL_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DelayL_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  arg3 = reinterpret_cast< stk::StkFrames * >(argp3);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,*arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DelayL_tick(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[6] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "DelayL_tick", 0, 5, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__DelayL, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_DelayL_tick__SWIG_2(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__DelayL, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_DelayL_tick__SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__DelayL, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_DelayL_tick__SWIG_5(self, argc, argv);
        }
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__DelayL, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_DelayL_tick__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  if (argc == 4) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__DelayL, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_DelayL_tick__SWIG_4(self, argc, argv);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__DelayL, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_unsigned_SS_int(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_DelayL_tick__SWIG_3(self, argc, argv);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'DelayL_tick'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::DelayL::tick(stk::StkFloat)\n"
    "    stk::DelayL::tick(stk::StkFrames &,unsigned int)\n"
    "    stk::DelayL::tick(stk::StkFrames &)\n"
    "    stk::DelayL::tick(stk::StkFrames &,stk::StkFrames &,unsigned int,unsigned int)\n"
    "    stk::DelayL::tick(stk::StkFrames &,stk::StkFrames &,unsigned int)\n"
    "    stk::DelayL::tick(stk::StkFrames &,stk::StkFrames &)\n");
  return 0;
}


SWIGINTERN PyObject *DelayL_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_stk__DelayL, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *DelayL_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_Drummer(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Drummer *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_Drummer", 0, 0, 0)) SWIG_fail;
  result = (stk::Drummer *)new stk::Drummer();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__Drummer, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Drummer(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Drummer *arg1 = (stk::Drummer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Drummer, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Drummer" "', argument " "1"" of type '" "stk::Drummer *""'"); 
  }
  arg1 = reinterpret_cast< stk::Drummer * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Drummer_noteOn(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Drummer *arg1 = (stk::Drummer *) 0 ;
  stk::StkFloat arg2 ;
  stk::StkFloat arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Drummer_noteOn", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Drummer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Drummer_noteOn" "', argument " "1"" of type '" "stk::Drummer *""'"); 
  }
  arg1 = reinterpret_cast< stk::Drummer * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Drummer_noteOn" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Drummer_noteOn" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  (arg1)->noteOn(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Drummer_noteOff(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Drummer *arg1 = (stk::Drummer *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Drummer_noteOff", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Drummer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Drummer_noteOff" "', argument " "1"" of type '" "stk::Drummer *""'"); 
  }
  arg1 = reinterpret_cast< stk::Drummer * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Drummer_noteOff" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->noteOff(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Drummer_tick__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Drummer *arg1 = (stk::Drummer *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Drummer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Drummer_tick" "', argument " "1"" of type '" "stk::Drummer *""'"); 
  }
  arg1 = reinterpret_cast< stk::Drummer * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Drummer_tick" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (stk::StkFloat)(arg1)->tick(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Drummer_tick__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Drummer *arg1 = (stk::Drummer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Drummer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Drummer_tick" "', argument " "1"" of type '" "stk::Drummer *""'"); 
  }
  arg1 = reinterpret_cast< stk::Drummer * >(argp1);
  result = (stk::StkFloat)(arg1)->tick();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Drummer_tick__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Drummer *arg1 = (stk::Drummer *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Drummer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Drummer_tick" "', argument " "1"" of type '" "stk::Drummer *""'"); 
  }
  arg1 = reinterpret_cast< stk::Drummer * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Drummer_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Drummer_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Drummer_tick" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Drummer_tick__SWIG_3(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Drummer *arg1 = (stk::Drummer *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Drummer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Drummer_tick" "', argument " "1"" of type '" "stk::Drummer *""'"); 
  }
  arg1 = reinterpret_cast< stk::Drummer * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Drummer_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Drummer_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Drummer_tick(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Drummer_tick", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Drummer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Drummer_tick__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Drummer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Drummer_tick__SWIG_3(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Drummer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Drummer_tick__SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Drummer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Drummer_tick__SWIG_2(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Drummer_tick'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::Drummer::tick(unsigned int)\n"
    "    stk::Drummer::tick()\n"
    "    stk::Drummer::tick(stk::StkFrames &,unsigned int)\n"
    "    stk::Drummer::tick(stk::StkFrames &)\n");
  return 0;
}


SWIGINTERN PyObject *Drummer_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_stk__Drummer, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *Drummer_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_Echo__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  unsigned long arg1 ;
  unsigned long val1 ;
  int ecode1 = 0 ;
  stk::Echo *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Echo" "', argument " "1"" of type '" "unsigned long""'");
  } 
  arg1 = static_cast< unsigned long >(val1);
  result = (stk::Echo *)new stk::Echo(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__Echo, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Echo__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  stk::Echo *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (stk::Echo *)new stk::Echo();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__Echo, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Echo(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_Echo", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_Echo__SWIG_1(self, argc, argv);
  }
  if (argc == 1) {
    int _v = 0;
    {
      int res = SWIG_AsVal_unsigned_SS_long(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_Echo__SWIG_0(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_Echo'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::Echo::Echo(unsigned long)\n"
    "    stk::Echo::Echo()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Echo_clear(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Echo *arg1 = (stk::Echo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Echo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Echo_clear" "', argument " "1"" of type '" "stk::Echo *""'"); 
  }
  arg1 = reinterpret_cast< stk::Echo * >(argp1);
  (arg1)->clear();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Echo_setMaximumDelay(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Echo *arg1 = (stk::Echo *) 0 ;
  unsigned long arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Echo_setMaximumDelay", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Echo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Echo_setMaximumDelay" "', argument " "1"" of type '" "stk::Echo *""'"); 
  }
  arg1 = reinterpret_cast< stk::Echo * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Echo_setMaximumDelay" "', argument " "2"" of type '" "unsigned long""'");
  } 
  arg2 = static_cast< unsigned long >(val2);
  (arg1)->setMaximumDelay(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Echo_setDelay(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Echo *arg1 = (stk::Echo *) 0 ;
  unsigned long arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Echo_setDelay", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Echo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Echo_setDelay" "', argument " "1"" of type '" "stk::Echo *""'"); 
  }
  arg1 = reinterpret_cast< stk::Echo * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Echo_setDelay" "', argument " "2"" of type '" "unsigned long""'");
  } 
  arg2 = static_cast< unsigned long >(val2);
  (arg1)->setDelay(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Echo_lastOut(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Echo *arg1 = (stk::Echo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  stk::StkFloat result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Echo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Echo_lastOut" "', argument " "1"" of type '" "stk::Echo const *""'"); 
  }
  arg1 = reinterpret_cast< stk::Echo * >(argp1);
  result = (stk::StkFloat)((stk::Echo const *)arg1)->lastOut();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Echo_tick__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Echo *arg1 = (stk::Echo *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Echo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Echo_tick" "', argument " "1"" of type '" "stk::Echo *""'"); 
  }
  arg1 = reinterpret_cast< stk::Echo * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Echo_tick" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  result = (stk::StkFloat)(arg1)->tick(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Echo_tick__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Echo *arg1 = (stk::Echo *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Echo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Echo_tick" "', argument " "1"" of type '" "stk::Echo *""'"); 
  }
  arg1 = reinterpret_cast< stk::Echo * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Echo_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Echo_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Echo_tick" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Echo_tick__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Echo *arg1 = (stk::Echo *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Echo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Echo_tick" "', argument " "1"" of type '" "stk::Echo *""'"); 
  }
  arg1 = reinterpret_cast< stk::Echo * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Echo_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Echo_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Echo_tick__SWIG_3(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Echo *arg1 = (stk::Echo *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  stk::StkFrames *arg3 = 0 ;
  unsigned int arg4 ;
  unsigned int arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  unsigned int val5 ;
  int ecode5 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Echo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Echo_tick" "', argument " "1"" of type '" "stk::Echo *""'"); 
  }
  arg1 = reinterpret_cast< stk::Echo * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Echo_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Echo_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Echo_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Echo_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  arg3 = reinterpret_cast< stk::StkFrames * >(argp3);
  ecode4 = SWIG_AsVal_unsigned_SS_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Echo_tick" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  ecode5 = SWIG_AsVal_unsigned_SS_int(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "Echo_tick" "', argument " "5"" of type '" "unsigned int""'");
  } 
  arg5 = static_cast< unsigned int >(val5);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,*arg3,arg4,arg5);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Echo_tick__SWIG_4(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Echo *arg1 = (stk::Echo *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  stk::StkFrames *arg3 = 0 ;
  unsigned int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Echo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Echo_tick" "', argument " "1"" of type '" "stk::Echo *""'"); 
  }
  arg1 = reinterpret_cast< stk::Echo * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Echo_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Echo_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Echo_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Echo_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  arg3 = reinterpret_cast< stk::StkFrames * >(argp3);
  ecode4 = SWIG_AsVal_unsigned_SS_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Echo_tick" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,*arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Echo_tick__SWIG_5(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Echo *arg1 = (stk::Echo *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  stk::StkFrames *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Echo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Echo_tick" "', argument " "1"" of type '" "stk::Echo *""'"); 
  }
  arg1 = reinterpret_cast< stk::Echo * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Echo_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Echo_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Echo_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Echo_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  arg3 = reinterpret_cast< stk::StkFrames * >(argp3);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,*arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Echo_tick(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[6] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Echo_tick", 0, 5, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Echo, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Echo_tick__SWIG_2(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Echo, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Echo_tick__SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Echo, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_Echo_tick__SWIG_5(self, argc, argv);
        }
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Echo, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Echo_tick__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  if (argc == 4) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Echo, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_Echo_tick__SWIG_4(self, argc, argv);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Echo, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_unsigned_SS_int(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_Echo_tick__SWIG_3(self, argc, argv);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Echo_tick'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::Echo::tick(stk::StkFloat)\n"
    "    stk::Echo::tick(stk::StkFrames &,unsigned int)\n"
    "    stk::Echo::tick(stk::StkFrames &)\n"
    "    stk::Echo::tick(stk::StkFrames &,stk::StkFrames &,unsigned int,unsigned int)\n"
    "    stk::Echo::tick(stk::StkFrames &,stk::StkFrames &,unsigned int)\n"
    "    stk::Echo::tick(stk::StkFrames &,stk::StkFrames &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_Echo(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Echo *arg1 = (stk::Echo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Echo, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Echo" "', argument " "1"" of type '" "stk::Echo *""'"); 
  }
  arg1 = reinterpret_cast< stk::Echo * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Echo_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_stk__Echo, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *Echo_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_Envelope(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Envelope *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_Envelope", 0, 0, 0)) SWIG_fail;
  result = (stk::Envelope *)new stk::Envelope();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__Envelope, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Envelope(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Envelope *arg1 = (stk::Envelope *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Envelope, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Envelope" "', argument " "1"" of type '" "stk::Envelope *""'"); 
  }
  arg1 = reinterpret_cast< stk::Envelope * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Envelope_keyOn__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Envelope *arg1 = (stk::Envelope *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Envelope, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Envelope_keyOn" "', argument " "1"" of type '" "stk::Envelope *""'"); 
  }
  arg1 = reinterpret_cast< stk::Envelope * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Envelope_keyOn" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->keyOn(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Envelope_keyOn__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Envelope *arg1 = (stk::Envelope *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Envelope, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Envelope_keyOn" "', argument " "1"" of type '" "stk::Envelope *""'"); 
  }
  arg1 = reinterpret_cast< stk::Envelope * >(argp1);
  (arg1)->keyOn();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Envelope_keyOn(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Envelope_keyOn", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Envelope, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Envelope_keyOn__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Envelope, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Envelope_keyOn__SWIG_0(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Envelope_keyOn'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::Envelope::keyOn(stk::StkFloat)\n"
    "    stk::Envelope::keyOn()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Envelope_keyOff__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Envelope *arg1 = (stk::Envelope *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Envelope, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Envelope_keyOff" "', argument " "1"" of type '" "stk::Envelope *""'"); 
  }
  arg1 = reinterpret_cast< stk::Envelope * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Envelope_keyOff" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->keyOff(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Envelope_keyOff__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Envelope *arg1 = (stk::Envelope *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Envelope, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Envelope_keyOff" "', argument " "1"" of type '" "stk::Envelope *""'"); 
  }
  arg1 = reinterpret_cast< stk::Envelope * >(argp1);
  (arg1)->keyOff();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Envelope_keyOff(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Envelope_keyOff", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Envelope, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Envelope_keyOff__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Envelope, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Envelope_keyOff__SWIG_0(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Envelope_keyOff'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::Envelope::keyOff(stk::StkFloat)\n"
    "    stk::Envelope::keyOff()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Envelope_setRate(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Envelope *arg1 = (stk::Envelope *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Envelope_setRate", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Envelope, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Envelope_setRate" "', argument " "1"" of type '" "stk::Envelope *""'"); 
  }
  arg1 = reinterpret_cast< stk::Envelope * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Envelope_setRate" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setRate(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Envelope_setTime(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Envelope *arg1 = (stk::Envelope *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Envelope_setTime", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Envelope, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Envelope_setTime" "', argument " "1"" of type '" "stk::Envelope *""'"); 
  }
  arg1 = reinterpret_cast< stk::Envelope * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Envelope_setTime" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setTime(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Envelope_setTarget(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Envelope *arg1 = (stk::Envelope *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Envelope_setTarget", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Envelope, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Envelope_setTarget" "', argument " "1"" of type '" "stk::Envelope *""'"); 
  }
  arg1 = reinterpret_cast< stk::Envelope * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Envelope_setTarget" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setTarget(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Envelope_setValue(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Envelope *arg1 = (stk::Envelope *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Envelope_setValue", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Envelope, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Envelope_setValue" "', argument " "1"" of type '" "stk::Envelope *""'"); 
  }
  arg1 = reinterpret_cast< stk::Envelope * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Envelope_setValue" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setValue(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Envelope_getState(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Envelope *arg1 = (stk::Envelope *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Envelope, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Envelope_getState" "', argument " "1"" of type '" "stk::Envelope const *""'"); 
  }
  arg1 = reinterpret_cast< stk::Envelope * >(argp1);
  result = (int)((stk::Envelope const *)arg1)->getState();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Envelope_lastOut(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Envelope *arg1 = (stk::Envelope *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  stk::StkFloat result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Envelope, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Envelope_lastOut" "', argument " "1"" of type '" "stk::Envelope const *""'"); 
  }
  arg1 = reinterpret_cast< stk::Envelope * >(argp1);
  result = (stk::StkFloat)((stk::Envelope const *)arg1)->lastOut();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Envelope_tick__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Envelope *arg1 = (stk::Envelope *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Envelope, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Envelope_tick" "', argument " "1"" of type '" "stk::Envelope *""'"); 
  }
  arg1 = reinterpret_cast< stk::Envelope * >(argp1);
  result = (stk::StkFloat)(arg1)->tick();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Envelope_tick__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Envelope *arg1 = (stk::Envelope *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Envelope, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Envelope_tick" "', argument " "1"" of type '" "stk::Envelope *""'"); 
  }
  arg1 = reinterpret_cast< stk::Envelope * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Envelope_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Envelope_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Envelope_tick" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Envelope_tick__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Envelope *arg1 = (stk::Envelope *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Envelope, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Envelope_tick" "', argument " "1"" of type '" "stk::Envelope *""'"); 
  }
  arg1 = reinterpret_cast< stk::Envelope * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Envelope_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Envelope_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Envelope_tick(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Envelope_tick", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Envelope, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Envelope_tick__SWIG_0(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Envelope, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Envelope_tick__SWIG_2(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Envelope, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Envelope_tick__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Envelope_tick'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::Envelope::tick()\n"
    "    stk::Envelope::tick(stk::StkFrames &,unsigned int)\n"
    "    stk::Envelope::tick(stk::StkFrames &)\n");
  return 0;
}


SWIGINTERN PyObject *Envelope_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_stk__Envelope, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *Envelope_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_FMVoices(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::FMVoices *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_FMVoices", 0, 0, 0)) SWIG_fail;
  result = (stk::FMVoices *)new stk::FMVoices();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__FMVoices, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_FMVoices(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::FMVoices *arg1 = (stk::FMVoices *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FMVoices, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_FMVoices" "', argument " "1"" of type '" "stk::FMVoices *""'"); 
  }
  arg1 = reinterpret_cast< stk::FMVoices * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FMVoices_setFrequency(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::FMVoices *arg1 = (stk::FMVoices *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "FMVoices_setFrequency", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FMVoices, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FMVoices_setFrequency" "', argument " "1"" of type '" "stk::FMVoices *""'"); 
  }
  arg1 = reinterpret_cast< stk::FMVoices * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FMVoices_setFrequency" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setFrequency(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FMVoices_noteOn(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::FMVoices *arg1 = (stk::FMVoices *) 0 ;
  stk::StkFloat arg2 ;
  stk::StkFloat arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "FMVoices_noteOn", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FMVoices, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FMVoices_noteOn" "', argument " "1"" of type '" "stk::FMVoices *""'"); 
  }
  arg1 = reinterpret_cast< stk::FMVoices * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FMVoices_noteOn" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "FMVoices_noteOn" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  (arg1)->noteOn(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FMVoices_controlChange(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::FMVoices *arg1 = (stk::FMVoices *) 0 ;
  int arg2 ;
  stk::StkFloat arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "FMVoices_controlChange", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FMVoices, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FMVoices_controlChange" "', argument " "1"" of type '" "stk::FMVoices *""'"); 
  }
  arg1 = reinterpret_cast< stk::FMVoices * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FMVoices_controlChange" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "FMVoices_controlChange" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  (arg1)->controlChange(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FMVoices_tick__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::FMVoices *arg1 = (stk::FMVoices *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FMVoices, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FMVoices_tick" "', argument " "1"" of type '" "stk::FMVoices *""'"); 
  }
  arg1 = reinterpret_cast< stk::FMVoices * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FMVoices_tick" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (stk::StkFloat)(arg1)->tick(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FMVoices_tick__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::FMVoices *arg1 = (stk::FMVoices *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FMVoices, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FMVoices_tick" "', argument " "1"" of type '" "stk::FMVoices *""'"); 
  }
  arg1 = reinterpret_cast< stk::FMVoices * >(argp1);
  result = (stk::StkFloat)(arg1)->tick();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FMVoices_tick__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::FMVoices *arg1 = (stk::FMVoices *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FMVoices, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FMVoices_tick" "', argument " "1"" of type '" "stk::FMVoices *""'"); 
  }
  arg1 = reinterpret_cast< stk::FMVoices * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FMVoices_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FMVoices_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "FMVoices_tick" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FMVoices_tick__SWIG_3(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::FMVoices *arg1 = (stk::FMVoices *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FMVoices, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FMVoices_tick" "', argument " "1"" of type '" "stk::FMVoices *""'"); 
  }
  arg1 = reinterpret_cast< stk::FMVoices * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FMVoices_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FMVoices_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FMVoices_tick(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "FMVoices_tick", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__FMVoices, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_FMVoices_tick__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__FMVoices, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_FMVoices_tick__SWIG_3(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__FMVoices, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_FMVoices_tick__SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__FMVoices, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_FMVoices_tick__SWIG_2(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'FMVoices_tick'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::FMVoices::tick(unsigned int)\n"
    "    stk::FMVoices::tick()\n"
    "    stk::FMVoices::tick(stk::StkFrames &,unsigned int)\n"
    "    stk::FMVoices::tick(stk::StkFrames &)\n");
  return 0;
}


SWIGINTERN PyObject *FMVoices_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_stk__FMVoices, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *FMVoices_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_FileRead__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  stk::FileRead *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (stk::FileRead *)new stk::FileRead();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__FileRead, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_FileRead__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::string arg1 ;
  bool arg2 ;
  unsigned int arg3 ;
  stk::Stk::StkFormat arg4 ;
  stk::StkFloat arg5 ;
  void *argp1 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  unsigned long val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  stk::FileRead *result = 0 ;
  
  if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_std__string,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FileRead" "', argument " "1"" of type '" "std::string""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FileRead" "', argument " "1"" of type '" "std::string""'");
    } else {
      std::string * temp = reinterpret_cast< std::string * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  ecode2 = SWIG_AsVal_bool(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_FileRead" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_FileRead" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  ecode4 = SWIG_AsVal_unsigned_SS_long(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_FileRead" "', argument " "4"" of type '" "stk::Stk::StkFormat""'");
  } 
  arg4 = static_cast< stk::Stk::StkFormat >(val4);
  ecode5 = SWIG_AsVal_float(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_FileRead" "', argument " "5"" of type '" "stk::StkFloat""'");
  } 
  arg5 = static_cast< stk::StkFloat >(val5);
  result = (stk::FileRead *)new stk::FileRead(arg1,arg2,arg3,arg4,arg5);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__FileRead, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_FileRead__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::string arg1 ;
  bool arg2 ;
  unsigned int arg3 ;
  stk::Stk::StkFormat arg4 ;
  void *argp1 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  unsigned long val4 ;
  int ecode4 = 0 ;
  stk::FileRead *result = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_std__string,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FileRead" "', argument " "1"" of type '" "std::string""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FileRead" "', argument " "1"" of type '" "std::string""'");
    } else {
      std::string * temp = reinterpret_cast< std::string * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  ecode2 = SWIG_AsVal_bool(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_FileRead" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_FileRead" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  ecode4 = SWIG_AsVal_unsigned_SS_long(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_FileRead" "', argument " "4"" of type '" "stk::Stk::StkFormat""'");
  } 
  arg4 = static_cast< stk::Stk::StkFormat >(val4);
  result = (stk::FileRead *)new stk::FileRead(arg1,arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__FileRead, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_FileRead__SWIG_3(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::string arg1 ;
  bool arg2 ;
  unsigned int arg3 ;
  void *argp1 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  stk::FileRead *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_std__string,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FileRead" "', argument " "1"" of type '" "std::string""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FileRead" "', argument " "1"" of type '" "std::string""'");
    } else {
      std::string * temp = reinterpret_cast< std::string * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  ecode2 = SWIG_AsVal_bool(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_FileRead" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_FileRead" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  result = (stk::FileRead *)new stk::FileRead(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__FileRead, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_FileRead__SWIG_4(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::string arg1 ;
  bool arg2 ;
  void *argp1 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  stk::FileRead *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_std__string,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FileRead" "', argument " "1"" of type '" "std::string""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FileRead" "', argument " "1"" of type '" "std::string""'");
    } else {
      std::string * temp = reinterpret_cast< std::string * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  ecode2 = SWIG_AsVal_bool(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_FileRead" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  result = (stk::FileRead *)new stk::FileRead(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__FileRead, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_FileRead__SWIG_5(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::string arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  stk::FileRead *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_std__string,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FileRead" "', argument " "1"" of type '" "std::string""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FileRead" "', argument " "1"" of type '" "std::string""'");
    } else {
      std::string * temp = reinterpret_cast< std::string * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  result = (stk::FileRead *)new stk::FileRead(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__FileRead, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_FileRead(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[6] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_FileRead", 0, 5, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_FileRead__SWIG_0(self, argc, argv);
  }
  if (argc == 1) {
    int _v = 0;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_std__string, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_FileRead__SWIG_5(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_std__string, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_FileRead__SWIG_4(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_std__string, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_FileRead__SWIG_3(self, argc, argv);
        }
      }
    }
  }
  if (argc == 4) {
    int _v = 0;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_std__string, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_unsigned_SS_long(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_new_FileRead__SWIG_2(self, argc, argv);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v = 0;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_std__string, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_unsigned_SS_long(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_float(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_new_FileRead__SWIG_1(self, argc, argv);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_FileRead'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::FileRead::FileRead()\n"
    "    stk::FileRead::FileRead(std::string,bool,unsigned int,stk::Stk::StkFormat,stk::StkFloat)\n"
    "    stk::FileRead::FileRead(std::string,bool,unsigned int,stk::Stk::StkFormat)\n"
    "    stk::FileRead::FileRead(std::string,bool,unsigned int)\n"
    "    stk::FileRead::FileRead(std::string,bool)\n"
    "    stk::FileRead::FileRead(std::string)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_FileRead(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::FileRead *arg1 = (stk::FileRead *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FileRead, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_FileRead" "', argument " "1"" of type '" "stk::FileRead *""'"); 
  }
  arg1 = reinterpret_cast< stk::FileRead * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileRead_open__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::FileRead *arg1 = (stk::FileRead *) 0 ;
  std::string arg2 ;
  bool arg3 ;
  unsigned int arg4 ;
  stk::Stk::StkFormat arg5 ;
  stk::StkFloat arg6 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  unsigned long val5 ;
  int ecode5 = 0 ;
  float val6 ;
  int ecode6 = 0 ;
  
  if ((nobjs < 6) || (nobjs > 6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FileRead, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileRead_open" "', argument " "1"" of type '" "stk::FileRead *""'"); 
  }
  arg1 = reinterpret_cast< stk::FileRead * >(argp1);
  {
    res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__string,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FileRead_open" "', argument " "2"" of type '" "std::string""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FileRead_open" "', argument " "2"" of type '" "std::string""'");
    } else {
      std::string * temp = reinterpret_cast< std::string * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  ecode3 = SWIG_AsVal_bool(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "FileRead_open" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  ecode4 = SWIG_AsVal_unsigned_SS_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "FileRead_open" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  ecode5 = SWIG_AsVal_unsigned_SS_long(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "FileRead_open" "', argument " "5"" of type '" "stk::Stk::StkFormat""'");
  } 
  arg5 = static_cast< stk::Stk::StkFormat >(val5);
  ecode6 = SWIG_AsVal_float(swig_obj[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "FileRead_open" "', argument " "6"" of type '" "stk::StkFloat""'");
  } 
  arg6 = static_cast< stk::StkFloat >(val6);
  (arg1)->open(arg2,arg3,arg4,arg5,arg6);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileRead_open__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::FileRead *arg1 = (stk::FileRead *) 0 ;
  std::string arg2 ;
  bool arg3 ;
  unsigned int arg4 ;
  stk::Stk::StkFormat arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  unsigned long val5 ;
  int ecode5 = 0 ;
  
  if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FileRead, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileRead_open" "', argument " "1"" of type '" "stk::FileRead *""'"); 
  }
  arg1 = reinterpret_cast< stk::FileRead * >(argp1);
  {
    res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__string,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FileRead_open" "', argument " "2"" of type '" "std::string""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FileRead_open" "', argument " "2"" of type '" "std::string""'");
    } else {
      std::string * temp = reinterpret_cast< std::string * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  ecode3 = SWIG_AsVal_bool(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "FileRead_open" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  ecode4 = SWIG_AsVal_unsigned_SS_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "FileRead_open" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  ecode5 = SWIG_AsVal_unsigned_SS_long(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "FileRead_open" "', argument " "5"" of type '" "stk::Stk::StkFormat""'");
  } 
  arg5 = static_cast< stk::Stk::StkFormat >(val5);
  (arg1)->open(arg2,arg3,arg4,arg5);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileRead_open__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::FileRead *arg1 = (stk::FileRead *) 0 ;
  std::string arg2 ;
  bool arg3 ;
  unsigned int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FileRead, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileRead_open" "', argument " "1"" of type '" "stk::FileRead *""'"); 
  }
  arg1 = reinterpret_cast< stk::FileRead * >(argp1);
  {
    res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__string,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FileRead_open" "', argument " "2"" of type '" "std::string""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FileRead_open" "', argument " "2"" of type '" "std::string""'");
    } else {
      std::string * temp = reinterpret_cast< std::string * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  ecode3 = SWIG_AsVal_bool(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "FileRead_open" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  ecode4 = SWIG_AsVal_unsigned_SS_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "FileRead_open" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  (arg1)->open(arg2,arg3,arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileRead_open__SWIG_3(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::FileRead *arg1 = (stk::FileRead *) 0 ;
  std::string arg2 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FileRead, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileRead_open" "', argument " "1"" of type '" "stk::FileRead *""'"); 
  }
  arg1 = reinterpret_cast< stk::FileRead * >(argp1);
  {
    res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__string,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FileRead_open" "', argument " "2"" of type '" "std::string""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FileRead_open" "', argument " "2"" of type '" "std::string""'");
    } else {
      std::string * temp = reinterpret_cast< std::string * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  ecode3 = SWIG_AsVal_bool(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "FileRead_open" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  (arg1)->open(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileRead_open__SWIG_4(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::FileRead *arg1 = (stk::FileRead *) 0 ;
  std::string arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FileRead, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileRead_open" "', argument " "1"" of type '" "stk::FileRead *""'"); 
  }
  arg1 = reinterpret_cast< stk::FileRead * >(argp1);
  {
    res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__string,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FileRead_open" "', argument " "2"" of type '" "std::string""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FileRead_open" "', argument " "2"" of type '" "std::string""'");
    } else {
      std::string * temp = reinterpret_cast< std::string * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->open(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileRead_open(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[7] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "FileRead_open", 0, 6, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__FileRead, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__string, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_FileRead_open__SWIG_4(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__FileRead, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__string, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_FileRead_open__SWIG_3(self, argc, argv);
        }
      }
    }
  }
  if (argc == 4) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__FileRead, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__string, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_FileRead_open__SWIG_2(self, argc, argv);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__FileRead, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__string, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_unsigned_SS_long(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_FileRead_open__SWIG_1(self, argc, argv);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__FileRead, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__string, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_unsigned_SS_long(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_float(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                return _wrap_FileRead_open__SWIG_0(self, argc, argv);
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'FileRead_open'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::FileRead::open(std::string,bool,unsigned int,stk::Stk::StkFormat,stk::StkFloat)\n"
    "    stk::FileRead::open(std::string,bool,unsigned int,stk::Stk::StkFormat)\n"
    "    stk::FileRead::open(std::string,bool,unsigned int)\n"
    "    stk::FileRead::open(std::string,bool)\n"
    "    stk::FileRead::open(std::string)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_FileRead_close(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::FileRead *arg1 = (stk::FileRead *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FileRead, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileRead_close" "', argument " "1"" of type '" "stk::FileRead *""'"); 
  }
  arg1 = reinterpret_cast< stk::FileRead * >(argp1);
  (arg1)->close();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileRead_isOpen(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::FileRead *arg1 = (stk::FileRead *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FileRead, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileRead_isOpen" "', argument " "1"" of type '" "stk::FileRead *""'"); 
  }
  arg1 = reinterpret_cast< stk::FileRead * >(argp1);
  result = (bool)(arg1)->isOpen();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileRead_fileSize(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::FileRead *arg1 = (stk::FileRead *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned long result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FileRead, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileRead_fileSize" "', argument " "1"" of type '" "stk::FileRead const *""'"); 
  }
  arg1 = reinterpret_cast< stk::FileRead * >(argp1);
  result = (unsigned long)((stk::FileRead const *)arg1)->fileSize();
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileRead_channels(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::FileRead *arg1 = (stk::FileRead *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FileRead, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileRead_channels" "', argument " "1"" of type '" "stk::FileRead const *""'"); 
  }
  arg1 = reinterpret_cast< stk::FileRead * >(argp1);
  result = (unsigned int)((stk::FileRead const *)arg1)->channels();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileRead_format(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::FileRead *arg1 = (stk::FileRead *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  stk::Stk::StkFormat result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FileRead, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileRead_format" "', argument " "1"" of type '" "stk::FileRead const *""'"); 
  }
  arg1 = reinterpret_cast< stk::FileRead * >(argp1);
  result = (stk::Stk::StkFormat)((stk::FileRead const *)arg1)->format();
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileRead_fileRate(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::FileRead *arg1 = (stk::FileRead *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  stk::StkFloat result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FileRead, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileRead_fileRate" "', argument " "1"" of type '" "stk::FileRead const *""'"); 
  }
  arg1 = reinterpret_cast< stk::FileRead * >(argp1);
  result = (stk::StkFloat)((stk::FileRead const *)arg1)->fileRate();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileRead_read__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::FileRead *arg1 = (stk::FileRead *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  unsigned long arg3 ;
  bool arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned long val3 ;
  int ecode3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FileRead, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileRead_read" "', argument " "1"" of type '" "stk::FileRead *""'"); 
  }
  arg1 = reinterpret_cast< stk::FileRead * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FileRead_read" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FileRead_read" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_long(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "FileRead_read" "', argument " "3"" of type '" "unsigned long""'");
  } 
  arg3 = static_cast< unsigned long >(val3);
  ecode4 = SWIG_AsVal_bool(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "FileRead_read" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  (arg1)->read(*arg2,arg3,arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileRead_read__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::FileRead *arg1 = (stk::FileRead *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  unsigned long arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned long val3 ;
  int ecode3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FileRead, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileRead_read" "', argument " "1"" of type '" "stk::FileRead *""'"); 
  }
  arg1 = reinterpret_cast< stk::FileRead * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FileRead_read" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FileRead_read" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_long(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "FileRead_read" "', argument " "3"" of type '" "unsigned long""'");
  } 
  arg3 = static_cast< unsigned long >(val3);
  (arg1)->read(*arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileRead_read__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::FileRead *arg1 = (stk::FileRead *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FileRead, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileRead_read" "', argument " "1"" of type '" "stk::FileRead *""'"); 
  }
  arg1 = reinterpret_cast< stk::FileRead * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FileRead_read" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FileRead_read" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  (arg1)->read(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileRead_read(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "FileRead_read", 0, 4, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__FileRead, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_FileRead_read__SWIG_2(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__FileRead, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_long(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_FileRead_read__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  if (argc == 4) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__FileRead, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_long(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_FileRead_read__SWIG_0(self, argc, argv);
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'FileRead_read'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::FileRead::read(stk::StkFrames &,unsigned long,bool)\n"
    "    stk::FileRead::read(stk::StkFrames &,unsigned long)\n"
    "    stk::FileRead::read(stk::StkFrames &)\n");
  return 0;
}


SWIGINTERN PyObject *FileRead_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_stk__FileRead, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *FileRead_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN int Swig_var_FileWrite_FILE_RAW_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable FileWrite_FILE_RAW is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_FileWrite_FILE_RAW_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(stk::FileWrite::FILE_RAW));
  return pyobj;
}


SWIGINTERN int Swig_var_FileWrite_FILE_WAV_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable FileWrite_FILE_WAV is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_FileWrite_FILE_WAV_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(stk::FileWrite::FILE_WAV));
  return pyobj;
}


SWIGINTERN int Swig_var_FileWrite_FILE_SND_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable FileWrite_FILE_SND is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_FileWrite_FILE_SND_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(stk::FileWrite::FILE_SND));
  return pyobj;
}


SWIGINTERN int Swig_var_FileWrite_FILE_AIF_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable FileWrite_FILE_AIF is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_FileWrite_FILE_AIF_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(stk::FileWrite::FILE_AIF));
  return pyobj;
}


SWIGINTERN int Swig_var_FileWrite_FILE_MAT_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable FileWrite_FILE_MAT is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_FileWrite_FILE_MAT_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(stk::FileWrite::FILE_MAT));
  return pyobj;
}


SWIGINTERN PyObject *_wrap_new_FileWrite__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  stk::FileWrite *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (stk::FileWrite *)new stk::FileWrite();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__FileWrite, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_FileWrite__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::string arg1 ;
  unsigned int arg2 ;
  stk::FileWrite::FILE_TYPE arg3 ;
  stk::Stk::StkFormat arg4 ;
  void *argp1 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  unsigned long val3 ;
  int ecode3 = 0 ;
  unsigned long val4 ;
  int ecode4 = 0 ;
  stk::FileWrite *result = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_std__string,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FileWrite" "', argument " "1"" of type '" "std::string""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FileWrite" "', argument " "1"" of type '" "std::string""'");
    } else {
      std::string * temp = reinterpret_cast< std::string * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_FileWrite" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_long(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_FileWrite" "', argument " "3"" of type '" "stk::FileWrite::FILE_TYPE""'");
  } 
  arg3 = static_cast< stk::FileWrite::FILE_TYPE >(val3);
  ecode4 = SWIG_AsVal_unsigned_SS_long(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_FileWrite" "', argument " "4"" of type '" "stk::Stk::StkFormat""'");
  } 
  arg4 = static_cast< stk::Stk::StkFormat >(val4);
  result = (stk::FileWrite *)new stk::FileWrite(arg1,arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__FileWrite, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_FileWrite__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::string arg1 ;
  unsigned int arg2 ;
  stk::FileWrite::FILE_TYPE arg3 ;
  void *argp1 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  unsigned long val3 ;
  int ecode3 = 0 ;
  stk::FileWrite *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_std__string,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FileWrite" "', argument " "1"" of type '" "std::string""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FileWrite" "', argument " "1"" of type '" "std::string""'");
    } else {
      std::string * temp = reinterpret_cast< std::string * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_FileWrite" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_long(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_FileWrite" "', argument " "3"" of type '" "stk::FileWrite::FILE_TYPE""'");
  } 
  arg3 = static_cast< stk::FileWrite::FILE_TYPE >(val3);
  result = (stk::FileWrite *)new stk::FileWrite(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__FileWrite, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_FileWrite__SWIG_3(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::string arg1 ;
  unsigned int arg2 ;
  void *argp1 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  stk::FileWrite *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_std__string,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FileWrite" "', argument " "1"" of type '" "std::string""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FileWrite" "', argument " "1"" of type '" "std::string""'");
    } else {
      std::string * temp = reinterpret_cast< std::string * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_FileWrite" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (stk::FileWrite *)new stk::FileWrite(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__FileWrite, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_FileWrite__SWIG_4(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::string arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  stk::FileWrite *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_std__string,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FileWrite" "', argument " "1"" of type '" "std::string""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FileWrite" "', argument " "1"" of type '" "std::string""'");
    } else {
      std::string * temp = reinterpret_cast< std::string * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  result = (stk::FileWrite *)new stk::FileWrite(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__FileWrite, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_FileWrite(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_FileWrite", 0, 4, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_FileWrite__SWIG_0(self, argc, argv);
  }
  if (argc == 1) {
    int _v = 0;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_std__string, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_FileWrite__SWIG_4(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_std__string, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_FileWrite__SWIG_3(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_std__string, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_long(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_FileWrite__SWIG_2(self, argc, argv);
        }
      }
    }
  }
  if (argc == 4) {
    int _v = 0;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_std__string, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_long(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_unsigned_SS_long(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_new_FileWrite__SWIG_1(self, argc, argv);
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_FileWrite'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::FileWrite::FileWrite()\n"
    "    stk::FileWrite::FileWrite(std::string,unsigned int,stk::FileWrite::FILE_TYPE,stk::Stk::StkFormat)\n"
    "    stk::FileWrite::FileWrite(std::string,unsigned int,stk::FileWrite::FILE_TYPE)\n"
    "    stk::FileWrite::FileWrite(std::string,unsigned int)\n"
    "    stk::FileWrite::FileWrite(std::string)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_FileWrite(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::FileWrite *arg1 = (stk::FileWrite *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FileWrite, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_FileWrite" "', argument " "1"" of type '" "stk::FileWrite *""'"); 
  }
  arg1 = reinterpret_cast< stk::FileWrite * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileWrite_open__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::FileWrite *arg1 = (stk::FileWrite *) 0 ;
  std::string arg2 ;
  unsigned int arg3 ;
  stk::FileWrite::FILE_TYPE arg4 ;
  stk::Stk::StkFormat arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  unsigned long val4 ;
  int ecode4 = 0 ;
  unsigned long val5 ;
  int ecode5 = 0 ;
  
  if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FileWrite, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileWrite_open" "', argument " "1"" of type '" "stk::FileWrite *""'"); 
  }
  arg1 = reinterpret_cast< stk::FileWrite * >(argp1);
  {
    res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__string,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FileWrite_open" "', argument " "2"" of type '" "std::string""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FileWrite_open" "', argument " "2"" of type '" "std::string""'");
    } else {
      std::string * temp = reinterpret_cast< std::string * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "FileWrite_open" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  ecode4 = SWIG_AsVal_unsigned_SS_long(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "FileWrite_open" "', argument " "4"" of type '" "stk::FileWrite::FILE_TYPE""'");
  } 
  arg4 = static_cast< stk::FileWrite::FILE_TYPE >(val4);
  ecode5 = SWIG_AsVal_unsigned_SS_long(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "FileWrite_open" "', argument " "5"" of type '" "stk::Stk::StkFormat""'");
  } 
  arg5 = static_cast< stk::Stk::StkFormat >(val5);
  (arg1)->open(arg2,arg3,arg4,arg5);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileWrite_open__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::FileWrite *arg1 = (stk::FileWrite *) 0 ;
  std::string arg2 ;
  unsigned int arg3 ;
  stk::FileWrite::FILE_TYPE arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  unsigned long val4 ;
  int ecode4 = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FileWrite, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileWrite_open" "', argument " "1"" of type '" "stk::FileWrite *""'"); 
  }
  arg1 = reinterpret_cast< stk::FileWrite * >(argp1);
  {
    res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__string,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FileWrite_open" "', argument " "2"" of type '" "std::string""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FileWrite_open" "', argument " "2"" of type '" "std::string""'");
    } else {
      std::string * temp = reinterpret_cast< std::string * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "FileWrite_open" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  ecode4 = SWIG_AsVal_unsigned_SS_long(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "FileWrite_open" "', argument " "4"" of type '" "stk::FileWrite::FILE_TYPE""'");
  } 
  arg4 = static_cast< stk::FileWrite::FILE_TYPE >(val4);
  (arg1)->open(arg2,arg3,arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileWrite_open__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::FileWrite *arg1 = (stk::FileWrite *) 0 ;
  std::string arg2 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FileWrite, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileWrite_open" "', argument " "1"" of type '" "stk::FileWrite *""'"); 
  }
  arg1 = reinterpret_cast< stk::FileWrite * >(argp1);
  {
    res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__string,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FileWrite_open" "', argument " "2"" of type '" "std::string""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FileWrite_open" "', argument " "2"" of type '" "std::string""'");
    } else {
      std::string * temp = reinterpret_cast< std::string * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "FileWrite_open" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  (arg1)->open(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileWrite_open__SWIG_3(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::FileWrite *arg1 = (stk::FileWrite *) 0 ;
  std::string arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FileWrite, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileWrite_open" "', argument " "1"" of type '" "stk::FileWrite *""'"); 
  }
  arg1 = reinterpret_cast< stk::FileWrite * >(argp1);
  {
    res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__string,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FileWrite_open" "', argument " "2"" of type '" "std::string""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FileWrite_open" "', argument " "2"" of type '" "std::string""'");
    } else {
      std::string * temp = reinterpret_cast< std::string * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->open(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileWrite_open(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[6] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "FileWrite_open", 0, 5, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__FileWrite, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__string, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_FileWrite_open__SWIG_3(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__FileWrite, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__string, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_FileWrite_open__SWIG_2(self, argc, argv);
        }
      }
    }
  }
  if (argc == 4) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__FileWrite, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__string, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_unsigned_SS_long(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_FileWrite_open__SWIG_1(self, argc, argv);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__FileWrite, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__string, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_unsigned_SS_long(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_unsigned_SS_long(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_FileWrite_open__SWIG_0(self, argc, argv);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'FileWrite_open'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::FileWrite::open(std::string,unsigned int,stk::FileWrite::FILE_TYPE,stk::Stk::StkFormat)\n"
    "    stk::FileWrite::open(std::string,unsigned int,stk::FileWrite::FILE_TYPE)\n"
    "    stk::FileWrite::open(std::string,unsigned int)\n"
    "    stk::FileWrite::open(std::string)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_FileWrite_close(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::FileWrite *arg1 = (stk::FileWrite *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FileWrite, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileWrite_close" "', argument " "1"" of type '" "stk::FileWrite *""'"); 
  }
  arg1 = reinterpret_cast< stk::FileWrite * >(argp1);
  (arg1)->close();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileWrite_isOpen(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::FileWrite *arg1 = (stk::FileWrite *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FileWrite, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileWrite_isOpen" "', argument " "1"" of type '" "stk::FileWrite *""'"); 
  }
  arg1 = reinterpret_cast< stk::FileWrite * >(argp1);
  result = (bool)(arg1)->isOpen();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileWrite_write(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::FileWrite *arg1 = (stk::FileWrite *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "FileWrite_write", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FileWrite, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileWrite_write" "', argument " "1"" of type '" "stk::FileWrite *""'"); 
  }
  arg1 = reinterpret_cast< stk::FileWrite * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FileWrite_write" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FileWrite_write" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  (arg1)->write(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *FileWrite_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_stk__FileWrite, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *FileWrite_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_FileWvIn__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  unsigned long arg1 ;
  unsigned long arg2 ;
  unsigned long val1 ;
  int ecode1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  stk::FileWvIn *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_FileWvIn" "', argument " "1"" of type '" "unsigned long""'");
  } 
  arg1 = static_cast< unsigned long >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_FileWvIn" "', argument " "2"" of type '" "unsigned long""'");
  } 
  arg2 = static_cast< unsigned long >(val2);
  result = (stk::FileWvIn *)new stk::FileWvIn(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__FileWvIn, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_FileWvIn__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  unsigned long arg1 ;
  unsigned long val1 ;
  int ecode1 = 0 ;
  stk::FileWvIn *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_FileWvIn" "', argument " "1"" of type '" "unsigned long""'");
  } 
  arg1 = static_cast< unsigned long >(val1);
  result = (stk::FileWvIn *)new stk::FileWvIn(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__FileWvIn, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_FileWvIn__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  stk::FileWvIn *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (stk::FileWvIn *)new stk::FileWvIn();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__FileWvIn, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_FileWvIn__SWIG_3(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::string arg1 ;
  bool arg2 ;
  bool arg3 ;
  unsigned long arg4 ;
  unsigned long arg5 ;
  bool arg6 ;
  void *argp1 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  unsigned long val4 ;
  int ecode4 = 0 ;
  unsigned long val5 ;
  int ecode5 = 0 ;
  bool val6 ;
  int ecode6 = 0 ;
  stk::FileWvIn *result = 0 ;
  
  if ((nobjs < 6) || (nobjs > 6)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_std__string,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FileWvIn" "', argument " "1"" of type '" "std::string""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FileWvIn" "', argument " "1"" of type '" "std::string""'");
    } else {
      std::string * temp = reinterpret_cast< std::string * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  ecode2 = SWIG_AsVal_bool(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_FileWvIn" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  ecode3 = SWIG_AsVal_bool(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_FileWvIn" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  ecode4 = SWIG_AsVal_unsigned_SS_long(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_FileWvIn" "', argument " "4"" of type '" "unsigned long""'");
  } 
  arg4 = static_cast< unsigned long >(val4);
  ecode5 = SWIG_AsVal_unsigned_SS_long(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_FileWvIn" "', argument " "5"" of type '" "unsigned long""'");
  } 
  arg5 = static_cast< unsigned long >(val5);
  ecode6 = SWIG_AsVal_bool(swig_obj[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_FileWvIn" "', argument " "6"" of type '" "bool""'");
  } 
  arg6 = static_cast< bool >(val6);
  result = (stk::FileWvIn *)new stk::FileWvIn(arg1,arg2,arg3,arg4,arg5,arg6);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__FileWvIn, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_FileWvIn__SWIG_4(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::string arg1 ;
  bool arg2 ;
  bool arg3 ;
  unsigned long arg4 ;
  unsigned long arg5 ;
  void *argp1 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  unsigned long val4 ;
  int ecode4 = 0 ;
  unsigned long val5 ;
  int ecode5 = 0 ;
  stk::FileWvIn *result = 0 ;
  
  if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_std__string,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FileWvIn" "', argument " "1"" of type '" "std::string""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FileWvIn" "', argument " "1"" of type '" "std::string""'");
    } else {
      std::string * temp = reinterpret_cast< std::string * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  ecode2 = SWIG_AsVal_bool(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_FileWvIn" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  ecode3 = SWIG_AsVal_bool(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_FileWvIn" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  ecode4 = SWIG_AsVal_unsigned_SS_long(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_FileWvIn" "', argument " "4"" of type '" "unsigned long""'");
  } 
  arg4 = static_cast< unsigned long >(val4);
  ecode5 = SWIG_AsVal_unsigned_SS_long(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_FileWvIn" "', argument " "5"" of type '" "unsigned long""'");
  } 
  arg5 = static_cast< unsigned long >(val5);
  result = (stk::FileWvIn *)new stk::FileWvIn(arg1,arg2,arg3,arg4,arg5);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__FileWvIn, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_FileWvIn__SWIG_5(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::string arg1 ;
  bool arg2 ;
  bool arg3 ;
  unsigned long arg4 ;
  void *argp1 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  unsigned long val4 ;
  int ecode4 = 0 ;
  stk::FileWvIn *result = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_std__string,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FileWvIn" "', argument " "1"" of type '" "std::string""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FileWvIn" "', argument " "1"" of type '" "std::string""'");
    } else {
      std::string * temp = reinterpret_cast< std::string * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  ecode2 = SWIG_AsVal_bool(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_FileWvIn" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  ecode3 = SWIG_AsVal_bool(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_FileWvIn" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  ecode4 = SWIG_AsVal_unsigned_SS_long(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_FileWvIn" "', argument " "4"" of type '" "unsigned long""'");
  } 
  arg4 = static_cast< unsigned long >(val4);
  result = (stk::FileWvIn *)new stk::FileWvIn(arg1,arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__FileWvIn, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_FileWvIn__SWIG_6(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::string arg1 ;
  bool arg2 ;
  bool arg3 ;
  void *argp1 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  stk::FileWvIn *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_std__string,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FileWvIn" "', argument " "1"" of type '" "std::string""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FileWvIn" "', argument " "1"" of type '" "std::string""'");
    } else {
      std::string * temp = reinterpret_cast< std::string * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  ecode2 = SWIG_AsVal_bool(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_FileWvIn" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  ecode3 = SWIG_AsVal_bool(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_FileWvIn" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  result = (stk::FileWvIn *)new stk::FileWvIn(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__FileWvIn, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_FileWvIn__SWIG_7(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::string arg1 ;
  bool arg2 ;
  void *argp1 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  stk::FileWvIn *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_std__string,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FileWvIn" "', argument " "1"" of type '" "std::string""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FileWvIn" "', argument " "1"" of type '" "std::string""'");
    } else {
      std::string * temp = reinterpret_cast< std::string * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  ecode2 = SWIG_AsVal_bool(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_FileWvIn" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  result = (stk::FileWvIn *)new stk::FileWvIn(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__FileWvIn, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_FileWvIn__SWIG_8(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::string arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  stk::FileWvIn *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_std__string,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FileWvIn" "', argument " "1"" of type '" "std::string""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FileWvIn" "', argument " "1"" of type '" "std::string""'");
    } else {
      std::string * temp = reinterpret_cast< std::string * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  result = (stk::FileWvIn *)new stk::FileWvIn(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__FileWvIn, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_FileWvIn(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[7] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_FileWvIn", 0, 6, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_FileWvIn__SWIG_2(self, argc, argv);
  }
  if (argc == 1) {
    int _v = 0;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_std__string, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_FileWvIn__SWIG_8(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v = 0;
    {
      int res = SWIG_AsVal_unsigned_SS_long(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_FileWvIn__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_std__string, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_FileWvIn__SWIG_7(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v = 0;
    {
      int res = SWIG_AsVal_unsigned_SS_long(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_long(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_FileWvIn__SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_std__string, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_FileWvIn__SWIG_6(self, argc, argv);
        }
      }
    }
  }
  if (argc == 4) {
    int _v = 0;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_std__string, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_unsigned_SS_long(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_new_FileWvIn__SWIG_5(self, argc, argv);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v = 0;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_std__string, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_unsigned_SS_long(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_unsigned_SS_long(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_new_FileWvIn__SWIG_4(self, argc, argv);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v = 0;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_std__string, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_unsigned_SS_long(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_unsigned_SS_long(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_bool(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                return _wrap_new_FileWvIn__SWIG_3(self, argc, argv);
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_FileWvIn'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::FileWvIn::FileWvIn(unsigned long,unsigned long)\n"
    "    stk::FileWvIn::FileWvIn(unsigned long)\n"
    "    stk::FileWvIn::FileWvIn()\n"
    "    stk::FileWvIn::FileWvIn(std::string,bool,bool,unsigned long,unsigned long,bool)\n"
    "    stk::FileWvIn::FileWvIn(std::string,bool,bool,unsigned long,unsigned long)\n"
    "    stk::FileWvIn::FileWvIn(std::string,bool,bool,unsigned long)\n"
    "    stk::FileWvIn::FileWvIn(std::string,bool,bool)\n"
    "    stk::FileWvIn::FileWvIn(std::string,bool)\n"
    "    stk::FileWvIn::FileWvIn(std::string)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_FileWvIn(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::FileWvIn *arg1 = (stk::FileWvIn *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FileWvIn, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_FileWvIn" "', argument " "1"" of type '" "stk::FileWvIn *""'"); 
  }
  arg1 = reinterpret_cast< stk::FileWvIn * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileWvIn_openFile__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::FileWvIn *arg1 = (stk::FileWvIn *) 0 ;
  std::string arg2 ;
  bool arg3 ;
  bool arg4 ;
  bool arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  
  if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FileWvIn, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileWvIn_openFile" "', argument " "1"" of type '" "stk::FileWvIn *""'"); 
  }
  arg1 = reinterpret_cast< stk::FileWvIn * >(argp1);
  {
    res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__string,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FileWvIn_openFile" "', argument " "2"" of type '" "std::string""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FileWvIn_openFile" "', argument " "2"" of type '" "std::string""'");
    } else {
      std::string * temp = reinterpret_cast< std::string * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  ecode3 = SWIG_AsVal_bool(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "FileWvIn_openFile" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  ecode4 = SWIG_AsVal_bool(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "FileWvIn_openFile" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  ecode5 = SWIG_AsVal_bool(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "FileWvIn_openFile" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  (arg1)->openFile(arg2,arg3,arg4,arg5);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileWvIn_openFile__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::FileWvIn *arg1 = (stk::FileWvIn *) 0 ;
  std::string arg2 ;
  bool arg3 ;
  bool arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FileWvIn, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileWvIn_openFile" "', argument " "1"" of type '" "stk::FileWvIn *""'"); 
  }
  arg1 = reinterpret_cast< stk::FileWvIn * >(argp1);
  {
    res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__string,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FileWvIn_openFile" "', argument " "2"" of type '" "std::string""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FileWvIn_openFile" "', argument " "2"" of type '" "std::string""'");
    } else {
      std::string * temp = reinterpret_cast< std::string * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  ecode3 = SWIG_AsVal_bool(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "FileWvIn_openFile" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  ecode4 = SWIG_AsVal_bool(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "FileWvIn_openFile" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  (arg1)->openFile(arg2,arg3,arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileWvIn_openFile__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::FileWvIn *arg1 = (stk::FileWvIn *) 0 ;
  std::string arg2 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FileWvIn, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileWvIn_openFile" "', argument " "1"" of type '" "stk::FileWvIn *""'"); 
  }
  arg1 = reinterpret_cast< stk::FileWvIn * >(argp1);
  {
    res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__string,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FileWvIn_openFile" "', argument " "2"" of type '" "std::string""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FileWvIn_openFile" "', argument " "2"" of type '" "std::string""'");
    } else {
      std::string * temp = reinterpret_cast< std::string * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  ecode3 = SWIG_AsVal_bool(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "FileWvIn_openFile" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  (arg1)->openFile(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileWvIn_openFile__SWIG_3(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::FileWvIn *arg1 = (stk::FileWvIn *) 0 ;
  std::string arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FileWvIn, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileWvIn_openFile" "', argument " "1"" of type '" "stk::FileWvIn *""'"); 
  }
  arg1 = reinterpret_cast< stk::FileWvIn * >(argp1);
  {
    res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__string,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FileWvIn_openFile" "', argument " "2"" of type '" "std::string""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FileWvIn_openFile" "', argument " "2"" of type '" "std::string""'");
    } else {
      std::string * temp = reinterpret_cast< std::string * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->openFile(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileWvIn_openFile(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[6] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "FileWvIn_openFile", 0, 5, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__FileWvIn, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__string, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_FileWvIn_openFile__SWIG_3(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__FileWvIn, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__string, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_FileWvIn_openFile__SWIG_2(self, argc, argv);
        }
      }
    }
  }
  if (argc == 4) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__FileWvIn, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__string, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_FileWvIn_openFile__SWIG_1(self, argc, argv);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__FileWvIn, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__string, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_FileWvIn_openFile__SWIG_0(self, argc, argv);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'FileWvIn_openFile'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::FileWvIn::openFile(std::string,bool,bool,bool)\n"
    "    stk::FileWvIn::openFile(std::string,bool,bool)\n"
    "    stk::FileWvIn::openFile(std::string,bool)\n"
    "    stk::FileWvIn::openFile(std::string)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_FileWvIn_closeFile(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::FileWvIn *arg1 = (stk::FileWvIn *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FileWvIn, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileWvIn_closeFile" "', argument " "1"" of type '" "stk::FileWvIn *""'"); 
  }
  arg1 = reinterpret_cast< stk::FileWvIn * >(argp1);
  (arg1)->closeFile();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileWvIn_reset(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::FileWvIn *arg1 = (stk::FileWvIn *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FileWvIn, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileWvIn_reset" "', argument " "1"" of type '" "stk::FileWvIn *""'"); 
  }
  arg1 = reinterpret_cast< stk::FileWvIn * >(argp1);
  (arg1)->reset();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileWvIn_normalize__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::FileWvIn *arg1 = (stk::FileWvIn *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FileWvIn, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileWvIn_normalize" "', argument " "1"" of type '" "stk::FileWvIn *""'"); 
  }
  arg1 = reinterpret_cast< stk::FileWvIn * >(argp1);
  (arg1)->normalize();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileWvIn_normalize__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::FileWvIn *arg1 = (stk::FileWvIn *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FileWvIn, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileWvIn_normalize" "', argument " "1"" of type '" "stk::FileWvIn *""'"); 
  }
  arg1 = reinterpret_cast< stk::FileWvIn * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FileWvIn_normalize" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->normalize(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileWvIn_normalize(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "FileWvIn_normalize", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__FileWvIn, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_FileWvIn_normalize__SWIG_0(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__FileWvIn, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_FileWvIn_normalize__SWIG_1(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'FileWvIn_normalize'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::FileWvIn::normalize()\n"
    "    stk::FileWvIn::normalize(stk::StkFloat)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_FileWvIn_getSize(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::FileWvIn *arg1 = (stk::FileWvIn *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned long result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FileWvIn, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileWvIn_getSize" "', argument " "1"" of type '" "stk::FileWvIn const *""'"); 
  }
  arg1 = reinterpret_cast< stk::FileWvIn * >(argp1);
  result = (unsigned long)((stk::FileWvIn const *)arg1)->getSize();
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileWvIn_getFileRate(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::FileWvIn *arg1 = (stk::FileWvIn *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  stk::StkFloat result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FileWvIn, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileWvIn_getFileRate" "', argument " "1"" of type '" "stk::FileWvIn const *""'"); 
  }
  arg1 = reinterpret_cast< stk::FileWvIn * >(argp1);
  result = (stk::StkFloat)((stk::FileWvIn const *)arg1)->getFileRate();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileWvIn_isOpen(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::FileWvIn *arg1 = (stk::FileWvIn *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FileWvIn, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileWvIn_isOpen" "', argument " "1"" of type '" "stk::FileWvIn *""'"); 
  }
  arg1 = reinterpret_cast< stk::FileWvIn * >(argp1);
  result = (bool)(arg1)->isOpen();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileWvIn_isFinished(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::FileWvIn *arg1 = (stk::FileWvIn *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FileWvIn, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileWvIn_isFinished" "', argument " "1"" of type '" "stk::FileWvIn const *""'"); 
  }
  arg1 = reinterpret_cast< stk::FileWvIn * >(argp1);
  result = (bool)((stk::FileWvIn const *)arg1)->isFinished();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileWvIn_setRate(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::FileWvIn *arg1 = (stk::FileWvIn *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "FileWvIn_setRate", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FileWvIn, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileWvIn_setRate" "', argument " "1"" of type '" "stk::FileWvIn *""'"); 
  }
  arg1 = reinterpret_cast< stk::FileWvIn * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FileWvIn_setRate" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setRate(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileWvIn_addTime(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::FileWvIn *arg1 = (stk::FileWvIn *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "FileWvIn_addTime", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FileWvIn, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileWvIn_addTime" "', argument " "1"" of type '" "stk::FileWvIn *""'"); 
  }
  arg1 = reinterpret_cast< stk::FileWvIn * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FileWvIn_addTime" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->addTime(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileWvIn_setInterpolate(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::FileWvIn *arg1 = (stk::FileWvIn *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "FileWvIn_setInterpolate", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FileWvIn, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileWvIn_setInterpolate" "', argument " "1"" of type '" "stk::FileWvIn *""'"); 
  }
  arg1 = reinterpret_cast< stk::FileWvIn * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FileWvIn_setInterpolate" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->setInterpolate(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileWvIn_lastOut__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::FileWvIn *arg1 = (stk::FileWvIn *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FileWvIn, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileWvIn_lastOut" "', argument " "1"" of type '" "stk::FileWvIn *""'"); 
  }
  arg1 = reinterpret_cast< stk::FileWvIn * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FileWvIn_lastOut" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (stk::StkFloat)(arg1)->lastOut(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileWvIn_lastOut__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::FileWvIn *arg1 = (stk::FileWvIn *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FileWvIn, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileWvIn_lastOut" "', argument " "1"" of type '" "stk::FileWvIn *""'"); 
  }
  arg1 = reinterpret_cast< stk::FileWvIn * >(argp1);
  result = (stk::StkFloat)(arg1)->lastOut();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileWvIn_lastOut(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "FileWvIn_lastOut", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__FileWvIn, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_FileWvIn_lastOut__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__FileWvIn, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_FileWvIn_lastOut__SWIG_0(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'FileWvIn_lastOut'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::FileWvIn::lastOut(unsigned int)\n"
    "    stk::FileWvIn::lastOut()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_FileWvIn_tick__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::FileWvIn *arg1 = (stk::FileWvIn *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FileWvIn, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileWvIn_tick" "', argument " "1"" of type '" "stk::FileWvIn *""'"); 
  }
  arg1 = reinterpret_cast< stk::FileWvIn * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FileWvIn_tick" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (stk::StkFloat)(arg1)->tick(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileWvIn_tick__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::FileWvIn *arg1 = (stk::FileWvIn *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FileWvIn, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileWvIn_tick" "', argument " "1"" of type '" "stk::FileWvIn *""'"); 
  }
  arg1 = reinterpret_cast< stk::FileWvIn * >(argp1);
  result = (stk::StkFloat)(arg1)->tick();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileWvIn_tick__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::FileWvIn *arg1 = (stk::FileWvIn *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FileWvIn, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileWvIn_tick" "', argument " "1"" of type '" "stk::FileWvIn *""'"); 
  }
  arg1 = reinterpret_cast< stk::FileWvIn * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FileWvIn_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FileWvIn_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "FileWvIn_tick" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileWvIn_tick__SWIG_3(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::FileWvIn *arg1 = (stk::FileWvIn *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FileWvIn, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileWvIn_tick" "', argument " "1"" of type '" "stk::FileWvIn *""'"); 
  }
  arg1 = reinterpret_cast< stk::FileWvIn * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FileWvIn_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FileWvIn_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileWvIn_tick(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "FileWvIn_tick", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__FileWvIn, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_FileWvIn_tick__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__FileWvIn, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_FileWvIn_tick__SWIG_3(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__FileWvIn, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_FileWvIn_tick__SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__FileWvIn, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_FileWvIn_tick__SWIG_2(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'FileWvIn_tick'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::FileWvIn::tick(unsigned int)\n"
    "    stk::FileWvIn::tick()\n"
    "    stk::FileWvIn::tick(stk::StkFrames &,unsigned int)\n"
    "    stk::FileWvIn::tick(stk::StkFrames &)\n");
  return 0;
}


SWIGINTERN PyObject *FileWvIn_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_stk__FileWvIn, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *FileWvIn_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_FileWvOut__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  stk::FileWvOut *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_FileWvOut" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  result = (stk::FileWvOut *)new stk::FileWvOut(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__FileWvOut, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_FileWvOut__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  stk::FileWvOut *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (stk::FileWvOut *)new stk::FileWvOut();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__FileWvOut, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_FileWvOut__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::string arg1 ;
  unsigned int arg2 ;
  stk::FileWrite::FILE_TYPE arg3 ;
  stk::Stk::StkFormat arg4 ;
  unsigned int arg5 ;
  void *argp1 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  unsigned long val3 ;
  int ecode3 = 0 ;
  unsigned long val4 ;
  int ecode4 = 0 ;
  unsigned int val5 ;
  int ecode5 = 0 ;
  stk::FileWvOut *result = 0 ;
  
  if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_std__string,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FileWvOut" "', argument " "1"" of type '" "std::string""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FileWvOut" "', argument " "1"" of type '" "std::string""'");
    } else {
      std::string * temp = reinterpret_cast< std::string * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_FileWvOut" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_long(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_FileWvOut" "', argument " "3"" of type '" "stk::FileWrite::FILE_TYPE""'");
  } 
  arg3 = static_cast< stk::FileWrite::FILE_TYPE >(val3);
  ecode4 = SWIG_AsVal_unsigned_SS_long(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_FileWvOut" "', argument " "4"" of type '" "stk::Stk::StkFormat""'");
  } 
  arg4 = static_cast< stk::Stk::StkFormat >(val4);
  ecode5 = SWIG_AsVal_unsigned_SS_int(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_FileWvOut" "', argument " "5"" of type '" "unsigned int""'");
  } 
  arg5 = static_cast< unsigned int >(val5);
  result = (stk::FileWvOut *)new stk::FileWvOut(arg1,arg2,arg3,arg4,arg5);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__FileWvOut, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_FileWvOut__SWIG_3(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::string arg1 ;
  unsigned int arg2 ;
  stk::FileWrite::FILE_TYPE arg3 ;
  stk::Stk::StkFormat arg4 ;
  void *argp1 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  unsigned long val3 ;
  int ecode3 = 0 ;
  unsigned long val4 ;
  int ecode4 = 0 ;
  stk::FileWvOut *result = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_std__string,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FileWvOut" "', argument " "1"" of type '" "std::string""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FileWvOut" "', argument " "1"" of type '" "std::string""'");
    } else {
      std::string * temp = reinterpret_cast< std::string * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_FileWvOut" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_long(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_FileWvOut" "', argument " "3"" of type '" "stk::FileWrite::FILE_TYPE""'");
  } 
  arg3 = static_cast< stk::FileWrite::FILE_TYPE >(val3);
  ecode4 = SWIG_AsVal_unsigned_SS_long(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_FileWvOut" "', argument " "4"" of type '" "stk::Stk::StkFormat""'");
  } 
  arg4 = static_cast< stk::Stk::StkFormat >(val4);
  result = (stk::FileWvOut *)new stk::FileWvOut(arg1,arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__FileWvOut, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_FileWvOut__SWIG_4(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::string arg1 ;
  unsigned int arg2 ;
  stk::FileWrite::FILE_TYPE arg3 ;
  void *argp1 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  unsigned long val3 ;
  int ecode3 = 0 ;
  stk::FileWvOut *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_std__string,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FileWvOut" "', argument " "1"" of type '" "std::string""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FileWvOut" "', argument " "1"" of type '" "std::string""'");
    } else {
      std::string * temp = reinterpret_cast< std::string * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_FileWvOut" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_long(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_FileWvOut" "', argument " "3"" of type '" "stk::FileWrite::FILE_TYPE""'");
  } 
  arg3 = static_cast< stk::FileWrite::FILE_TYPE >(val3);
  result = (stk::FileWvOut *)new stk::FileWvOut(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__FileWvOut, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_FileWvOut__SWIG_5(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::string arg1 ;
  unsigned int arg2 ;
  void *argp1 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  stk::FileWvOut *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_std__string,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FileWvOut" "', argument " "1"" of type '" "std::string""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FileWvOut" "', argument " "1"" of type '" "std::string""'");
    } else {
      std::string * temp = reinterpret_cast< std::string * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_FileWvOut" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (stk::FileWvOut *)new stk::FileWvOut(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__FileWvOut, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_FileWvOut__SWIG_6(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::string arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  stk::FileWvOut *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_std__string,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FileWvOut" "', argument " "1"" of type '" "std::string""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FileWvOut" "', argument " "1"" of type '" "std::string""'");
    } else {
      std::string * temp = reinterpret_cast< std::string * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  result = (stk::FileWvOut *)new stk::FileWvOut(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__FileWvOut, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_FileWvOut(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[6] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_FileWvOut", 0, 5, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_FileWvOut__SWIG_1(self, argc, argv);
  }
  if (argc == 1) {
    int _v = 0;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_std__string, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_FileWvOut__SWIG_6(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v = 0;
    {
      int res = SWIG_AsVal_unsigned_SS_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_FileWvOut__SWIG_0(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_std__string, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_FileWvOut__SWIG_5(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_std__string, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_long(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_FileWvOut__SWIG_4(self, argc, argv);
        }
      }
    }
  }
  if (argc == 4) {
    int _v = 0;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_std__string, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_long(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_unsigned_SS_long(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_new_FileWvOut__SWIG_3(self, argc, argv);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v = 0;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_std__string, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_long(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_unsigned_SS_long(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_unsigned_SS_int(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_new_FileWvOut__SWIG_2(self, argc, argv);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_FileWvOut'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::FileWvOut::FileWvOut(unsigned int)\n"
    "    stk::FileWvOut::FileWvOut()\n"
    "    stk::FileWvOut::FileWvOut(std::string,unsigned int,stk::FileWrite::FILE_TYPE,stk::Stk::StkFormat,unsigned int)\n"
    "    stk::FileWvOut::FileWvOut(std::string,unsigned int,stk::FileWrite::FILE_TYPE,stk::Stk::StkFormat)\n"
    "    stk::FileWvOut::FileWvOut(std::string,unsigned int,stk::FileWrite::FILE_TYPE)\n"
    "    stk::FileWvOut::FileWvOut(std::string,unsigned int)\n"
    "    stk::FileWvOut::FileWvOut(std::string)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_FileWvOut(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::FileWvOut *arg1 = (stk::FileWvOut *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FileWvOut, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_FileWvOut" "', argument " "1"" of type '" "stk::FileWvOut *""'"); 
  }
  arg1 = reinterpret_cast< stk::FileWvOut * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileWvOut_openFile(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::FileWvOut *arg1 = (stk::FileWvOut *) 0 ;
  std::string arg2 ;
  unsigned int arg3 ;
  stk::FileWrite::FILE_TYPE arg4 ;
  stk::Stk::StkFormat arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  unsigned long val4 ;
  int ecode4 = 0 ;
  unsigned long val5 ;
  int ecode5 = 0 ;
  PyObject *swig_obj[5] ;
  
  if (!SWIG_Python_UnpackTuple(args, "FileWvOut_openFile", 5, 5, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FileWvOut, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileWvOut_openFile" "', argument " "1"" of type '" "stk::FileWvOut *""'"); 
  }
  arg1 = reinterpret_cast< stk::FileWvOut * >(argp1);
  {
    res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__string,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FileWvOut_openFile" "', argument " "2"" of type '" "std::string""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FileWvOut_openFile" "', argument " "2"" of type '" "std::string""'");
    } else {
      std::string * temp = reinterpret_cast< std::string * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "FileWvOut_openFile" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  ecode4 = SWIG_AsVal_unsigned_SS_long(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "FileWvOut_openFile" "', argument " "4"" of type '" "stk::FileWrite::FILE_TYPE""'");
  } 
  arg4 = static_cast< stk::FileWrite::FILE_TYPE >(val4);
  ecode5 = SWIG_AsVal_unsigned_SS_long(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "FileWvOut_openFile" "', argument " "5"" of type '" "stk::Stk::StkFormat""'");
  } 
  arg5 = static_cast< stk::Stk::StkFormat >(val5);
  (arg1)->openFile(arg2,arg3,arg4,arg5);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileWvOut_closeFile(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::FileWvOut *arg1 = (stk::FileWvOut *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FileWvOut, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileWvOut_closeFile" "', argument " "1"" of type '" "stk::FileWvOut *""'"); 
  }
  arg1 = reinterpret_cast< stk::FileWvOut * >(argp1);
  (arg1)->closeFile();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileWvOut_tick__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::FileWvOut *arg1 = (stk::FileWvOut *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FileWvOut, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileWvOut_tick" "', argument " "1"" of type '" "stk::FileWvOut *""'"); 
  }
  arg1 = reinterpret_cast< stk::FileWvOut * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FileWvOut_tick" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->tick(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileWvOut_tick__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::FileWvOut *arg1 = (stk::FileWvOut *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FileWvOut, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileWvOut_tick" "', argument " "1"" of type '" "stk::FileWvOut *""'"); 
  }
  arg1 = reinterpret_cast< stk::FileWvOut * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FileWvOut_tick" "', argument " "2"" of type '" "stk::StkFrames const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FileWvOut_tick" "', argument " "2"" of type '" "stk::StkFrames const &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  (arg1)->tick((stk::StkFrames const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileWvOut_tick(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "FileWvOut_tick", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__FileWvOut, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_FileWvOut_tick__SWIG_1(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__FileWvOut, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_FileWvOut_tick__SWIG_0(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'FileWvOut_tick'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::FileWvOut::tick(stk::StkFloat const)\n"
    "    stk::FileWvOut::tick(stk::StkFrames const &)\n");
  return 0;
}


SWIGINTERN PyObject *FileWvOut_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_stk__FileWvOut, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *FileWvOut_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_FileLoop__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  unsigned long arg1 ;
  unsigned long arg2 ;
  unsigned long val1 ;
  int ecode1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  stk::FileLoop *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_FileLoop" "', argument " "1"" of type '" "unsigned long""'");
  } 
  arg1 = static_cast< unsigned long >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_FileLoop" "', argument " "2"" of type '" "unsigned long""'");
  } 
  arg2 = static_cast< unsigned long >(val2);
  result = (stk::FileLoop *)new stk::FileLoop(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__FileLoop, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_FileLoop__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  unsigned long arg1 ;
  unsigned long val1 ;
  int ecode1 = 0 ;
  stk::FileLoop *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_FileLoop" "', argument " "1"" of type '" "unsigned long""'");
  } 
  arg1 = static_cast< unsigned long >(val1);
  result = (stk::FileLoop *)new stk::FileLoop(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__FileLoop, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_FileLoop__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  stk::FileLoop *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (stk::FileLoop *)new stk::FileLoop();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__FileLoop, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_FileLoop__SWIG_3(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::string arg1 ;
  bool arg2 ;
  bool arg3 ;
  unsigned long arg4 ;
  unsigned long arg5 ;
  bool arg6 ;
  void *argp1 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  unsigned long val4 ;
  int ecode4 = 0 ;
  unsigned long val5 ;
  int ecode5 = 0 ;
  bool val6 ;
  int ecode6 = 0 ;
  stk::FileLoop *result = 0 ;
  
  if ((nobjs < 6) || (nobjs > 6)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_std__string,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FileLoop" "', argument " "1"" of type '" "std::string""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FileLoop" "', argument " "1"" of type '" "std::string""'");
    } else {
      std::string * temp = reinterpret_cast< std::string * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  ecode2 = SWIG_AsVal_bool(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_FileLoop" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  ecode3 = SWIG_AsVal_bool(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_FileLoop" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  ecode4 = SWIG_AsVal_unsigned_SS_long(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_FileLoop" "', argument " "4"" of type '" "unsigned long""'");
  } 
  arg4 = static_cast< unsigned long >(val4);
  ecode5 = SWIG_AsVal_unsigned_SS_long(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_FileLoop" "', argument " "5"" of type '" "unsigned long""'");
  } 
  arg5 = static_cast< unsigned long >(val5);
  ecode6 = SWIG_AsVal_bool(swig_obj[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_FileLoop" "', argument " "6"" of type '" "bool""'");
  } 
  arg6 = static_cast< bool >(val6);
  result = (stk::FileLoop *)new stk::FileLoop(arg1,arg2,arg3,arg4,arg5,arg6);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__FileLoop, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_FileLoop__SWIG_4(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::string arg1 ;
  bool arg2 ;
  bool arg3 ;
  unsigned long arg4 ;
  unsigned long arg5 ;
  void *argp1 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  unsigned long val4 ;
  int ecode4 = 0 ;
  unsigned long val5 ;
  int ecode5 = 0 ;
  stk::FileLoop *result = 0 ;
  
  if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_std__string,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FileLoop" "', argument " "1"" of type '" "std::string""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FileLoop" "', argument " "1"" of type '" "std::string""'");
    } else {
      std::string * temp = reinterpret_cast< std::string * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  ecode2 = SWIG_AsVal_bool(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_FileLoop" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  ecode3 = SWIG_AsVal_bool(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_FileLoop" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  ecode4 = SWIG_AsVal_unsigned_SS_long(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_FileLoop" "', argument " "4"" of type '" "unsigned long""'");
  } 
  arg4 = static_cast< unsigned long >(val4);
  ecode5 = SWIG_AsVal_unsigned_SS_long(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_FileLoop" "', argument " "5"" of type '" "unsigned long""'");
  } 
  arg5 = static_cast< unsigned long >(val5);
  result = (stk::FileLoop *)new stk::FileLoop(arg1,arg2,arg3,arg4,arg5);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__FileLoop, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_FileLoop__SWIG_5(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::string arg1 ;
  bool arg2 ;
  bool arg3 ;
  unsigned long arg4 ;
  void *argp1 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  unsigned long val4 ;
  int ecode4 = 0 ;
  stk::FileLoop *result = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_std__string,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FileLoop" "', argument " "1"" of type '" "std::string""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FileLoop" "', argument " "1"" of type '" "std::string""'");
    } else {
      std::string * temp = reinterpret_cast< std::string * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  ecode2 = SWIG_AsVal_bool(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_FileLoop" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  ecode3 = SWIG_AsVal_bool(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_FileLoop" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  ecode4 = SWIG_AsVal_unsigned_SS_long(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_FileLoop" "', argument " "4"" of type '" "unsigned long""'");
  } 
  arg4 = static_cast< unsigned long >(val4);
  result = (stk::FileLoop *)new stk::FileLoop(arg1,arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__FileLoop, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_FileLoop__SWIG_6(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::string arg1 ;
  bool arg2 ;
  bool arg3 ;
  void *argp1 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  stk::FileLoop *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_std__string,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FileLoop" "', argument " "1"" of type '" "std::string""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FileLoop" "', argument " "1"" of type '" "std::string""'");
    } else {
      std::string * temp = reinterpret_cast< std::string * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  ecode2 = SWIG_AsVal_bool(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_FileLoop" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  ecode3 = SWIG_AsVal_bool(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_FileLoop" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  result = (stk::FileLoop *)new stk::FileLoop(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__FileLoop, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_FileLoop__SWIG_7(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::string arg1 ;
  bool arg2 ;
  void *argp1 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  stk::FileLoop *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_std__string,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FileLoop" "', argument " "1"" of type '" "std::string""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FileLoop" "', argument " "1"" of type '" "std::string""'");
    } else {
      std::string * temp = reinterpret_cast< std::string * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  ecode2 = SWIG_AsVal_bool(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_FileLoop" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  result = (stk::FileLoop *)new stk::FileLoop(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__FileLoop, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_FileLoop__SWIG_8(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::string arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  stk::FileLoop *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_std__string,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FileLoop" "', argument " "1"" of type '" "std::string""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FileLoop" "', argument " "1"" of type '" "std::string""'");
    } else {
      std::string * temp = reinterpret_cast< std::string * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  result = (stk::FileLoop *)new stk::FileLoop(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__FileLoop, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_FileLoop(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[7] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_FileLoop", 0, 6, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_FileLoop__SWIG_2(self, argc, argv);
  }
  if (argc == 1) {
    int _v = 0;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_std__string, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_FileLoop__SWIG_8(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v = 0;
    {
      int res = SWIG_AsVal_unsigned_SS_long(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_FileLoop__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_std__string, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_FileLoop__SWIG_7(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v = 0;
    {
      int res = SWIG_AsVal_unsigned_SS_long(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_long(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_FileLoop__SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_std__string, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_FileLoop__SWIG_6(self, argc, argv);
        }
      }
    }
  }
  if (argc == 4) {
    int _v = 0;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_std__string, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_unsigned_SS_long(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_new_FileLoop__SWIG_5(self, argc, argv);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v = 0;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_std__string, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_unsigned_SS_long(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_unsigned_SS_long(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_new_FileLoop__SWIG_4(self, argc, argv);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v = 0;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_std__string, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_unsigned_SS_long(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_unsigned_SS_long(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_bool(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                return _wrap_new_FileLoop__SWIG_3(self, argc, argv);
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_FileLoop'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::FileLoop::FileLoop(unsigned long,unsigned long)\n"
    "    stk::FileLoop::FileLoop(unsigned long)\n"
    "    stk::FileLoop::FileLoop()\n"
    "    stk::FileLoop::FileLoop(std::string,bool,bool,unsigned long,unsigned long,bool)\n"
    "    stk::FileLoop::FileLoop(std::string,bool,bool,unsigned long,unsigned long)\n"
    "    stk::FileLoop::FileLoop(std::string,bool,bool,unsigned long)\n"
    "    stk::FileLoop::FileLoop(std::string,bool,bool)\n"
    "    stk::FileLoop::FileLoop(std::string,bool)\n"
    "    stk::FileLoop::FileLoop(std::string)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_FileLoop(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::FileLoop *arg1 = (stk::FileLoop *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FileLoop, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_FileLoop" "', argument " "1"" of type '" "stk::FileLoop *""'"); 
  }
  arg1 = reinterpret_cast< stk::FileLoop * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileLoop_openFile__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::FileLoop *arg1 = (stk::FileLoop *) 0 ;
  std::string arg2 ;
  bool arg3 ;
  bool arg4 ;
  bool arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  
  if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FileLoop, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileLoop_openFile" "', argument " "1"" of type '" "stk::FileLoop *""'"); 
  }
  arg1 = reinterpret_cast< stk::FileLoop * >(argp1);
  {
    res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__string,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FileLoop_openFile" "', argument " "2"" of type '" "std::string""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FileLoop_openFile" "', argument " "2"" of type '" "std::string""'");
    } else {
      std::string * temp = reinterpret_cast< std::string * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  ecode3 = SWIG_AsVal_bool(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "FileLoop_openFile" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  ecode4 = SWIG_AsVal_bool(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "FileLoop_openFile" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  ecode5 = SWIG_AsVal_bool(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "FileLoop_openFile" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  (arg1)->openFile(arg2,arg3,arg4,arg5);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileLoop_openFile__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::FileLoop *arg1 = (stk::FileLoop *) 0 ;
  std::string arg2 ;
  bool arg3 ;
  bool arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FileLoop, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileLoop_openFile" "', argument " "1"" of type '" "stk::FileLoop *""'"); 
  }
  arg1 = reinterpret_cast< stk::FileLoop * >(argp1);
  {
    res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__string,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FileLoop_openFile" "', argument " "2"" of type '" "std::string""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FileLoop_openFile" "', argument " "2"" of type '" "std::string""'");
    } else {
      std::string * temp = reinterpret_cast< std::string * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  ecode3 = SWIG_AsVal_bool(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "FileLoop_openFile" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  ecode4 = SWIG_AsVal_bool(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "FileLoop_openFile" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  (arg1)->openFile(arg2,arg3,arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileLoop_openFile__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::FileLoop *arg1 = (stk::FileLoop *) 0 ;
  std::string arg2 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FileLoop, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileLoop_openFile" "', argument " "1"" of type '" "stk::FileLoop *""'"); 
  }
  arg1 = reinterpret_cast< stk::FileLoop * >(argp1);
  {
    res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__string,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FileLoop_openFile" "', argument " "2"" of type '" "std::string""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FileLoop_openFile" "', argument " "2"" of type '" "std::string""'");
    } else {
      std::string * temp = reinterpret_cast< std::string * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  ecode3 = SWIG_AsVal_bool(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "FileLoop_openFile" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  (arg1)->openFile(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileLoop_openFile__SWIG_3(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::FileLoop *arg1 = (stk::FileLoop *) 0 ;
  std::string arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FileLoop, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileLoop_openFile" "', argument " "1"" of type '" "stk::FileLoop *""'"); 
  }
  arg1 = reinterpret_cast< stk::FileLoop * >(argp1);
  {
    res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__string,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FileLoop_openFile" "', argument " "2"" of type '" "std::string""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FileLoop_openFile" "', argument " "2"" of type '" "std::string""'");
    } else {
      std::string * temp = reinterpret_cast< std::string * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->openFile(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileLoop_openFile(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[6] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "FileLoop_openFile", 0, 5, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__FileLoop, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__string, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_FileLoop_openFile__SWIG_3(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__FileLoop, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__string, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_FileLoop_openFile__SWIG_2(self, argc, argv);
        }
      }
    }
  }
  if (argc == 4) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__FileLoop, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__string, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_FileLoop_openFile__SWIG_1(self, argc, argv);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__FileLoop, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__string, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_FileLoop_openFile__SWIG_0(self, argc, argv);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'FileLoop_openFile'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::FileLoop::openFile(std::string,bool,bool,bool)\n"
    "    stk::FileLoop::openFile(std::string,bool,bool)\n"
    "    stk::FileLoop::openFile(std::string,bool)\n"
    "    stk::FileLoop::openFile(std::string)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_FileLoop_closeFile(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::FileLoop *arg1 = (stk::FileLoop *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FileLoop, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileLoop_closeFile" "', argument " "1"" of type '" "stk::FileLoop *""'"); 
  }
  arg1 = reinterpret_cast< stk::FileLoop * >(argp1);
  (arg1)->closeFile();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileLoop_reset(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::FileLoop *arg1 = (stk::FileLoop *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FileLoop, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileLoop_reset" "', argument " "1"" of type '" "stk::FileLoop *""'"); 
  }
  arg1 = reinterpret_cast< stk::FileLoop * >(argp1);
  (arg1)->reset();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileLoop_channelsOut(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::FileLoop *arg1 = (stk::FileLoop *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FileLoop, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileLoop_channelsOut" "', argument " "1"" of type '" "stk::FileLoop const *""'"); 
  }
  arg1 = reinterpret_cast< stk::FileLoop * >(argp1);
  result = (unsigned int)((stk::FileLoop const *)arg1)->channelsOut();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileLoop_normalize__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::FileLoop *arg1 = (stk::FileLoop *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FileLoop, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileLoop_normalize" "', argument " "1"" of type '" "stk::FileLoop *""'"); 
  }
  arg1 = reinterpret_cast< stk::FileLoop * >(argp1);
  (arg1)->normalize();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileLoop_normalize__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::FileLoop *arg1 = (stk::FileLoop *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FileLoop, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileLoop_normalize" "', argument " "1"" of type '" "stk::FileLoop *""'"); 
  }
  arg1 = reinterpret_cast< stk::FileLoop * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FileLoop_normalize" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->normalize(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileLoop_normalize(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "FileLoop_normalize", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__FileLoop, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_FileLoop_normalize__SWIG_0(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__FileLoop, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_FileLoop_normalize__SWIG_1(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'FileLoop_normalize'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::FileLoop::normalize()\n"
    "    stk::FileLoop::normalize(stk::StkFloat)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_FileLoop_getSize(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::FileLoop *arg1 = (stk::FileLoop *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned long result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FileLoop, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileLoop_getSize" "', argument " "1"" of type '" "stk::FileLoop const *""'"); 
  }
  arg1 = reinterpret_cast< stk::FileLoop * >(argp1);
  result = (unsigned long)((stk::FileLoop const *)arg1)->getSize();
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileLoop_getFileRate(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::FileLoop *arg1 = (stk::FileLoop *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  stk::StkFloat result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FileLoop, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileLoop_getFileRate" "', argument " "1"" of type '" "stk::FileLoop const *""'"); 
  }
  arg1 = reinterpret_cast< stk::FileLoop * >(argp1);
  result = (stk::StkFloat)((stk::FileLoop const *)arg1)->getFileRate();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileLoop_setRate(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::FileLoop *arg1 = (stk::FileLoop *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "FileLoop_setRate", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FileLoop, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileLoop_setRate" "', argument " "1"" of type '" "stk::FileLoop *""'"); 
  }
  arg1 = reinterpret_cast< stk::FileLoop * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FileLoop_setRate" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setRate(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileLoop_setFrequency(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::FileLoop *arg1 = (stk::FileLoop *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "FileLoop_setFrequency", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FileLoop, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileLoop_setFrequency" "', argument " "1"" of type '" "stk::FileLoop *""'"); 
  }
  arg1 = reinterpret_cast< stk::FileLoop * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FileLoop_setFrequency" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setFrequency(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileLoop_addTime(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::FileLoop *arg1 = (stk::FileLoop *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "FileLoop_addTime", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FileLoop, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileLoop_addTime" "', argument " "1"" of type '" "stk::FileLoop *""'"); 
  }
  arg1 = reinterpret_cast< stk::FileLoop * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FileLoop_addTime" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->addTime(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileLoop_addPhase(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::FileLoop *arg1 = (stk::FileLoop *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "FileLoop_addPhase", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FileLoop, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileLoop_addPhase" "', argument " "1"" of type '" "stk::FileLoop *""'"); 
  }
  arg1 = reinterpret_cast< stk::FileLoop * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FileLoop_addPhase" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->addPhase(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileLoop_addPhaseOffset(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::FileLoop *arg1 = (stk::FileLoop *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "FileLoop_addPhaseOffset", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FileLoop, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileLoop_addPhaseOffset" "', argument " "1"" of type '" "stk::FileLoop *""'"); 
  }
  arg1 = reinterpret_cast< stk::FileLoop * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FileLoop_addPhaseOffset" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->addPhaseOffset(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileLoop_lastOut__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::FileLoop *arg1 = (stk::FileLoop *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FileLoop, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileLoop_lastOut" "', argument " "1"" of type '" "stk::FileLoop *""'"); 
  }
  arg1 = reinterpret_cast< stk::FileLoop * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FileLoop_lastOut" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (stk::StkFloat)(arg1)->lastOut(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileLoop_lastOut__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::FileLoop *arg1 = (stk::FileLoop *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FileLoop, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileLoop_lastOut" "', argument " "1"" of type '" "stk::FileLoop *""'"); 
  }
  arg1 = reinterpret_cast< stk::FileLoop * >(argp1);
  result = (stk::StkFloat)(arg1)->lastOut();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileLoop_lastOut(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "FileLoop_lastOut", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__FileLoop, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_FileLoop_lastOut__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__FileLoop, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_FileLoop_lastOut__SWIG_0(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'FileLoop_lastOut'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::FileLoop::lastOut(unsigned int)\n"
    "    stk::FileLoop::lastOut()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_FileLoop_tick__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::FileLoop *arg1 = (stk::FileLoop *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FileLoop, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileLoop_tick" "', argument " "1"" of type '" "stk::FileLoop *""'"); 
  }
  arg1 = reinterpret_cast< stk::FileLoop * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FileLoop_tick" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (stk::StkFloat)(arg1)->tick(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileLoop_tick__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::FileLoop *arg1 = (stk::FileLoop *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FileLoop, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileLoop_tick" "', argument " "1"" of type '" "stk::FileLoop *""'"); 
  }
  arg1 = reinterpret_cast< stk::FileLoop * >(argp1);
  result = (stk::StkFloat)(arg1)->tick();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileLoop_tick__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::FileLoop *arg1 = (stk::FileLoop *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FileLoop, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileLoop_tick" "', argument " "1"" of type '" "stk::FileLoop *""'"); 
  }
  arg1 = reinterpret_cast< stk::FileLoop * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FileLoop_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FileLoop_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "FileLoop_tick" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileLoop_tick__SWIG_3(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::FileLoop *arg1 = (stk::FileLoop *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FileLoop, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileLoop_tick" "', argument " "1"" of type '" "stk::FileLoop *""'"); 
  }
  arg1 = reinterpret_cast< stk::FileLoop * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FileLoop_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FileLoop_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileLoop_tick(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "FileLoop_tick", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__FileLoop, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_FileLoop_tick__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__FileLoop, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_FileLoop_tick__SWIG_3(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__FileLoop, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_FileLoop_tick__SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__FileLoop, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_FileLoop_tick__SWIG_2(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'FileLoop_tick'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::FileLoop::tick(unsigned int)\n"
    "    stk::FileLoop::tick()\n"
    "    stk::FileLoop::tick(stk::StkFrames &,unsigned int)\n"
    "    stk::FileLoop::tick(stk::StkFrames &)\n");
  return 0;
}


SWIGINTERN PyObject *FileLoop_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_stk__FileLoop, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *FileLoop_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_Fir__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  stk::Fir *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (stk::Fir *)new stk::Fir();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__Fir, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Fir__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< stk::StkFloat,std::allocator< stk::StkFloat > > *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  stk::Fir *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Fir" "', argument " "1"" of type '" "std::vector< stk::StkFloat,std::allocator< stk::StkFloat > > &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Fir" "', argument " "1"" of type '" "std::vector< stk::StkFloat,std::allocator< stk::StkFloat > > &""'"); 
  }
  arg1 = reinterpret_cast< std::vector< stk::StkFloat,std::allocator< stk::StkFloat > > * >(argp1);
  result = (stk::Fir *)new stk::Fir(*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__Fir, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Fir(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_Fir", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_Fir__SWIG_0(self, argc, argv);
  }
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, SWIG_POINTER_NO_NULL);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_Fir__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_Fir'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::Fir::Fir()\n"
    "    stk::Fir::Fir(std::vector< stk::StkFloat,std::allocator< stk::StkFloat > > &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_Fir(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Fir *arg1 = (stk::Fir *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Fir, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Fir" "', argument " "1"" of type '" "stk::Fir *""'"); 
  }
  arg1 = reinterpret_cast< stk::Fir * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Fir_setCoefficients__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Fir *arg1 = (stk::Fir *) 0 ;
  std::vector< stk::StkFloat,std::allocator< stk::StkFloat > > *arg2 = 0 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Fir, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Fir_setCoefficients" "', argument " "1"" of type '" "stk::Fir *""'"); 
  }
  arg1 = reinterpret_cast< stk::Fir * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Fir_setCoefficients" "', argument " "2"" of type '" "std::vector< stk::StkFloat,std::allocator< stk::StkFloat > > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Fir_setCoefficients" "', argument " "2"" of type '" "std::vector< stk::StkFloat,std::allocator< stk::StkFloat > > &""'"); 
  }
  arg2 = reinterpret_cast< std::vector< stk::StkFloat,std::allocator< stk::StkFloat > > * >(argp2);
  ecode3 = SWIG_AsVal_bool(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Fir_setCoefficients" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  (arg1)->setCoefficients(*arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Fir_setCoefficients__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Fir *arg1 = (stk::Fir *) 0 ;
  std::vector< stk::StkFloat,std::allocator< stk::StkFloat > > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Fir, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Fir_setCoefficients" "', argument " "1"" of type '" "stk::Fir *""'"); 
  }
  arg1 = reinterpret_cast< stk::Fir * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Fir_setCoefficients" "', argument " "2"" of type '" "std::vector< stk::StkFloat,std::allocator< stk::StkFloat > > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Fir_setCoefficients" "', argument " "2"" of type '" "std::vector< stk::StkFloat,std::allocator< stk::StkFloat > > &""'"); 
  }
  arg2 = reinterpret_cast< std::vector< stk::StkFloat,std::allocator< stk::StkFloat > > * >(argp2);
  (arg1)->setCoefficients(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Fir_setCoefficients(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Fir_setCoefficients", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Fir, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Fir_setCoefficients__SWIG_1(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Fir, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Fir_setCoefficients__SWIG_0(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Fir_setCoefficients'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::Fir::setCoefficients(std::vector< stk::StkFloat,std::allocator< stk::StkFloat > > &,bool)\n"
    "    stk::Fir::setCoefficients(std::vector< stk::StkFloat,std::allocator< stk::StkFloat > > &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Fir_lastOut(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Fir *arg1 = (stk::Fir *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  stk::StkFloat result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Fir, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Fir_lastOut" "', argument " "1"" of type '" "stk::Fir const *""'"); 
  }
  arg1 = reinterpret_cast< stk::Fir * >(argp1);
  result = (stk::StkFloat)((stk::Fir const *)arg1)->lastOut();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Fir_tick__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Fir *arg1 = (stk::Fir *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Fir, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Fir_tick" "', argument " "1"" of type '" "stk::Fir *""'"); 
  }
  arg1 = reinterpret_cast< stk::Fir * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Fir_tick" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  result = (stk::StkFloat)(arg1)->tick(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Fir_tick__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Fir *arg1 = (stk::Fir *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Fir, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Fir_tick" "', argument " "1"" of type '" "stk::Fir *""'"); 
  }
  arg1 = reinterpret_cast< stk::Fir * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Fir_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Fir_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Fir_tick" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Fir_tick__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Fir *arg1 = (stk::Fir *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Fir, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Fir_tick" "', argument " "1"" of type '" "stk::Fir *""'"); 
  }
  arg1 = reinterpret_cast< stk::Fir * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Fir_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Fir_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Fir_tick__SWIG_3(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Fir *arg1 = (stk::Fir *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  stk::StkFrames *arg3 = 0 ;
  unsigned int arg4 ;
  unsigned int arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  unsigned int val5 ;
  int ecode5 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Fir, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Fir_tick" "', argument " "1"" of type '" "stk::Fir *""'"); 
  }
  arg1 = reinterpret_cast< stk::Fir * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Fir_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Fir_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Fir_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Fir_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  arg3 = reinterpret_cast< stk::StkFrames * >(argp3);
  ecode4 = SWIG_AsVal_unsigned_SS_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Fir_tick" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  ecode5 = SWIG_AsVal_unsigned_SS_int(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "Fir_tick" "', argument " "5"" of type '" "unsigned int""'");
  } 
  arg5 = static_cast< unsigned int >(val5);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,*arg3,arg4,arg5);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Fir_tick__SWIG_4(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Fir *arg1 = (stk::Fir *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  stk::StkFrames *arg3 = 0 ;
  unsigned int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Fir, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Fir_tick" "', argument " "1"" of type '" "stk::Fir *""'"); 
  }
  arg1 = reinterpret_cast< stk::Fir * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Fir_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Fir_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Fir_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Fir_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  arg3 = reinterpret_cast< stk::StkFrames * >(argp3);
  ecode4 = SWIG_AsVal_unsigned_SS_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Fir_tick" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,*arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Fir_tick__SWIG_5(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Fir *arg1 = (stk::Fir *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  stk::StkFrames *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Fir, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Fir_tick" "', argument " "1"" of type '" "stk::Fir *""'"); 
  }
  arg1 = reinterpret_cast< stk::Fir * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Fir_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Fir_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Fir_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Fir_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  arg3 = reinterpret_cast< stk::StkFrames * >(argp3);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,*arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Fir_tick(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[6] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Fir_tick", 0, 5, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Fir, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Fir_tick__SWIG_2(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Fir, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Fir_tick__SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Fir, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_Fir_tick__SWIG_5(self, argc, argv);
        }
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Fir, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Fir_tick__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  if (argc == 4) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Fir, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_Fir_tick__SWIG_4(self, argc, argv);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Fir, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_unsigned_SS_int(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_Fir_tick__SWIG_3(self, argc, argv);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Fir_tick'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::Fir::tick(stk::StkFloat)\n"
    "    stk::Fir::tick(stk::StkFrames &,unsigned int)\n"
    "    stk::Fir::tick(stk::StkFrames &)\n"
    "    stk::Fir::tick(stk::StkFrames &,stk::StkFrames &,unsigned int,unsigned int)\n"
    "    stk::Fir::tick(stk::StkFrames &,stk::StkFrames &,unsigned int)\n"
    "    stk::Fir::tick(stk::StkFrames &,stk::StkFrames &)\n");
  return 0;
}


SWIGINTERN PyObject *Fir_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_stk__Fir, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *Fir_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_Flute(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::StkFloat arg1 ;
  float val1 ;
  int ecode1 = 0 ;
  PyObject *swig_obj[1] ;
  stk::Flute *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Flute" "', argument " "1"" of type '" "stk::StkFloat""'");
  } 
  arg1 = static_cast< stk::StkFloat >(val1);
  result = (stk::Flute *)new stk::Flute(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__Flute, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Flute(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Flute *arg1 = (stk::Flute *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Flute, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Flute" "', argument " "1"" of type '" "stk::Flute *""'"); 
  }
  arg1 = reinterpret_cast< stk::Flute * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Flute_clear(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Flute *arg1 = (stk::Flute *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Flute, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Flute_clear" "', argument " "1"" of type '" "stk::Flute *""'"); 
  }
  arg1 = reinterpret_cast< stk::Flute * >(argp1);
  (arg1)->clear();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Flute_setFrequency(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Flute *arg1 = (stk::Flute *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Flute_setFrequency", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Flute, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Flute_setFrequency" "', argument " "1"" of type '" "stk::Flute *""'"); 
  }
  arg1 = reinterpret_cast< stk::Flute * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Flute_setFrequency" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setFrequency(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Flute_setJetReflection(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Flute *arg1 = (stk::Flute *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Flute_setJetReflection", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Flute, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Flute_setJetReflection" "', argument " "1"" of type '" "stk::Flute *""'"); 
  }
  arg1 = reinterpret_cast< stk::Flute * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Flute_setJetReflection" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setJetReflection(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Flute_setEndReflection(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Flute *arg1 = (stk::Flute *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Flute_setEndReflection", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Flute, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Flute_setEndReflection" "', argument " "1"" of type '" "stk::Flute *""'"); 
  }
  arg1 = reinterpret_cast< stk::Flute * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Flute_setEndReflection" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setEndReflection(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Flute_setJetDelay(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Flute *arg1 = (stk::Flute *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Flute_setJetDelay", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Flute, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Flute_setJetDelay" "', argument " "1"" of type '" "stk::Flute *""'"); 
  }
  arg1 = reinterpret_cast< stk::Flute * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Flute_setJetDelay" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setJetDelay(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Flute_startBlowing(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Flute *arg1 = (stk::Flute *) 0 ;
  stk::StkFloat arg2 ;
  stk::StkFloat arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Flute_startBlowing", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Flute, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Flute_startBlowing" "', argument " "1"" of type '" "stk::Flute *""'"); 
  }
  arg1 = reinterpret_cast< stk::Flute * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Flute_startBlowing" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Flute_startBlowing" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  (arg1)->startBlowing(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Flute_stopBlowing(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Flute *arg1 = (stk::Flute *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Flute_stopBlowing", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Flute, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Flute_stopBlowing" "', argument " "1"" of type '" "stk::Flute *""'"); 
  }
  arg1 = reinterpret_cast< stk::Flute * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Flute_stopBlowing" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->stopBlowing(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Flute_noteOn(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Flute *arg1 = (stk::Flute *) 0 ;
  stk::StkFloat arg2 ;
  stk::StkFloat arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Flute_noteOn", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Flute, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Flute_noteOn" "', argument " "1"" of type '" "stk::Flute *""'"); 
  }
  arg1 = reinterpret_cast< stk::Flute * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Flute_noteOn" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Flute_noteOn" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  (arg1)->noteOn(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Flute_noteOff(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Flute *arg1 = (stk::Flute *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Flute_noteOff", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Flute, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Flute_noteOff" "', argument " "1"" of type '" "stk::Flute *""'"); 
  }
  arg1 = reinterpret_cast< stk::Flute * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Flute_noteOff" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->noteOff(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Flute_controlChange(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Flute *arg1 = (stk::Flute *) 0 ;
  int arg2 ;
  stk::StkFloat arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Flute_controlChange", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Flute, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Flute_controlChange" "', argument " "1"" of type '" "stk::Flute *""'"); 
  }
  arg1 = reinterpret_cast< stk::Flute * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Flute_controlChange" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Flute_controlChange" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  (arg1)->controlChange(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Flute_tick__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Flute *arg1 = (stk::Flute *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Flute, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Flute_tick" "', argument " "1"" of type '" "stk::Flute *""'"); 
  }
  arg1 = reinterpret_cast< stk::Flute * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Flute_tick" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (stk::StkFloat)(arg1)->tick(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Flute_tick__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Flute *arg1 = (stk::Flute *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Flute, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Flute_tick" "', argument " "1"" of type '" "stk::Flute *""'"); 
  }
  arg1 = reinterpret_cast< stk::Flute * >(argp1);
  result = (stk::StkFloat)(arg1)->tick();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Flute_tick__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Flute *arg1 = (stk::Flute *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Flute, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Flute_tick" "', argument " "1"" of type '" "stk::Flute *""'"); 
  }
  arg1 = reinterpret_cast< stk::Flute * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Flute_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Flute_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Flute_tick" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Flute_tick__SWIG_3(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Flute *arg1 = (stk::Flute *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Flute, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Flute_tick" "', argument " "1"" of type '" "stk::Flute *""'"); 
  }
  arg1 = reinterpret_cast< stk::Flute * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Flute_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Flute_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Flute_tick(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Flute_tick", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Flute, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Flute_tick__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Flute, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Flute_tick__SWIG_3(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Flute, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Flute_tick__SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Flute, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Flute_tick__SWIG_2(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Flute_tick'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::Flute::tick(unsigned int)\n"
    "    stk::Flute::tick()\n"
    "    stk::Flute::tick(stk::StkFrames &,unsigned int)\n"
    "    stk::Flute::tick(stk::StkFrames &)\n");
  return 0;
}


SWIGINTERN PyObject *Flute_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_stk__Flute, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *Flute_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_FormSwep(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::FormSwep *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_FormSwep", 0, 0, 0)) SWIG_fail;
  result = (stk::FormSwep *)new stk::FormSwep();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__FormSwep, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_FormSwep(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::FormSwep *arg1 = (stk::FormSwep *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FormSwep, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_FormSwep" "', argument " "1"" of type '" "stk::FormSwep *""'"); 
  }
  arg1 = reinterpret_cast< stk::FormSwep * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FormSwep_ignoreSampleRateChange__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::FormSwep *arg1 = (stk::FormSwep *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FormSwep, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FormSwep_ignoreSampleRateChange" "', argument " "1"" of type '" "stk::FormSwep *""'"); 
  }
  arg1 = reinterpret_cast< stk::FormSwep * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FormSwep_ignoreSampleRateChange" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->ignoreSampleRateChange(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FormSwep_ignoreSampleRateChange__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::FormSwep *arg1 = (stk::FormSwep *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FormSwep, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FormSwep_ignoreSampleRateChange" "', argument " "1"" of type '" "stk::FormSwep *""'"); 
  }
  arg1 = reinterpret_cast< stk::FormSwep * >(argp1);
  (arg1)->ignoreSampleRateChange();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FormSwep_ignoreSampleRateChange(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "FormSwep_ignoreSampleRateChange", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__FormSwep, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_FormSwep_ignoreSampleRateChange__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__FormSwep, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_FormSwep_ignoreSampleRateChange__SWIG_0(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'FormSwep_ignoreSampleRateChange'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::FormSwep::ignoreSampleRateChange(bool)\n"
    "    stk::FormSwep::ignoreSampleRateChange()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_FormSwep_setResonance(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::FormSwep *arg1 = (stk::FormSwep *) 0 ;
  stk::StkFloat arg2 ;
  stk::StkFloat arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "FormSwep_setResonance", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FormSwep, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FormSwep_setResonance" "', argument " "1"" of type '" "stk::FormSwep *""'"); 
  }
  arg1 = reinterpret_cast< stk::FormSwep * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FormSwep_setResonance" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "FormSwep_setResonance" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  (arg1)->setResonance(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FormSwep_setStates__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::FormSwep *arg1 = (stk::FormSwep *) 0 ;
  stk::StkFloat arg2 ;
  stk::StkFloat arg3 ;
  stk::StkFloat arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FormSwep, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FormSwep_setStates" "', argument " "1"" of type '" "stk::FormSwep *""'"); 
  }
  arg1 = reinterpret_cast< stk::FormSwep * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FormSwep_setStates" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "FormSwep_setStates" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "FormSwep_setStates" "', argument " "4"" of type '" "stk::StkFloat""'");
  } 
  arg4 = static_cast< stk::StkFloat >(val4);
  (arg1)->setStates(arg2,arg3,arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FormSwep_setStates__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::FormSwep *arg1 = (stk::FormSwep *) 0 ;
  stk::StkFloat arg2 ;
  stk::StkFloat arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FormSwep, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FormSwep_setStates" "', argument " "1"" of type '" "stk::FormSwep *""'"); 
  }
  arg1 = reinterpret_cast< stk::FormSwep * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FormSwep_setStates" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "FormSwep_setStates" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  (arg1)->setStates(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FormSwep_setStates(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "FormSwep_setStates", 0, 4, argv))) SWIG_fail;
  --argc;
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__FormSwep, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_FormSwep_setStates__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  if (argc == 4) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__FormSwep, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_FormSwep_setStates__SWIG_0(self, argc, argv);
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'FormSwep_setStates'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::FormSwep::setStates(stk::StkFloat,stk::StkFloat,stk::StkFloat)\n"
    "    stk::FormSwep::setStates(stk::StkFloat,stk::StkFloat)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_FormSwep_setTargets__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::FormSwep *arg1 = (stk::FormSwep *) 0 ;
  stk::StkFloat arg2 ;
  stk::StkFloat arg3 ;
  stk::StkFloat arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FormSwep, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FormSwep_setTargets" "', argument " "1"" of type '" "stk::FormSwep *""'"); 
  }
  arg1 = reinterpret_cast< stk::FormSwep * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FormSwep_setTargets" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "FormSwep_setTargets" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "FormSwep_setTargets" "', argument " "4"" of type '" "stk::StkFloat""'");
  } 
  arg4 = static_cast< stk::StkFloat >(val4);
  (arg1)->setTargets(arg2,arg3,arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FormSwep_setTargets__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::FormSwep *arg1 = (stk::FormSwep *) 0 ;
  stk::StkFloat arg2 ;
  stk::StkFloat arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FormSwep, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FormSwep_setTargets" "', argument " "1"" of type '" "stk::FormSwep *""'"); 
  }
  arg1 = reinterpret_cast< stk::FormSwep * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FormSwep_setTargets" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "FormSwep_setTargets" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  (arg1)->setTargets(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FormSwep_setTargets(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "FormSwep_setTargets", 0, 4, argv))) SWIG_fail;
  --argc;
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__FormSwep, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_FormSwep_setTargets__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  if (argc == 4) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__FormSwep, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_FormSwep_setTargets__SWIG_0(self, argc, argv);
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'FormSwep_setTargets'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::FormSwep::setTargets(stk::StkFloat,stk::StkFloat,stk::StkFloat)\n"
    "    stk::FormSwep::setTargets(stk::StkFloat,stk::StkFloat)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_FormSwep_setSweepRate(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::FormSwep *arg1 = (stk::FormSwep *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "FormSwep_setSweepRate", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FormSwep, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FormSwep_setSweepRate" "', argument " "1"" of type '" "stk::FormSwep *""'"); 
  }
  arg1 = reinterpret_cast< stk::FormSwep * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FormSwep_setSweepRate" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setSweepRate(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FormSwep_setSweepTime(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::FormSwep *arg1 = (stk::FormSwep *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "FormSwep_setSweepTime", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FormSwep, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FormSwep_setSweepTime" "', argument " "1"" of type '" "stk::FormSwep *""'"); 
  }
  arg1 = reinterpret_cast< stk::FormSwep * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FormSwep_setSweepTime" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setSweepTime(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FormSwep_lastOut(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::FormSwep *arg1 = (stk::FormSwep *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  stk::StkFloat result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FormSwep, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FormSwep_lastOut" "', argument " "1"" of type '" "stk::FormSwep const *""'"); 
  }
  arg1 = reinterpret_cast< stk::FormSwep * >(argp1);
  result = (stk::StkFloat)((stk::FormSwep const *)arg1)->lastOut();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FormSwep_tick__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::FormSwep *arg1 = (stk::FormSwep *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FormSwep, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FormSwep_tick" "', argument " "1"" of type '" "stk::FormSwep *""'"); 
  }
  arg1 = reinterpret_cast< stk::FormSwep * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FormSwep_tick" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  result = (stk::StkFloat)(arg1)->tick(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FormSwep_tick__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::FormSwep *arg1 = (stk::FormSwep *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FormSwep, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FormSwep_tick" "', argument " "1"" of type '" "stk::FormSwep *""'"); 
  }
  arg1 = reinterpret_cast< stk::FormSwep * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FormSwep_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FormSwep_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "FormSwep_tick" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FormSwep_tick__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::FormSwep *arg1 = (stk::FormSwep *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FormSwep, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FormSwep_tick" "', argument " "1"" of type '" "stk::FormSwep *""'"); 
  }
  arg1 = reinterpret_cast< stk::FormSwep * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FormSwep_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FormSwep_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FormSwep_tick__SWIG_3(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::FormSwep *arg1 = (stk::FormSwep *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  stk::StkFrames *arg3 = 0 ;
  unsigned int arg4 ;
  unsigned int arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  unsigned int val5 ;
  int ecode5 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FormSwep, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FormSwep_tick" "', argument " "1"" of type '" "stk::FormSwep *""'"); 
  }
  arg1 = reinterpret_cast< stk::FormSwep * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FormSwep_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FormSwep_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "FormSwep_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FormSwep_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  arg3 = reinterpret_cast< stk::StkFrames * >(argp3);
  ecode4 = SWIG_AsVal_unsigned_SS_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "FormSwep_tick" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  ecode5 = SWIG_AsVal_unsigned_SS_int(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "FormSwep_tick" "', argument " "5"" of type '" "unsigned int""'");
  } 
  arg5 = static_cast< unsigned int >(val5);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,*arg3,arg4,arg5);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FormSwep_tick__SWIG_4(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::FormSwep *arg1 = (stk::FormSwep *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  stk::StkFrames *arg3 = 0 ;
  unsigned int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FormSwep, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FormSwep_tick" "', argument " "1"" of type '" "stk::FormSwep *""'"); 
  }
  arg1 = reinterpret_cast< stk::FormSwep * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FormSwep_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FormSwep_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "FormSwep_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FormSwep_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  arg3 = reinterpret_cast< stk::StkFrames * >(argp3);
  ecode4 = SWIG_AsVal_unsigned_SS_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "FormSwep_tick" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,*arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FormSwep_tick__SWIG_5(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::FormSwep *arg1 = (stk::FormSwep *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  stk::StkFrames *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FormSwep, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FormSwep_tick" "', argument " "1"" of type '" "stk::FormSwep *""'"); 
  }
  arg1 = reinterpret_cast< stk::FormSwep * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FormSwep_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FormSwep_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "FormSwep_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FormSwep_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  arg3 = reinterpret_cast< stk::StkFrames * >(argp3);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,*arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FormSwep_tick(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[6] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "FormSwep_tick", 0, 5, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__FormSwep, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_FormSwep_tick__SWIG_2(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__FormSwep, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_FormSwep_tick__SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__FormSwep, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_FormSwep_tick__SWIG_5(self, argc, argv);
        }
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__FormSwep, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_FormSwep_tick__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  if (argc == 4) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__FormSwep, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_FormSwep_tick__SWIG_4(self, argc, argv);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__FormSwep, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_unsigned_SS_int(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_FormSwep_tick__SWIG_3(self, argc, argv);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'FormSwep_tick'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::FormSwep::tick(stk::StkFloat)\n"
    "    stk::FormSwep::tick(stk::StkFrames &,unsigned int)\n"
    "    stk::FormSwep::tick(stk::StkFrames &)\n"
    "    stk::FormSwep::tick(stk::StkFrames &,stk::StkFrames &,unsigned int,unsigned int)\n"
    "    stk::FormSwep::tick(stk::StkFrames &,stk::StkFrames &,unsigned int)\n"
    "    stk::FormSwep::tick(stk::StkFrames &,stk::StkFrames &)\n");
  return 0;
}


SWIGINTERN PyObject *FormSwep_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_stk__FormSwep, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *FormSwep_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_FreeVerb(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::FreeVerb *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_FreeVerb", 0, 0, 0)) SWIG_fail;
  result = (stk::FreeVerb *)new stk::FreeVerb();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__FreeVerb, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_FreeVerb(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::FreeVerb *arg1 = (stk::FreeVerb *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FreeVerb, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_FreeVerb" "', argument " "1"" of type '" "stk::FreeVerb *""'"); 
  }
  arg1 = reinterpret_cast< stk::FreeVerb * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FreeVerb_setEffectMix(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::FreeVerb *arg1 = (stk::FreeVerb *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "FreeVerb_setEffectMix", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FreeVerb, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FreeVerb_setEffectMix" "', argument " "1"" of type '" "stk::FreeVerb *""'"); 
  }
  arg1 = reinterpret_cast< stk::FreeVerb * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FreeVerb_setEffectMix" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setEffectMix(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FreeVerb_setRoomSize(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::FreeVerb *arg1 = (stk::FreeVerb *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "FreeVerb_setRoomSize", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FreeVerb, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FreeVerb_setRoomSize" "', argument " "1"" of type '" "stk::FreeVerb *""'"); 
  }
  arg1 = reinterpret_cast< stk::FreeVerb * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FreeVerb_setRoomSize" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setRoomSize(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FreeVerb_getRoomSize(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::FreeVerb *arg1 = (stk::FreeVerb *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  stk::StkFloat result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FreeVerb, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FreeVerb_getRoomSize" "', argument " "1"" of type '" "stk::FreeVerb *""'"); 
  }
  arg1 = reinterpret_cast< stk::FreeVerb * >(argp1);
  result = (stk::StkFloat)(arg1)->getRoomSize();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FreeVerb_setDamping(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::FreeVerb *arg1 = (stk::FreeVerb *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "FreeVerb_setDamping", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FreeVerb, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FreeVerb_setDamping" "', argument " "1"" of type '" "stk::FreeVerb *""'"); 
  }
  arg1 = reinterpret_cast< stk::FreeVerb * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FreeVerb_setDamping" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setDamping(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FreeVerb_getDamping(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::FreeVerb *arg1 = (stk::FreeVerb *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  stk::StkFloat result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FreeVerb, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FreeVerb_getDamping" "', argument " "1"" of type '" "stk::FreeVerb *""'"); 
  }
  arg1 = reinterpret_cast< stk::FreeVerb * >(argp1);
  result = (stk::StkFloat)(arg1)->getDamping();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FreeVerb_setWidth(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::FreeVerb *arg1 = (stk::FreeVerb *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "FreeVerb_setWidth", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FreeVerb, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FreeVerb_setWidth" "', argument " "1"" of type '" "stk::FreeVerb *""'"); 
  }
  arg1 = reinterpret_cast< stk::FreeVerb * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FreeVerb_setWidth" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setWidth(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FreeVerb_getWidth(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::FreeVerb *arg1 = (stk::FreeVerb *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  stk::StkFloat result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FreeVerb, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FreeVerb_getWidth" "', argument " "1"" of type '" "stk::FreeVerb *""'"); 
  }
  arg1 = reinterpret_cast< stk::FreeVerb * >(argp1);
  result = (stk::StkFloat)(arg1)->getWidth();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FreeVerb_setMode(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::FreeVerb *arg1 = (stk::FreeVerb *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "FreeVerb_setMode", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FreeVerb, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FreeVerb_setMode" "', argument " "1"" of type '" "stk::FreeVerb *""'"); 
  }
  arg1 = reinterpret_cast< stk::FreeVerb * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FreeVerb_setMode" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->setMode(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FreeVerb_getMode(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::FreeVerb *arg1 = (stk::FreeVerb *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  stk::StkFloat result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FreeVerb, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FreeVerb_getMode" "', argument " "1"" of type '" "stk::FreeVerb *""'"); 
  }
  arg1 = reinterpret_cast< stk::FreeVerb * >(argp1);
  result = (stk::StkFloat)(arg1)->getMode();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FreeVerb_clear(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::FreeVerb *arg1 = (stk::FreeVerb *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FreeVerb, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FreeVerb_clear" "', argument " "1"" of type '" "stk::FreeVerb *""'"); 
  }
  arg1 = reinterpret_cast< stk::FreeVerb * >(argp1);
  (arg1)->clear();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FreeVerb_lastOut__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::FreeVerb *arg1 = (stk::FreeVerb *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FreeVerb, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FreeVerb_lastOut" "', argument " "1"" of type '" "stk::FreeVerb *""'"); 
  }
  arg1 = reinterpret_cast< stk::FreeVerb * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FreeVerb_lastOut" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (stk::StkFloat)(arg1)->lastOut(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FreeVerb_lastOut__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::FreeVerb *arg1 = (stk::FreeVerb *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FreeVerb, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FreeVerb_lastOut" "', argument " "1"" of type '" "stk::FreeVerb *""'"); 
  }
  arg1 = reinterpret_cast< stk::FreeVerb * >(argp1);
  result = (stk::StkFloat)(arg1)->lastOut();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FreeVerb_lastOut(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "FreeVerb_lastOut", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__FreeVerb, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_FreeVerb_lastOut__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__FreeVerb, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_FreeVerb_lastOut__SWIG_0(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'FreeVerb_lastOut'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::FreeVerb::lastOut(unsigned int)\n"
    "    stk::FreeVerb::lastOut()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_FreeVerb_tick__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::FreeVerb *arg1 = (stk::FreeVerb *) 0 ;
  stk::StkFloat arg2 ;
  stk::StkFloat arg3 ;
  unsigned int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FreeVerb, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FreeVerb_tick" "', argument " "1"" of type '" "stk::FreeVerb *""'"); 
  }
  arg1 = reinterpret_cast< stk::FreeVerb * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FreeVerb_tick" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "FreeVerb_tick" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  ecode4 = SWIG_AsVal_unsigned_SS_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "FreeVerb_tick" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  result = (stk::StkFloat)(arg1)->tick(arg2,arg3,arg4);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FreeVerb_tick__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::FreeVerb *arg1 = (stk::FreeVerb *) 0 ;
  stk::StkFloat arg2 ;
  stk::StkFloat arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FreeVerb, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FreeVerb_tick" "', argument " "1"" of type '" "stk::FreeVerb *""'"); 
  }
  arg1 = reinterpret_cast< stk::FreeVerb * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FreeVerb_tick" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "FreeVerb_tick" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  result = (stk::StkFloat)(arg1)->tick(arg2,arg3);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FreeVerb_tick__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::FreeVerb *arg1 = (stk::FreeVerb *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FreeVerb, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FreeVerb_tick" "', argument " "1"" of type '" "stk::FreeVerb *""'"); 
  }
  arg1 = reinterpret_cast< stk::FreeVerb * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FreeVerb_tick" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  result = (stk::StkFloat)(arg1)->tick(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FreeVerb_tick__SWIG_3(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::FreeVerb *arg1 = (stk::FreeVerb *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FreeVerb, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FreeVerb_tick" "', argument " "1"" of type '" "stk::FreeVerb *""'"); 
  }
  arg1 = reinterpret_cast< stk::FreeVerb * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FreeVerb_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FreeVerb_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "FreeVerb_tick" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FreeVerb_tick__SWIG_4(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::FreeVerb *arg1 = (stk::FreeVerb *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FreeVerb, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FreeVerb_tick" "', argument " "1"" of type '" "stk::FreeVerb *""'"); 
  }
  arg1 = reinterpret_cast< stk::FreeVerb * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FreeVerb_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FreeVerb_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FreeVerb_tick__SWIG_5(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::FreeVerb *arg1 = (stk::FreeVerb *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  stk::StkFrames *arg3 = 0 ;
  unsigned int arg4 ;
  unsigned int arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  unsigned int val5 ;
  int ecode5 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FreeVerb, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FreeVerb_tick" "', argument " "1"" of type '" "stk::FreeVerb *""'"); 
  }
  arg1 = reinterpret_cast< stk::FreeVerb * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FreeVerb_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FreeVerb_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "FreeVerb_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FreeVerb_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  arg3 = reinterpret_cast< stk::StkFrames * >(argp3);
  ecode4 = SWIG_AsVal_unsigned_SS_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "FreeVerb_tick" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  ecode5 = SWIG_AsVal_unsigned_SS_int(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "FreeVerb_tick" "', argument " "5"" of type '" "unsigned int""'");
  } 
  arg5 = static_cast< unsigned int >(val5);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,*arg3,arg4,arg5);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FreeVerb_tick__SWIG_6(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::FreeVerb *arg1 = (stk::FreeVerb *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  stk::StkFrames *arg3 = 0 ;
  unsigned int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FreeVerb, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FreeVerb_tick" "', argument " "1"" of type '" "stk::FreeVerb *""'"); 
  }
  arg1 = reinterpret_cast< stk::FreeVerb * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FreeVerb_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FreeVerb_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "FreeVerb_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FreeVerb_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  arg3 = reinterpret_cast< stk::StkFrames * >(argp3);
  ecode4 = SWIG_AsVal_unsigned_SS_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "FreeVerb_tick" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,*arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FreeVerb_tick__SWIG_7(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::FreeVerb *arg1 = (stk::FreeVerb *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  stk::StkFrames *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__FreeVerb, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FreeVerb_tick" "', argument " "1"" of type '" "stk::FreeVerb *""'"); 
  }
  arg1 = reinterpret_cast< stk::FreeVerb * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FreeVerb_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FreeVerb_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "FreeVerb_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FreeVerb_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  arg3 = reinterpret_cast< stk::StkFrames * >(argp3);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,*arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FreeVerb_tick(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[6] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "FreeVerb_tick", 0, 5, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__FreeVerb, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_FreeVerb_tick__SWIG_4(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__FreeVerb, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_FreeVerb_tick__SWIG_2(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__FreeVerb, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_FreeVerb_tick__SWIG_7(self, argc, argv);
        }
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__FreeVerb, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_FreeVerb_tick__SWIG_3(self, argc, argv);
        }
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__FreeVerb, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_FreeVerb_tick__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  if (argc == 4) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__FreeVerb, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_FreeVerb_tick__SWIG_6(self, argc, argv);
          }
        }
      }
    }
  }
  if (argc == 4) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__FreeVerb, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_FreeVerb_tick__SWIG_0(self, argc, argv);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__FreeVerb, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_unsigned_SS_int(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_FreeVerb_tick__SWIG_5(self, argc, argv);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'FreeVerb_tick'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::FreeVerb::tick(stk::StkFloat,stk::StkFloat,unsigned int)\n"
    "    stk::FreeVerb::tick(stk::StkFloat,stk::StkFloat)\n"
    "    stk::FreeVerb::tick(stk::StkFloat)\n"
    "    stk::FreeVerb::tick(stk::StkFrames &,unsigned int)\n"
    "    stk::FreeVerb::tick(stk::StkFrames &)\n"
    "    stk::FreeVerb::tick(stk::StkFrames &,stk::StkFrames &,unsigned int,unsigned int)\n"
    "    stk::FreeVerb::tick(stk::StkFrames &,stk::StkFrames &,unsigned int)\n"
    "    stk::FreeVerb::tick(stk::StkFrames &,stk::StkFrames &)\n");
  return 0;
}


SWIGINTERN PyObject *FreeVerb_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_stk__FreeVerb, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *FreeVerb_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_Granulate__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  stk::Granulate *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (stk::Granulate *)new stk::Granulate();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__Granulate, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Granulate__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  std::string arg2 ;
  bool arg3 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  stk::Granulate *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Granulate" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  {
    res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__string,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_Granulate" "', argument " "2"" of type '" "std::string""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Granulate" "', argument " "2"" of type '" "std::string""'");
    } else {
      std::string * temp = reinterpret_cast< std::string * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  ecode3 = SWIG_AsVal_bool(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_Granulate" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  result = (stk::Granulate *)new stk::Granulate(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__Granulate, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Granulate__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  std::string arg2 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  stk::Granulate *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Granulate" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  {
    res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__string,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_Granulate" "', argument " "2"" of type '" "std::string""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Granulate" "', argument " "2"" of type '" "std::string""'");
    } else {
      std::string * temp = reinterpret_cast< std::string * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (stk::Granulate *)new stk::Granulate(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__Granulate, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Granulate(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_Granulate", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_Granulate__SWIG_0(self, argc, argv);
  }
  if (argc == 2) {
    int _v = 0;
    {
      int res = SWIG_AsVal_unsigned_SS_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__string, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_Granulate__SWIG_2(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    {
      int res = SWIG_AsVal_unsigned_SS_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__string, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_Granulate__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_Granulate'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::Granulate::Granulate()\n"
    "    stk::Granulate::Granulate(unsigned int,std::string,bool)\n"
    "    stk::Granulate::Granulate(unsigned int,std::string)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_Granulate(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Granulate *arg1 = (stk::Granulate *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Granulate, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Granulate" "', argument " "1"" of type '" "stk::Granulate *""'"); 
  }
  arg1 = reinterpret_cast< stk::Granulate * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Granulate_openFile__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Granulate *arg1 = (stk::Granulate *) 0 ;
  std::string arg2 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Granulate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Granulate_openFile" "', argument " "1"" of type '" "stk::Granulate *""'"); 
  }
  arg1 = reinterpret_cast< stk::Granulate * >(argp1);
  {
    res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__string,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Granulate_openFile" "', argument " "2"" of type '" "std::string""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Granulate_openFile" "', argument " "2"" of type '" "std::string""'");
    } else {
      std::string * temp = reinterpret_cast< std::string * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  ecode3 = SWIG_AsVal_bool(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Granulate_openFile" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  (arg1)->openFile(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Granulate_openFile__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Granulate *arg1 = (stk::Granulate *) 0 ;
  std::string arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Granulate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Granulate_openFile" "', argument " "1"" of type '" "stk::Granulate *""'"); 
  }
  arg1 = reinterpret_cast< stk::Granulate * >(argp1);
  {
    res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__string,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Granulate_openFile" "', argument " "2"" of type '" "std::string""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Granulate_openFile" "', argument " "2"" of type '" "std::string""'");
    } else {
      std::string * temp = reinterpret_cast< std::string * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->openFile(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Granulate_openFile(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Granulate_openFile", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Granulate, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__string, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Granulate_openFile__SWIG_1(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Granulate, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__string, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Granulate_openFile__SWIG_0(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Granulate_openFile'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::Granulate::openFile(std::string,bool)\n"
    "    stk::Granulate::openFile(std::string)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Granulate_reset(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Granulate *arg1 = (stk::Granulate *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Granulate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Granulate_reset" "', argument " "1"" of type '" "stk::Granulate *""'"); 
  }
  arg1 = reinterpret_cast< stk::Granulate * >(argp1);
  (arg1)->reset();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Granulate_setVoices__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Granulate *arg1 = (stk::Granulate *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Granulate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Granulate_setVoices" "', argument " "1"" of type '" "stk::Granulate *""'"); 
  }
  arg1 = reinterpret_cast< stk::Granulate * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Granulate_setVoices" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  (arg1)->setVoices(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Granulate_setVoices__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Granulate *arg1 = (stk::Granulate *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Granulate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Granulate_setVoices" "', argument " "1"" of type '" "stk::Granulate *""'"); 
  }
  arg1 = reinterpret_cast< stk::Granulate * >(argp1);
  (arg1)->setVoices();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Granulate_setVoices(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Granulate_setVoices", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Granulate, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Granulate_setVoices__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Granulate, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Granulate_setVoices__SWIG_0(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Granulate_setVoices'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::Granulate::setVoices(unsigned int)\n"
    "    stk::Granulate::setVoices()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Granulate_setStretch__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Granulate *arg1 = (stk::Granulate *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Granulate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Granulate_setStretch" "', argument " "1"" of type '" "stk::Granulate *""'"); 
  }
  arg1 = reinterpret_cast< stk::Granulate * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Granulate_setStretch" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  (arg1)->setStretch(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Granulate_setStretch__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Granulate *arg1 = (stk::Granulate *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Granulate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Granulate_setStretch" "', argument " "1"" of type '" "stk::Granulate *""'"); 
  }
  arg1 = reinterpret_cast< stk::Granulate * >(argp1);
  (arg1)->setStretch();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Granulate_setStretch(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Granulate_setStretch", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Granulate, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Granulate_setStretch__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Granulate, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Granulate_setStretch__SWIG_0(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Granulate_setStretch'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::Granulate::setStretch(unsigned int)\n"
    "    stk::Granulate::setStretch()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Granulate_setGrainParameters__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Granulate *arg1 = (stk::Granulate *) 0 ;
  unsigned int arg2 ;
  unsigned int arg3 ;
  int arg4 ;
  unsigned int arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  unsigned int val5 ;
  int ecode5 = 0 ;
  
  if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Granulate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Granulate_setGrainParameters" "', argument " "1"" of type '" "stk::Granulate *""'"); 
  }
  arg1 = reinterpret_cast< stk::Granulate * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Granulate_setGrainParameters" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Granulate_setGrainParameters" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  ecode4 = SWIG_AsVal_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Granulate_setGrainParameters" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  ecode5 = SWIG_AsVal_unsigned_SS_int(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "Granulate_setGrainParameters" "', argument " "5"" of type '" "unsigned int""'");
  } 
  arg5 = static_cast< unsigned int >(val5);
  (arg1)->setGrainParameters(arg2,arg3,arg4,arg5);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Granulate_setGrainParameters__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Granulate *arg1 = (stk::Granulate *) 0 ;
  unsigned int arg2 ;
  unsigned int arg3 ;
  int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Granulate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Granulate_setGrainParameters" "', argument " "1"" of type '" "stk::Granulate *""'"); 
  }
  arg1 = reinterpret_cast< stk::Granulate * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Granulate_setGrainParameters" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Granulate_setGrainParameters" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  ecode4 = SWIG_AsVal_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Granulate_setGrainParameters" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  (arg1)->setGrainParameters(arg2,arg3,arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Granulate_setGrainParameters__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Granulate *arg1 = (stk::Granulate *) 0 ;
  unsigned int arg2 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Granulate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Granulate_setGrainParameters" "', argument " "1"" of type '" "stk::Granulate *""'"); 
  }
  arg1 = reinterpret_cast< stk::Granulate * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Granulate_setGrainParameters" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Granulate_setGrainParameters" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  (arg1)->setGrainParameters(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Granulate_setGrainParameters__SWIG_3(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Granulate *arg1 = (stk::Granulate *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Granulate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Granulate_setGrainParameters" "', argument " "1"" of type '" "stk::Granulate *""'"); 
  }
  arg1 = reinterpret_cast< stk::Granulate * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Granulate_setGrainParameters" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  (arg1)->setGrainParameters(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Granulate_setGrainParameters__SWIG_4(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Granulate *arg1 = (stk::Granulate *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Granulate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Granulate_setGrainParameters" "', argument " "1"" of type '" "stk::Granulate *""'"); 
  }
  arg1 = reinterpret_cast< stk::Granulate * >(argp1);
  (arg1)->setGrainParameters();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Granulate_setGrainParameters(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[6] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Granulate_setGrainParameters", 0, 5, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Granulate, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Granulate_setGrainParameters__SWIG_4(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Granulate, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Granulate_setGrainParameters__SWIG_3(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Granulate, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Granulate_setGrainParameters__SWIG_2(self, argc, argv);
        }
      }
    }
  }
  if (argc == 4) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Granulate, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_Granulate_setGrainParameters__SWIG_1(self, argc, argv);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Granulate, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_unsigned_SS_int(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_Granulate_setGrainParameters__SWIG_0(self, argc, argv);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Granulate_setGrainParameters'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::Granulate::setGrainParameters(unsigned int,unsigned int,int,unsigned int)\n"
    "    stk::Granulate::setGrainParameters(unsigned int,unsigned int,int)\n"
    "    stk::Granulate::setGrainParameters(unsigned int,unsigned int)\n"
    "    stk::Granulate::setGrainParameters(unsigned int)\n"
    "    stk::Granulate::setGrainParameters()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Granulate_setRandomFactor__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Granulate *arg1 = (stk::Granulate *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Granulate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Granulate_setRandomFactor" "', argument " "1"" of type '" "stk::Granulate *""'"); 
  }
  arg1 = reinterpret_cast< stk::Granulate * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Granulate_setRandomFactor" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setRandomFactor(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Granulate_setRandomFactor__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Granulate *arg1 = (stk::Granulate *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Granulate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Granulate_setRandomFactor" "', argument " "1"" of type '" "stk::Granulate *""'"); 
  }
  arg1 = reinterpret_cast< stk::Granulate * >(argp1);
  (arg1)->setRandomFactor();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Granulate_setRandomFactor(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Granulate_setRandomFactor", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Granulate, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Granulate_setRandomFactor__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Granulate, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Granulate_setRandomFactor__SWIG_0(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Granulate_setRandomFactor'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::Granulate::setRandomFactor(stk::StkFloat)\n"
    "    stk::Granulate::setRandomFactor()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Granulate_lastOut__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Granulate *arg1 = (stk::Granulate *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Granulate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Granulate_lastOut" "', argument " "1"" of type '" "stk::Granulate *""'"); 
  }
  arg1 = reinterpret_cast< stk::Granulate * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Granulate_lastOut" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (stk::StkFloat)(arg1)->lastOut(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Granulate_lastOut__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Granulate *arg1 = (stk::Granulate *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Granulate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Granulate_lastOut" "', argument " "1"" of type '" "stk::Granulate *""'"); 
  }
  arg1 = reinterpret_cast< stk::Granulate * >(argp1);
  result = (stk::StkFloat)(arg1)->lastOut();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Granulate_lastOut(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Granulate_lastOut", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Granulate, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Granulate_lastOut__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Granulate, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Granulate_lastOut__SWIG_0(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Granulate_lastOut'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::Granulate::lastOut(unsigned int)\n"
    "    stk::Granulate::lastOut()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Granulate_tick__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Granulate *arg1 = (stk::Granulate *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Granulate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Granulate_tick" "', argument " "1"" of type '" "stk::Granulate *""'"); 
  }
  arg1 = reinterpret_cast< stk::Granulate * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Granulate_tick" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (stk::StkFloat)(arg1)->tick(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Granulate_tick__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Granulate *arg1 = (stk::Granulate *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Granulate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Granulate_tick" "', argument " "1"" of type '" "stk::Granulate *""'"); 
  }
  arg1 = reinterpret_cast< stk::Granulate * >(argp1);
  result = (stk::StkFloat)(arg1)->tick();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Granulate_tick__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Granulate *arg1 = (stk::Granulate *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Granulate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Granulate_tick" "', argument " "1"" of type '" "stk::Granulate *""'"); 
  }
  arg1 = reinterpret_cast< stk::Granulate * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Granulate_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Granulate_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Granulate_tick" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Granulate_tick__SWIG_3(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Granulate *arg1 = (stk::Granulate *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Granulate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Granulate_tick" "', argument " "1"" of type '" "stk::Granulate *""'"); 
  }
  arg1 = reinterpret_cast< stk::Granulate * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Granulate_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Granulate_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Granulate_tick(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Granulate_tick", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Granulate, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Granulate_tick__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Granulate, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Granulate_tick__SWIG_3(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Granulate, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Granulate_tick__SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Granulate, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Granulate_tick__SWIG_2(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Granulate_tick'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::Granulate::tick(unsigned int)\n"
    "    stk::Granulate::tick()\n"
    "    stk::Granulate::tick(stk::StkFrames &,unsigned int)\n"
    "    stk::Granulate::tick(stk::StkFrames &)\n");
  return 0;
}


SWIGINTERN PyObject *Granulate_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_stk__Granulate, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *Granulate_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_Guitar__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  std::string arg2 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  stk::Guitar *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Guitar" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  {
    res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__string,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_Guitar" "', argument " "2"" of type '" "std::string""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Guitar" "', argument " "2"" of type '" "std::string""'");
    } else {
      std::string * temp = reinterpret_cast< std::string * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (stk::Guitar *)new stk::Guitar(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__Guitar, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Guitar__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  stk::Guitar *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Guitar" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  result = (stk::Guitar *)new stk::Guitar(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__Guitar, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Guitar__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  stk::Guitar *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (stk::Guitar *)new stk::Guitar();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__Guitar, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Guitar(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_Guitar", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_Guitar__SWIG_2(self, argc, argv);
  }
  if (argc == 1) {
    int _v = 0;
    {
      int res = SWIG_AsVal_unsigned_SS_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_Guitar__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    {
      int res = SWIG_AsVal_unsigned_SS_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__string, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_Guitar__SWIG_0(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_Guitar'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::Guitar::Guitar(unsigned int,std::string)\n"
    "    stk::Guitar::Guitar(unsigned int)\n"
    "    stk::Guitar::Guitar()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Guitar_clear(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Guitar *arg1 = (stk::Guitar *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Guitar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Guitar_clear" "', argument " "1"" of type '" "stk::Guitar *""'"); 
  }
  arg1 = reinterpret_cast< stk::Guitar * >(argp1);
  (arg1)->clear();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Guitar_setBodyFile__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Guitar *arg1 = (stk::Guitar *) 0 ;
  std::string arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Guitar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Guitar_setBodyFile" "', argument " "1"" of type '" "stk::Guitar *""'"); 
  }
  arg1 = reinterpret_cast< stk::Guitar * >(argp1);
  {
    res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__string,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Guitar_setBodyFile" "', argument " "2"" of type '" "std::string""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Guitar_setBodyFile" "', argument " "2"" of type '" "std::string""'");
    } else {
      std::string * temp = reinterpret_cast< std::string * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->setBodyFile(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Guitar_setBodyFile__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Guitar *arg1 = (stk::Guitar *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Guitar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Guitar_setBodyFile" "', argument " "1"" of type '" "stk::Guitar *""'"); 
  }
  arg1 = reinterpret_cast< stk::Guitar * >(argp1);
  (arg1)->setBodyFile();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Guitar_setBodyFile(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Guitar_setBodyFile", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Guitar, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Guitar_setBodyFile__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Guitar, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__string, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Guitar_setBodyFile__SWIG_0(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Guitar_setBodyFile'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::Guitar::setBodyFile(std::string)\n"
    "    stk::Guitar::setBodyFile()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Guitar_setPluckPosition__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Guitar *arg1 = (stk::Guitar *) 0 ;
  stk::StkFloat arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Guitar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Guitar_setPluckPosition" "', argument " "1"" of type '" "stk::Guitar *""'"); 
  }
  arg1 = reinterpret_cast< stk::Guitar * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Guitar_setPluckPosition" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Guitar_setPluckPosition" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  (arg1)->setPluckPosition(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Guitar_setPluckPosition__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Guitar *arg1 = (stk::Guitar *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Guitar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Guitar_setPluckPosition" "', argument " "1"" of type '" "stk::Guitar *""'"); 
  }
  arg1 = reinterpret_cast< stk::Guitar * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Guitar_setPluckPosition" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setPluckPosition(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Guitar_setPluckPosition(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Guitar_setPluckPosition", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Guitar, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Guitar_setPluckPosition__SWIG_1(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Guitar, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Guitar_setPluckPosition__SWIG_0(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Guitar_setPluckPosition'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::Guitar::setPluckPosition(stk::StkFloat,int)\n"
    "    stk::Guitar::setPluckPosition(stk::StkFloat)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Guitar_setLoopGain__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Guitar *arg1 = (stk::Guitar *) 0 ;
  stk::StkFloat arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Guitar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Guitar_setLoopGain" "', argument " "1"" of type '" "stk::Guitar *""'"); 
  }
  arg1 = reinterpret_cast< stk::Guitar * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Guitar_setLoopGain" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Guitar_setLoopGain" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  (arg1)->setLoopGain(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Guitar_setLoopGain__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Guitar *arg1 = (stk::Guitar *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Guitar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Guitar_setLoopGain" "', argument " "1"" of type '" "stk::Guitar *""'"); 
  }
  arg1 = reinterpret_cast< stk::Guitar * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Guitar_setLoopGain" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setLoopGain(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Guitar_setLoopGain(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Guitar_setLoopGain", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Guitar, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Guitar_setLoopGain__SWIG_1(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Guitar, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Guitar_setLoopGain__SWIG_0(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Guitar_setLoopGain'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::Guitar::setLoopGain(stk::StkFloat,int)\n"
    "    stk::Guitar::setLoopGain(stk::StkFloat)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Guitar_setFrequency__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Guitar *arg1 = (stk::Guitar *) 0 ;
  stk::StkFloat arg2 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Guitar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Guitar_setFrequency" "', argument " "1"" of type '" "stk::Guitar *""'"); 
  }
  arg1 = reinterpret_cast< stk::Guitar * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Guitar_setFrequency" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Guitar_setFrequency" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  (arg1)->setFrequency(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Guitar_setFrequency__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Guitar *arg1 = (stk::Guitar *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Guitar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Guitar_setFrequency" "', argument " "1"" of type '" "stk::Guitar *""'"); 
  }
  arg1 = reinterpret_cast< stk::Guitar * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Guitar_setFrequency" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setFrequency(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Guitar_setFrequency(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Guitar_setFrequency", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Guitar, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Guitar_setFrequency__SWIG_1(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Guitar, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Guitar_setFrequency__SWIG_0(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Guitar_setFrequency'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::Guitar::setFrequency(stk::StkFloat,unsigned int)\n"
    "    stk::Guitar::setFrequency(stk::StkFloat)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Guitar_noteOn__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Guitar *arg1 = (stk::Guitar *) 0 ;
  stk::StkFloat arg2 ;
  stk::StkFloat arg3 ;
  unsigned int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Guitar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Guitar_noteOn" "', argument " "1"" of type '" "stk::Guitar *""'"); 
  }
  arg1 = reinterpret_cast< stk::Guitar * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Guitar_noteOn" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Guitar_noteOn" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  ecode4 = SWIG_AsVal_unsigned_SS_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Guitar_noteOn" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  (arg1)->noteOn(arg2,arg3,arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Guitar_noteOn__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Guitar *arg1 = (stk::Guitar *) 0 ;
  stk::StkFloat arg2 ;
  stk::StkFloat arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Guitar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Guitar_noteOn" "', argument " "1"" of type '" "stk::Guitar *""'"); 
  }
  arg1 = reinterpret_cast< stk::Guitar * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Guitar_noteOn" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Guitar_noteOn" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  (arg1)->noteOn(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Guitar_noteOn(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Guitar_noteOn", 0, 4, argv))) SWIG_fail;
  --argc;
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Guitar, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Guitar_noteOn__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  if (argc == 4) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Guitar, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_Guitar_noteOn__SWIG_0(self, argc, argv);
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Guitar_noteOn'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::Guitar::noteOn(stk::StkFloat,stk::StkFloat,unsigned int)\n"
    "    stk::Guitar::noteOn(stk::StkFloat,stk::StkFloat)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Guitar_noteOff__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Guitar *arg1 = (stk::Guitar *) 0 ;
  stk::StkFloat arg2 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Guitar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Guitar_noteOff" "', argument " "1"" of type '" "stk::Guitar *""'"); 
  }
  arg1 = reinterpret_cast< stk::Guitar * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Guitar_noteOff" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Guitar_noteOff" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  (arg1)->noteOff(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Guitar_noteOff__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Guitar *arg1 = (stk::Guitar *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Guitar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Guitar_noteOff" "', argument " "1"" of type '" "stk::Guitar *""'"); 
  }
  arg1 = reinterpret_cast< stk::Guitar * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Guitar_noteOff" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->noteOff(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Guitar_noteOff(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Guitar_noteOff", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Guitar, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Guitar_noteOff__SWIG_1(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Guitar, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Guitar_noteOff__SWIG_0(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Guitar_noteOff'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::Guitar::noteOff(stk::StkFloat,unsigned int)\n"
    "    stk::Guitar::noteOff(stk::StkFloat)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Guitar_controlChange__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Guitar *arg1 = (stk::Guitar *) 0 ;
  int arg2 ;
  stk::StkFloat arg3 ;
  int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Guitar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Guitar_controlChange" "', argument " "1"" of type '" "stk::Guitar *""'"); 
  }
  arg1 = reinterpret_cast< stk::Guitar * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Guitar_controlChange" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Guitar_controlChange" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  ecode4 = SWIG_AsVal_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Guitar_controlChange" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  (arg1)->controlChange(arg2,arg3,arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Guitar_controlChange__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Guitar *arg1 = (stk::Guitar *) 0 ;
  int arg2 ;
  stk::StkFloat arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Guitar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Guitar_controlChange" "', argument " "1"" of type '" "stk::Guitar *""'"); 
  }
  arg1 = reinterpret_cast< stk::Guitar * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Guitar_controlChange" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Guitar_controlChange" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  (arg1)->controlChange(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Guitar_controlChange(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Guitar_controlChange", 0, 4, argv))) SWIG_fail;
  --argc;
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Guitar, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Guitar_controlChange__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  if (argc == 4) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Guitar, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_Guitar_controlChange__SWIG_0(self, argc, argv);
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Guitar_controlChange'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::Guitar::controlChange(int,stk::StkFloat,int)\n"
    "    stk::Guitar::controlChange(int,stk::StkFloat)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Guitar_lastOut(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Guitar *arg1 = (stk::Guitar *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  stk::StkFloat result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Guitar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Guitar_lastOut" "', argument " "1"" of type '" "stk::Guitar *""'"); 
  }
  arg1 = reinterpret_cast< stk::Guitar * >(argp1);
  result = (stk::StkFloat)(arg1)->lastOut();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Guitar_tick__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Guitar *arg1 = (stk::Guitar *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Guitar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Guitar_tick" "', argument " "1"" of type '" "stk::Guitar *""'"); 
  }
  arg1 = reinterpret_cast< stk::Guitar * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Guitar_tick" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  result = (stk::StkFloat)(arg1)->tick(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Guitar_tick__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Guitar *arg1 = (stk::Guitar *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Guitar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Guitar_tick" "', argument " "1"" of type '" "stk::Guitar *""'"); 
  }
  arg1 = reinterpret_cast< stk::Guitar * >(argp1);
  result = (stk::StkFloat)(arg1)->tick();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Guitar_tick__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Guitar *arg1 = (stk::Guitar *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Guitar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Guitar_tick" "', argument " "1"" of type '" "stk::Guitar *""'"); 
  }
  arg1 = reinterpret_cast< stk::Guitar * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Guitar_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Guitar_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Guitar_tick" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Guitar_tick__SWIG_3(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Guitar *arg1 = (stk::Guitar *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Guitar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Guitar_tick" "', argument " "1"" of type '" "stk::Guitar *""'"); 
  }
  arg1 = reinterpret_cast< stk::Guitar * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Guitar_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Guitar_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Guitar_tick__SWIG_4(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Guitar *arg1 = (stk::Guitar *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  stk::StkFrames *arg3 = 0 ;
  unsigned int arg4 ;
  unsigned int arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  unsigned int val5 ;
  int ecode5 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Guitar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Guitar_tick" "', argument " "1"" of type '" "stk::Guitar *""'"); 
  }
  arg1 = reinterpret_cast< stk::Guitar * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Guitar_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Guitar_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Guitar_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Guitar_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  arg3 = reinterpret_cast< stk::StkFrames * >(argp3);
  ecode4 = SWIG_AsVal_unsigned_SS_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Guitar_tick" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  ecode5 = SWIG_AsVal_unsigned_SS_int(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "Guitar_tick" "', argument " "5"" of type '" "unsigned int""'");
  } 
  arg5 = static_cast< unsigned int >(val5);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,*arg3,arg4,arg5);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Guitar_tick__SWIG_5(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Guitar *arg1 = (stk::Guitar *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  stk::StkFrames *arg3 = 0 ;
  unsigned int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Guitar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Guitar_tick" "', argument " "1"" of type '" "stk::Guitar *""'"); 
  }
  arg1 = reinterpret_cast< stk::Guitar * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Guitar_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Guitar_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Guitar_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Guitar_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  arg3 = reinterpret_cast< stk::StkFrames * >(argp3);
  ecode4 = SWIG_AsVal_unsigned_SS_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Guitar_tick" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,*arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Guitar_tick__SWIG_6(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Guitar *arg1 = (stk::Guitar *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  stk::StkFrames *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Guitar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Guitar_tick" "', argument " "1"" of type '" "stk::Guitar *""'"); 
  }
  arg1 = reinterpret_cast< stk::Guitar * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Guitar_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Guitar_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Guitar_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Guitar_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  arg3 = reinterpret_cast< stk::StkFrames * >(argp3);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,*arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Guitar_tick(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[6] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Guitar_tick", 0, 5, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Guitar, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Guitar_tick__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Guitar, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Guitar_tick__SWIG_3(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Guitar, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Guitar_tick__SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Guitar, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_Guitar_tick__SWIG_6(self, argc, argv);
        }
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Guitar, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Guitar_tick__SWIG_2(self, argc, argv);
        }
      }
    }
  }
  if (argc == 4) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Guitar, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_Guitar_tick__SWIG_5(self, argc, argv);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Guitar, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_unsigned_SS_int(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_Guitar_tick__SWIG_4(self, argc, argv);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Guitar_tick'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::Guitar::tick(stk::StkFloat)\n"
    "    stk::Guitar::tick()\n"
    "    stk::Guitar::tick(stk::StkFrames &,unsigned int)\n"
    "    stk::Guitar::tick(stk::StkFrames &)\n"
    "    stk::Guitar::tick(stk::StkFrames &,stk::StkFrames &,unsigned int,unsigned int)\n"
    "    stk::Guitar::tick(stk::StkFrames &,stk::StkFrames &,unsigned int)\n"
    "    stk::Guitar::tick(stk::StkFrames &,stk::StkFrames &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_Guitar(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Guitar *arg1 = (stk::Guitar *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Guitar, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Guitar" "', argument " "1"" of type '" "stk::Guitar *""'"); 
  }
  arg1 = reinterpret_cast< stk::Guitar * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Guitar_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_stk__Guitar, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *Guitar_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_HevyMetl(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::HevyMetl *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_HevyMetl", 0, 0, 0)) SWIG_fail;
  result = (stk::HevyMetl *)new stk::HevyMetl();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__HevyMetl, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_HevyMetl(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::HevyMetl *arg1 = (stk::HevyMetl *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__HevyMetl, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_HevyMetl" "', argument " "1"" of type '" "stk::HevyMetl *""'"); 
  }
  arg1 = reinterpret_cast< stk::HevyMetl * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_HevyMetl_noteOn(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::HevyMetl *arg1 = (stk::HevyMetl *) 0 ;
  stk::StkFloat arg2 ;
  stk::StkFloat arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "HevyMetl_noteOn", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__HevyMetl, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "HevyMetl_noteOn" "', argument " "1"" of type '" "stk::HevyMetl *""'"); 
  }
  arg1 = reinterpret_cast< stk::HevyMetl * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "HevyMetl_noteOn" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "HevyMetl_noteOn" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  (arg1)->noteOn(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_HevyMetl_tick__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::HevyMetl *arg1 = (stk::HevyMetl *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__HevyMetl, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "HevyMetl_tick" "', argument " "1"" of type '" "stk::HevyMetl *""'"); 
  }
  arg1 = reinterpret_cast< stk::HevyMetl * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "HevyMetl_tick" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (stk::StkFloat)(arg1)->tick(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_HevyMetl_tick__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::HevyMetl *arg1 = (stk::HevyMetl *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__HevyMetl, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "HevyMetl_tick" "', argument " "1"" of type '" "stk::HevyMetl *""'"); 
  }
  arg1 = reinterpret_cast< stk::HevyMetl * >(argp1);
  result = (stk::StkFloat)(arg1)->tick();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_HevyMetl_tick__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::HevyMetl *arg1 = (stk::HevyMetl *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__HevyMetl, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "HevyMetl_tick" "', argument " "1"" of type '" "stk::HevyMetl *""'"); 
  }
  arg1 = reinterpret_cast< stk::HevyMetl * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "HevyMetl_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "HevyMetl_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "HevyMetl_tick" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_HevyMetl_tick__SWIG_3(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::HevyMetl *arg1 = (stk::HevyMetl *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__HevyMetl, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "HevyMetl_tick" "', argument " "1"" of type '" "stk::HevyMetl *""'"); 
  }
  arg1 = reinterpret_cast< stk::HevyMetl * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "HevyMetl_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "HevyMetl_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_HevyMetl_tick(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "HevyMetl_tick", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__HevyMetl, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_HevyMetl_tick__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__HevyMetl, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_HevyMetl_tick__SWIG_3(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__HevyMetl, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_HevyMetl_tick__SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__HevyMetl, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_HevyMetl_tick__SWIG_2(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'HevyMetl_tick'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::HevyMetl::tick(unsigned int)\n"
    "    stk::HevyMetl::tick()\n"
    "    stk::HevyMetl::tick(stk::StkFrames &,unsigned int)\n"
    "    stk::HevyMetl::tick(stk::StkFrames &)\n");
  return 0;
}


SWIGINTERN PyObject *HevyMetl_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_stk__HevyMetl, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *HevyMetl_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_Iir__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  stk::Iir *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (stk::Iir *)new stk::Iir();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__Iir, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Iir__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::vector< stk::StkFloat,std::allocator< stk::StkFloat > > *arg1 = 0 ;
  std::vector< stk::StkFloat,std::allocator< stk::StkFloat > > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  stk::Iir *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Iir" "', argument " "1"" of type '" "std::vector< stk::StkFloat,std::allocator< stk::StkFloat > > &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Iir" "', argument " "1"" of type '" "std::vector< stk::StkFloat,std::allocator< stk::StkFloat > > &""'"); 
  }
  arg1 = reinterpret_cast< std::vector< stk::StkFloat,std::allocator< stk::StkFloat > > * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_Iir" "', argument " "2"" of type '" "std::vector< stk::StkFloat,std::allocator< stk::StkFloat > > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Iir" "', argument " "2"" of type '" "std::vector< stk::StkFloat,std::allocator< stk::StkFloat > > &""'"); 
  }
  arg2 = reinterpret_cast< std::vector< stk::StkFloat,std::allocator< stk::StkFloat > > * >(argp2);
  result = (stk::Iir *)new stk::Iir(*arg1,*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__Iir, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Iir(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_Iir", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_Iir__SWIG_0(self, argc, argv);
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, SWIG_POINTER_NO_NULL);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_Iir__SWIG_1(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_Iir'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::Iir::Iir()\n"
    "    stk::Iir::Iir(std::vector< stk::StkFloat,std::allocator< stk::StkFloat > > &,std::vector< stk::StkFloat,std::allocator< stk::StkFloat > > &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_Iir(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Iir *arg1 = (stk::Iir *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Iir, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Iir" "', argument " "1"" of type '" "stk::Iir *""'"); 
  }
  arg1 = reinterpret_cast< stk::Iir * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Iir_setCoefficients__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Iir *arg1 = (stk::Iir *) 0 ;
  std::vector< stk::StkFloat,std::allocator< stk::StkFloat > > *arg2 = 0 ;
  std::vector< stk::StkFloat,std::allocator< stk::StkFloat > > *arg3 = 0 ;
  bool arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Iir, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Iir_setCoefficients" "', argument " "1"" of type '" "stk::Iir *""'"); 
  }
  arg1 = reinterpret_cast< stk::Iir * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Iir_setCoefficients" "', argument " "2"" of type '" "std::vector< stk::StkFloat,std::allocator< stk::StkFloat > > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Iir_setCoefficients" "', argument " "2"" of type '" "std::vector< stk::StkFloat,std::allocator< stk::StkFloat > > &""'"); 
  }
  arg2 = reinterpret_cast< std::vector< stk::StkFloat,std::allocator< stk::StkFloat > > * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Iir_setCoefficients" "', argument " "3"" of type '" "std::vector< stk::StkFloat,std::allocator< stk::StkFloat > > &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Iir_setCoefficients" "', argument " "3"" of type '" "std::vector< stk::StkFloat,std::allocator< stk::StkFloat > > &""'"); 
  }
  arg3 = reinterpret_cast< std::vector< stk::StkFloat,std::allocator< stk::StkFloat > > * >(argp3);
  ecode4 = SWIG_AsVal_bool(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Iir_setCoefficients" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  (arg1)->setCoefficients(*arg2,*arg3,arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Iir_setCoefficients__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Iir *arg1 = (stk::Iir *) 0 ;
  std::vector< stk::StkFloat,std::allocator< stk::StkFloat > > *arg2 = 0 ;
  std::vector< stk::StkFloat,std::allocator< stk::StkFloat > > *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Iir, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Iir_setCoefficients" "', argument " "1"" of type '" "stk::Iir *""'"); 
  }
  arg1 = reinterpret_cast< stk::Iir * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Iir_setCoefficients" "', argument " "2"" of type '" "std::vector< stk::StkFloat,std::allocator< stk::StkFloat > > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Iir_setCoefficients" "', argument " "2"" of type '" "std::vector< stk::StkFloat,std::allocator< stk::StkFloat > > &""'"); 
  }
  arg2 = reinterpret_cast< std::vector< stk::StkFloat,std::allocator< stk::StkFloat > > * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Iir_setCoefficients" "', argument " "3"" of type '" "std::vector< stk::StkFloat,std::allocator< stk::StkFloat > > &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Iir_setCoefficients" "', argument " "3"" of type '" "std::vector< stk::StkFloat,std::allocator< stk::StkFloat > > &""'"); 
  }
  arg3 = reinterpret_cast< std::vector< stk::StkFloat,std::allocator< stk::StkFloat > > * >(argp3);
  (arg1)->setCoefficients(*arg2,*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Iir_setCoefficients(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Iir_setCoefficients", 0, 4, argv))) SWIG_fail;
  --argc;
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Iir, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, SWIG_POINTER_NO_NULL);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_Iir_setCoefficients__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  if (argc == 4) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Iir, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, SWIG_POINTER_NO_NULL);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_Iir_setCoefficients__SWIG_0(self, argc, argv);
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Iir_setCoefficients'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::Iir::setCoefficients(std::vector< stk::StkFloat,std::allocator< stk::StkFloat > > &,std::vector< stk::StkFloat,std::allocator< stk::StkFloat > > &,bool)\n"
    "    stk::Iir::setCoefficients(std::vector< stk::StkFloat,std::allocator< stk::StkFloat > > &,std::vector< stk::StkFloat,std::allocator< stk::StkFloat > > &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Iir_setNumerator__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Iir *arg1 = (stk::Iir *) 0 ;
  std::vector< stk::StkFloat,std::allocator< stk::StkFloat > > *arg2 = 0 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Iir, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Iir_setNumerator" "', argument " "1"" of type '" "stk::Iir *""'"); 
  }
  arg1 = reinterpret_cast< stk::Iir * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Iir_setNumerator" "', argument " "2"" of type '" "std::vector< stk::StkFloat,std::allocator< stk::StkFloat > > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Iir_setNumerator" "', argument " "2"" of type '" "std::vector< stk::StkFloat,std::allocator< stk::StkFloat > > &""'"); 
  }
  arg2 = reinterpret_cast< std::vector< stk::StkFloat,std::allocator< stk::StkFloat > > * >(argp2);
  ecode3 = SWIG_AsVal_bool(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Iir_setNumerator" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  (arg1)->setNumerator(*arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Iir_setNumerator__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Iir *arg1 = (stk::Iir *) 0 ;
  std::vector< stk::StkFloat,std::allocator< stk::StkFloat > > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Iir, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Iir_setNumerator" "', argument " "1"" of type '" "stk::Iir *""'"); 
  }
  arg1 = reinterpret_cast< stk::Iir * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Iir_setNumerator" "', argument " "2"" of type '" "std::vector< stk::StkFloat,std::allocator< stk::StkFloat > > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Iir_setNumerator" "', argument " "2"" of type '" "std::vector< stk::StkFloat,std::allocator< stk::StkFloat > > &""'"); 
  }
  arg2 = reinterpret_cast< std::vector< stk::StkFloat,std::allocator< stk::StkFloat > > * >(argp2);
  (arg1)->setNumerator(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Iir_setNumerator(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Iir_setNumerator", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Iir, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Iir_setNumerator__SWIG_1(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Iir, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Iir_setNumerator__SWIG_0(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Iir_setNumerator'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::Iir::setNumerator(std::vector< stk::StkFloat,std::allocator< stk::StkFloat > > &,bool)\n"
    "    stk::Iir::setNumerator(std::vector< stk::StkFloat,std::allocator< stk::StkFloat > > &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Iir_setDenominator__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Iir *arg1 = (stk::Iir *) 0 ;
  std::vector< stk::StkFloat,std::allocator< stk::StkFloat > > *arg2 = 0 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Iir, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Iir_setDenominator" "', argument " "1"" of type '" "stk::Iir *""'"); 
  }
  arg1 = reinterpret_cast< stk::Iir * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Iir_setDenominator" "', argument " "2"" of type '" "std::vector< stk::StkFloat,std::allocator< stk::StkFloat > > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Iir_setDenominator" "', argument " "2"" of type '" "std::vector< stk::StkFloat,std::allocator< stk::StkFloat > > &""'"); 
  }
  arg2 = reinterpret_cast< std::vector< stk::StkFloat,std::allocator< stk::StkFloat > > * >(argp2);
  ecode3 = SWIG_AsVal_bool(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Iir_setDenominator" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  (arg1)->setDenominator(*arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Iir_setDenominator__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Iir *arg1 = (stk::Iir *) 0 ;
  std::vector< stk::StkFloat,std::allocator< stk::StkFloat > > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Iir, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Iir_setDenominator" "', argument " "1"" of type '" "stk::Iir *""'"); 
  }
  arg1 = reinterpret_cast< stk::Iir * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Iir_setDenominator" "', argument " "2"" of type '" "std::vector< stk::StkFloat,std::allocator< stk::StkFloat > > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Iir_setDenominator" "', argument " "2"" of type '" "std::vector< stk::StkFloat,std::allocator< stk::StkFloat > > &""'"); 
  }
  arg2 = reinterpret_cast< std::vector< stk::StkFloat,std::allocator< stk::StkFloat > > * >(argp2);
  (arg1)->setDenominator(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Iir_setDenominator(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Iir_setDenominator", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Iir, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Iir_setDenominator__SWIG_1(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Iir, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Iir_setDenominator__SWIG_0(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Iir_setDenominator'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::Iir::setDenominator(std::vector< stk::StkFloat,std::allocator< stk::StkFloat > > &,bool)\n"
    "    stk::Iir::setDenominator(std::vector< stk::StkFloat,std::allocator< stk::StkFloat > > &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Iir_lastOut(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Iir *arg1 = (stk::Iir *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  stk::StkFloat result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Iir, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Iir_lastOut" "', argument " "1"" of type '" "stk::Iir const *""'"); 
  }
  arg1 = reinterpret_cast< stk::Iir * >(argp1);
  result = (stk::StkFloat)((stk::Iir const *)arg1)->lastOut();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Iir_tick__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Iir *arg1 = (stk::Iir *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Iir, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Iir_tick" "', argument " "1"" of type '" "stk::Iir *""'"); 
  }
  arg1 = reinterpret_cast< stk::Iir * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Iir_tick" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  result = (stk::StkFloat)(arg1)->tick(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Iir_tick__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Iir *arg1 = (stk::Iir *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Iir, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Iir_tick" "', argument " "1"" of type '" "stk::Iir *""'"); 
  }
  arg1 = reinterpret_cast< stk::Iir * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Iir_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Iir_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Iir_tick" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Iir_tick__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Iir *arg1 = (stk::Iir *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Iir, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Iir_tick" "', argument " "1"" of type '" "stk::Iir *""'"); 
  }
  arg1 = reinterpret_cast< stk::Iir * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Iir_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Iir_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Iir_tick__SWIG_3(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Iir *arg1 = (stk::Iir *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  stk::StkFrames *arg3 = 0 ;
  unsigned int arg4 ;
  unsigned int arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  unsigned int val5 ;
  int ecode5 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Iir, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Iir_tick" "', argument " "1"" of type '" "stk::Iir *""'"); 
  }
  arg1 = reinterpret_cast< stk::Iir * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Iir_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Iir_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Iir_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Iir_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  arg3 = reinterpret_cast< stk::StkFrames * >(argp3);
  ecode4 = SWIG_AsVal_unsigned_SS_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Iir_tick" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  ecode5 = SWIG_AsVal_unsigned_SS_int(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "Iir_tick" "', argument " "5"" of type '" "unsigned int""'");
  } 
  arg5 = static_cast< unsigned int >(val5);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,*arg3,arg4,arg5);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Iir_tick__SWIG_4(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Iir *arg1 = (stk::Iir *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  stk::StkFrames *arg3 = 0 ;
  unsigned int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Iir, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Iir_tick" "', argument " "1"" of type '" "stk::Iir *""'"); 
  }
  arg1 = reinterpret_cast< stk::Iir * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Iir_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Iir_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Iir_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Iir_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  arg3 = reinterpret_cast< stk::StkFrames * >(argp3);
  ecode4 = SWIG_AsVal_unsigned_SS_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Iir_tick" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,*arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Iir_tick__SWIG_5(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Iir *arg1 = (stk::Iir *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  stk::StkFrames *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Iir, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Iir_tick" "', argument " "1"" of type '" "stk::Iir *""'"); 
  }
  arg1 = reinterpret_cast< stk::Iir * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Iir_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Iir_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Iir_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Iir_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  arg3 = reinterpret_cast< stk::StkFrames * >(argp3);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,*arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Iir_tick(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[6] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Iir_tick", 0, 5, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Iir, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Iir_tick__SWIG_2(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Iir, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Iir_tick__SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Iir, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_Iir_tick__SWIG_5(self, argc, argv);
        }
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Iir, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Iir_tick__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  if (argc == 4) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Iir, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_Iir_tick__SWIG_4(self, argc, argv);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Iir, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_unsigned_SS_int(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_Iir_tick__SWIG_3(self, argc, argv);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Iir_tick'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::Iir::tick(stk::StkFloat)\n"
    "    stk::Iir::tick(stk::StkFrames &,unsigned int)\n"
    "    stk::Iir::tick(stk::StkFrames &)\n"
    "    stk::Iir::tick(stk::StkFrames &,stk::StkFrames &,unsigned int,unsigned int)\n"
    "    stk::Iir::tick(stk::StkFrames &,stk::StkFrames &,unsigned int)\n"
    "    stk::Iir::tick(stk::StkFrames &,stk::StkFrames &)\n");
  return 0;
}


SWIGINTERN PyObject *Iir_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_stk__Iir, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *Iir_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_JCRev__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::StkFloat arg1 ;
  float val1 ;
  int ecode1 = 0 ;
  stk::JCRev *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_JCRev" "', argument " "1"" of type '" "stk::StkFloat""'");
  } 
  arg1 = static_cast< stk::StkFloat >(val1);
  result = (stk::JCRev *)new stk::JCRev(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__JCRev, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_JCRev__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  stk::JCRev *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (stk::JCRev *)new stk::JCRev();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__JCRev, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_JCRev(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_JCRev", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_JCRev__SWIG_1(self, argc, argv);
  }
  if (argc == 1) {
    int _v = 0;
    {
      int res = SWIG_AsVal_float(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_JCRev__SWIG_0(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_JCRev'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::JCRev::JCRev(stk::StkFloat)\n"
    "    stk::JCRev::JCRev()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_JCRev_clear(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::JCRev *arg1 = (stk::JCRev *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__JCRev, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "JCRev_clear" "', argument " "1"" of type '" "stk::JCRev *""'"); 
  }
  arg1 = reinterpret_cast< stk::JCRev * >(argp1);
  (arg1)->clear();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_JCRev_setT60(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::JCRev *arg1 = (stk::JCRev *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "JCRev_setT60", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__JCRev, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "JCRev_setT60" "', argument " "1"" of type '" "stk::JCRev *""'"); 
  }
  arg1 = reinterpret_cast< stk::JCRev * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "JCRev_setT60" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setT60(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_JCRev_lastOut__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::JCRev *arg1 = (stk::JCRev *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__JCRev, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "JCRev_lastOut" "', argument " "1"" of type '" "stk::JCRev *""'"); 
  }
  arg1 = reinterpret_cast< stk::JCRev * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "JCRev_lastOut" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (stk::StkFloat)(arg1)->lastOut(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_JCRev_lastOut__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::JCRev *arg1 = (stk::JCRev *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__JCRev, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "JCRev_lastOut" "', argument " "1"" of type '" "stk::JCRev *""'"); 
  }
  arg1 = reinterpret_cast< stk::JCRev * >(argp1);
  result = (stk::StkFloat)(arg1)->lastOut();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_JCRev_lastOut(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "JCRev_lastOut", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__JCRev, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_JCRev_lastOut__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__JCRev, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_JCRev_lastOut__SWIG_0(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'JCRev_lastOut'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::JCRev::lastOut(unsigned int)\n"
    "    stk::JCRev::lastOut()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_JCRev_tick__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::JCRev *arg1 = (stk::JCRev *) 0 ;
  stk::StkFloat arg2 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__JCRev, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "JCRev_tick" "', argument " "1"" of type '" "stk::JCRev *""'"); 
  }
  arg1 = reinterpret_cast< stk::JCRev * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "JCRev_tick" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "JCRev_tick" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  result = (stk::StkFloat)(arg1)->tick(arg2,arg3);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_JCRev_tick__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::JCRev *arg1 = (stk::JCRev *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__JCRev, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "JCRev_tick" "', argument " "1"" of type '" "stk::JCRev *""'"); 
  }
  arg1 = reinterpret_cast< stk::JCRev * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "JCRev_tick" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  result = (stk::StkFloat)(arg1)->tick(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_JCRev_tick__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::JCRev *arg1 = (stk::JCRev *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__JCRev, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "JCRev_tick" "', argument " "1"" of type '" "stk::JCRev *""'"); 
  }
  arg1 = reinterpret_cast< stk::JCRev * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "JCRev_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "JCRev_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "JCRev_tick" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_JCRev_tick__SWIG_3(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::JCRev *arg1 = (stk::JCRev *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__JCRev, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "JCRev_tick" "', argument " "1"" of type '" "stk::JCRev *""'"); 
  }
  arg1 = reinterpret_cast< stk::JCRev * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "JCRev_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "JCRev_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_JCRev_tick__SWIG_4(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::JCRev *arg1 = (stk::JCRev *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  stk::StkFrames *arg3 = 0 ;
  unsigned int arg4 ;
  unsigned int arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  unsigned int val5 ;
  int ecode5 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__JCRev, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "JCRev_tick" "', argument " "1"" of type '" "stk::JCRev *""'"); 
  }
  arg1 = reinterpret_cast< stk::JCRev * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "JCRev_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "JCRev_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "JCRev_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "JCRev_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  arg3 = reinterpret_cast< stk::StkFrames * >(argp3);
  ecode4 = SWIG_AsVal_unsigned_SS_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "JCRev_tick" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  ecode5 = SWIG_AsVal_unsigned_SS_int(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "JCRev_tick" "', argument " "5"" of type '" "unsigned int""'");
  } 
  arg5 = static_cast< unsigned int >(val5);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,*arg3,arg4,arg5);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_JCRev_tick__SWIG_5(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::JCRev *arg1 = (stk::JCRev *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  stk::StkFrames *arg3 = 0 ;
  unsigned int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__JCRev, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "JCRev_tick" "', argument " "1"" of type '" "stk::JCRev *""'"); 
  }
  arg1 = reinterpret_cast< stk::JCRev * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "JCRev_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "JCRev_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "JCRev_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "JCRev_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  arg3 = reinterpret_cast< stk::StkFrames * >(argp3);
  ecode4 = SWIG_AsVal_unsigned_SS_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "JCRev_tick" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,*arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_JCRev_tick__SWIG_6(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::JCRev *arg1 = (stk::JCRev *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  stk::StkFrames *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__JCRev, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "JCRev_tick" "', argument " "1"" of type '" "stk::JCRev *""'"); 
  }
  arg1 = reinterpret_cast< stk::JCRev * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "JCRev_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "JCRev_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "JCRev_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "JCRev_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  arg3 = reinterpret_cast< stk::StkFrames * >(argp3);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,*arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_JCRev_tick(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[6] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "JCRev_tick", 0, 5, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__JCRev, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_JCRev_tick__SWIG_3(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__JCRev, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_JCRev_tick__SWIG_1(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__JCRev, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_JCRev_tick__SWIG_6(self, argc, argv);
        }
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__JCRev, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_JCRev_tick__SWIG_2(self, argc, argv);
        }
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__JCRev, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_JCRev_tick__SWIG_0(self, argc, argv);
        }
      }
    }
  }
  if (argc == 4) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__JCRev, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_JCRev_tick__SWIG_5(self, argc, argv);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__JCRev, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_unsigned_SS_int(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_JCRev_tick__SWIG_4(self, argc, argv);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'JCRev_tick'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::JCRev::tick(stk::StkFloat,unsigned int)\n"
    "    stk::JCRev::tick(stk::StkFloat)\n"
    "    stk::JCRev::tick(stk::StkFrames &,unsigned int)\n"
    "    stk::JCRev::tick(stk::StkFrames &)\n"
    "    stk::JCRev::tick(stk::StkFrames &,stk::StkFrames &,unsigned int,unsigned int)\n"
    "    stk::JCRev::tick(stk::StkFrames &,stk::StkFrames &,unsigned int)\n"
    "    stk::JCRev::tick(stk::StkFrames &,stk::StkFrames &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_JCRev(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::JCRev *arg1 = (stk::JCRev *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__JCRev, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_JCRev" "', argument " "1"" of type '" "stk::JCRev *""'"); 
  }
  arg1 = reinterpret_cast< stk::JCRev * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *JCRev_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_stk__JCRev, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *JCRev_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_JetTable_tick__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::JetTable *arg1 = (stk::JetTable *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__JetTable, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "JetTable_tick" "', argument " "1"" of type '" "stk::JetTable *""'"); 
  }
  arg1 = reinterpret_cast< stk::JetTable * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "JetTable_tick" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  result = (stk::StkFloat)(arg1)->tick(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_JetTable_tick__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::JetTable *arg1 = (stk::JetTable *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__JetTable, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "JetTable_tick" "', argument " "1"" of type '" "stk::JetTable *""'"); 
  }
  arg1 = reinterpret_cast< stk::JetTable * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "JetTable_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "JetTable_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "JetTable_tick" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_JetTable_tick__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::JetTable *arg1 = (stk::JetTable *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__JetTable, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "JetTable_tick" "', argument " "1"" of type '" "stk::JetTable *""'"); 
  }
  arg1 = reinterpret_cast< stk::JetTable * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "JetTable_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "JetTable_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_JetTable_tick__SWIG_3(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::JetTable *arg1 = (stk::JetTable *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  stk::StkFrames *arg3 = 0 ;
  unsigned int arg4 ;
  unsigned int arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  unsigned int val5 ;
  int ecode5 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__JetTable, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "JetTable_tick" "', argument " "1"" of type '" "stk::JetTable *""'"); 
  }
  arg1 = reinterpret_cast< stk::JetTable * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "JetTable_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "JetTable_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "JetTable_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "JetTable_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  arg3 = reinterpret_cast< stk::StkFrames * >(argp3);
  ecode4 = SWIG_AsVal_unsigned_SS_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "JetTable_tick" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  ecode5 = SWIG_AsVal_unsigned_SS_int(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "JetTable_tick" "', argument " "5"" of type '" "unsigned int""'");
  } 
  arg5 = static_cast< unsigned int >(val5);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,*arg3,arg4,arg5);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_JetTable_tick__SWIG_4(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::JetTable *arg1 = (stk::JetTable *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  stk::StkFrames *arg3 = 0 ;
  unsigned int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__JetTable, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "JetTable_tick" "', argument " "1"" of type '" "stk::JetTable *""'"); 
  }
  arg1 = reinterpret_cast< stk::JetTable * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "JetTable_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "JetTable_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "JetTable_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "JetTable_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  arg3 = reinterpret_cast< stk::StkFrames * >(argp3);
  ecode4 = SWIG_AsVal_unsigned_SS_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "JetTable_tick" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,*arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_JetTable_tick__SWIG_5(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::JetTable *arg1 = (stk::JetTable *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  stk::StkFrames *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__JetTable, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "JetTable_tick" "', argument " "1"" of type '" "stk::JetTable *""'"); 
  }
  arg1 = reinterpret_cast< stk::JetTable * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "JetTable_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "JetTable_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "JetTable_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "JetTable_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  arg3 = reinterpret_cast< stk::StkFrames * >(argp3);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,*arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_JetTable_tick(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[6] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "JetTable_tick", 0, 5, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__JetTable, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_JetTable_tick__SWIG_2(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__JetTable, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_JetTable_tick__SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__JetTable, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_JetTable_tick__SWIG_5(self, argc, argv);
        }
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__JetTable, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_JetTable_tick__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  if (argc == 4) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__JetTable, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_JetTable_tick__SWIG_4(self, argc, argv);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__JetTable, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_unsigned_SS_int(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_JetTable_tick__SWIG_3(self, argc, argv);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'JetTable_tick'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::JetTable::tick(stk::StkFloat)\n"
    "    stk::JetTable::tick(stk::StkFrames &,unsigned int)\n"
    "    stk::JetTable::tick(stk::StkFrames &)\n"
    "    stk::JetTable::tick(stk::StkFrames &,stk::StkFrames &,unsigned int,unsigned int)\n"
    "    stk::JetTable::tick(stk::StkFrames &,stk::StkFrames &,unsigned int)\n"
    "    stk::JetTable::tick(stk::StkFrames &,stk::StkFrames &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_new_JetTable(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::JetTable *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_JetTable", 0, 0, 0)) SWIG_fail;
  result = (stk::JetTable *)new stk::JetTable();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__JetTable, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_JetTable(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::JetTable *arg1 = (stk::JetTable *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__JetTable, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_JetTable" "', argument " "1"" of type '" "stk::JetTable *""'"); 
  }
  arg1 = reinterpret_cast< stk::JetTable * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *JetTable_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_stk__JetTable, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *JetTable_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_LentPitShift__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::StkFloat arg1 ;
  int arg2 ;
  float val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  stk::LentPitShift *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_LentPitShift" "', argument " "1"" of type '" "stk::StkFloat""'");
  } 
  arg1 = static_cast< stk::StkFloat >(val1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_LentPitShift" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  result = (stk::LentPitShift *)new stk::LentPitShift(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__LentPitShift, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_LentPitShift__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::StkFloat arg1 ;
  float val1 ;
  int ecode1 = 0 ;
  stk::LentPitShift *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_LentPitShift" "', argument " "1"" of type '" "stk::StkFloat""'");
  } 
  arg1 = static_cast< stk::StkFloat >(val1);
  result = (stk::LentPitShift *)new stk::LentPitShift(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__LentPitShift, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_LentPitShift__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  stk::LentPitShift *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (stk::LentPitShift *)new stk::LentPitShift();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__LentPitShift, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_LentPitShift(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_LentPitShift", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_LentPitShift__SWIG_2(self, argc, argv);
  }
  if (argc == 1) {
    int _v = 0;
    {
      int res = SWIG_AsVal_float(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_LentPitShift__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    {
      int res = SWIG_AsVal_float(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_LentPitShift__SWIG_0(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_LentPitShift'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::LentPitShift::LentPitShift(stk::StkFloat,int)\n"
    "    stk::LentPitShift::LentPitShift(stk::StkFloat)\n"
    "    stk::LentPitShift::LentPitShift()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_LentPitShift(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::LentPitShift *arg1 = (stk::LentPitShift *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__LentPitShift, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_LentPitShift" "', argument " "1"" of type '" "stk::LentPitShift *""'"); 
  }
  arg1 = reinterpret_cast< stk::LentPitShift * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LentPitShift_clear(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::LentPitShift *arg1 = (stk::LentPitShift *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__LentPitShift, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LentPitShift_clear" "', argument " "1"" of type '" "stk::LentPitShift *""'"); 
  }
  arg1 = reinterpret_cast< stk::LentPitShift * >(argp1);
  (arg1)->clear();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LentPitShift_setShift(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::LentPitShift *arg1 = (stk::LentPitShift *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "LentPitShift_setShift", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__LentPitShift, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LentPitShift_setShift" "', argument " "1"" of type '" "stk::LentPitShift *""'"); 
  }
  arg1 = reinterpret_cast< stk::LentPitShift * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "LentPitShift_setShift" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setShift(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LentPitShift_tick__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::LentPitShift *arg1 = (stk::LentPitShift *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__LentPitShift, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LentPitShift_tick" "', argument " "1"" of type '" "stk::LentPitShift *""'"); 
  }
  arg1 = reinterpret_cast< stk::LentPitShift * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "LentPitShift_tick" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  result = (stk::StkFloat)(arg1)->tick(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LentPitShift_tick__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::LentPitShift *arg1 = (stk::LentPitShift *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__LentPitShift, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LentPitShift_tick" "', argument " "1"" of type '" "stk::LentPitShift *""'"); 
  }
  arg1 = reinterpret_cast< stk::LentPitShift * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "LentPitShift_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "LentPitShift_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "LentPitShift_tick" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LentPitShift_tick__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::LentPitShift *arg1 = (stk::LentPitShift *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__LentPitShift, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LentPitShift_tick" "', argument " "1"" of type '" "stk::LentPitShift *""'"); 
  }
  arg1 = reinterpret_cast< stk::LentPitShift * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "LentPitShift_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "LentPitShift_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LentPitShift_tick__SWIG_3(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::LentPitShift *arg1 = (stk::LentPitShift *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  stk::StkFrames *arg3 = 0 ;
  unsigned int arg4 ;
  unsigned int arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  unsigned int val5 ;
  int ecode5 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__LentPitShift, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LentPitShift_tick" "', argument " "1"" of type '" "stk::LentPitShift *""'"); 
  }
  arg1 = reinterpret_cast< stk::LentPitShift * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "LentPitShift_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "LentPitShift_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "LentPitShift_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "LentPitShift_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  arg3 = reinterpret_cast< stk::StkFrames * >(argp3);
  ecode4 = SWIG_AsVal_unsigned_SS_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "LentPitShift_tick" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  ecode5 = SWIG_AsVal_unsigned_SS_int(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "LentPitShift_tick" "', argument " "5"" of type '" "unsigned int""'");
  } 
  arg5 = static_cast< unsigned int >(val5);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,*arg3,arg4,arg5);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LentPitShift_tick__SWIG_4(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::LentPitShift *arg1 = (stk::LentPitShift *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  stk::StkFrames *arg3 = 0 ;
  unsigned int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__LentPitShift, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LentPitShift_tick" "', argument " "1"" of type '" "stk::LentPitShift *""'"); 
  }
  arg1 = reinterpret_cast< stk::LentPitShift * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "LentPitShift_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "LentPitShift_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "LentPitShift_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "LentPitShift_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  arg3 = reinterpret_cast< stk::StkFrames * >(argp3);
  ecode4 = SWIG_AsVal_unsigned_SS_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "LentPitShift_tick" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,*arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LentPitShift_tick__SWIG_5(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::LentPitShift *arg1 = (stk::LentPitShift *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  stk::StkFrames *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__LentPitShift, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LentPitShift_tick" "', argument " "1"" of type '" "stk::LentPitShift *""'"); 
  }
  arg1 = reinterpret_cast< stk::LentPitShift * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "LentPitShift_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "LentPitShift_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "LentPitShift_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "LentPitShift_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  arg3 = reinterpret_cast< stk::StkFrames * >(argp3);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,*arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LentPitShift_tick(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[6] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "LentPitShift_tick", 0, 5, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__LentPitShift, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_LentPitShift_tick__SWIG_2(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__LentPitShift, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_LentPitShift_tick__SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__LentPitShift, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_LentPitShift_tick__SWIG_5(self, argc, argv);
        }
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__LentPitShift, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_LentPitShift_tick__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  if (argc == 4) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__LentPitShift, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_LentPitShift_tick__SWIG_4(self, argc, argv);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__LentPitShift, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_unsigned_SS_int(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_LentPitShift_tick__SWIG_3(self, argc, argv);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'LentPitShift_tick'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::LentPitShift::tick(stk::StkFloat)\n"
    "    stk::LentPitShift::tick(stk::StkFrames &,unsigned int)\n"
    "    stk::LentPitShift::tick(stk::StkFrames &)\n"
    "    stk::LentPitShift::tick(stk::StkFrames &,stk::StkFrames &,unsigned int,unsigned int)\n"
    "    stk::LentPitShift::tick(stk::StkFrames &,stk::StkFrames &,unsigned int)\n"
    "    stk::LentPitShift::tick(stk::StkFrames &,stk::StkFrames &)\n");
  return 0;
}


SWIGINTERN PyObject *LentPitShift_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_stk__LentPitShift, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *LentPitShift_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_Mandolin(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::StkFloat arg1 ;
  float val1 ;
  int ecode1 = 0 ;
  PyObject *swig_obj[1] ;
  stk::Mandolin *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Mandolin" "', argument " "1"" of type '" "stk::StkFloat""'");
  } 
  arg1 = static_cast< stk::StkFloat >(val1);
  result = (stk::Mandolin *)new stk::Mandolin(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__Mandolin, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Mandolin(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Mandolin *arg1 = (stk::Mandolin *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Mandolin, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Mandolin" "', argument " "1"" of type '" "stk::Mandolin *""'"); 
  }
  arg1 = reinterpret_cast< stk::Mandolin * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Mandolin_clear(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Mandolin *arg1 = (stk::Mandolin *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Mandolin, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Mandolin_clear" "', argument " "1"" of type '" "stk::Mandolin *""'"); 
  }
  arg1 = reinterpret_cast< stk::Mandolin * >(argp1);
  (arg1)->clear();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Mandolin_setDetune(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Mandolin *arg1 = (stk::Mandolin *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Mandolin_setDetune", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Mandolin, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Mandolin_setDetune" "', argument " "1"" of type '" "stk::Mandolin *""'"); 
  }
  arg1 = reinterpret_cast< stk::Mandolin * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Mandolin_setDetune" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setDetune(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Mandolin_setBodySize(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Mandolin *arg1 = (stk::Mandolin *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Mandolin_setBodySize", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Mandolin, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Mandolin_setBodySize" "', argument " "1"" of type '" "stk::Mandolin *""'"); 
  }
  arg1 = reinterpret_cast< stk::Mandolin * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Mandolin_setBodySize" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setBodySize(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Mandolin_setPluckPosition(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Mandolin *arg1 = (stk::Mandolin *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Mandolin_setPluckPosition", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Mandolin, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Mandolin_setPluckPosition" "', argument " "1"" of type '" "stk::Mandolin *""'"); 
  }
  arg1 = reinterpret_cast< stk::Mandolin * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Mandolin_setPluckPosition" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setPluckPosition(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Mandolin_setFrequency(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Mandolin *arg1 = (stk::Mandolin *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Mandolin_setFrequency", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Mandolin, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Mandolin_setFrequency" "', argument " "1"" of type '" "stk::Mandolin *""'"); 
  }
  arg1 = reinterpret_cast< stk::Mandolin * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Mandolin_setFrequency" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setFrequency(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Mandolin_pluck__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Mandolin *arg1 = (stk::Mandolin *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Mandolin, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Mandolin_pluck" "', argument " "1"" of type '" "stk::Mandolin *""'"); 
  }
  arg1 = reinterpret_cast< stk::Mandolin * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Mandolin_pluck" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->pluck(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Mandolin_pluck__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Mandolin *arg1 = (stk::Mandolin *) 0 ;
  stk::StkFloat arg2 ;
  stk::StkFloat arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Mandolin, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Mandolin_pluck" "', argument " "1"" of type '" "stk::Mandolin *""'"); 
  }
  arg1 = reinterpret_cast< stk::Mandolin * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Mandolin_pluck" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Mandolin_pluck" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  (arg1)->pluck(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Mandolin_pluck(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Mandolin_pluck", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Mandolin, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Mandolin_pluck__SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Mandolin, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Mandolin_pluck__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Mandolin_pluck'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::Mandolin::pluck(stk::StkFloat)\n"
    "    stk::Mandolin::pluck(stk::StkFloat,stk::StkFloat)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Mandolin_noteOn(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Mandolin *arg1 = (stk::Mandolin *) 0 ;
  stk::StkFloat arg2 ;
  stk::StkFloat arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Mandolin_noteOn", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Mandolin, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Mandolin_noteOn" "', argument " "1"" of type '" "stk::Mandolin *""'"); 
  }
  arg1 = reinterpret_cast< stk::Mandolin * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Mandolin_noteOn" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Mandolin_noteOn" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  (arg1)->noteOn(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Mandolin_noteOff(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Mandolin *arg1 = (stk::Mandolin *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Mandolin_noteOff", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Mandolin, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Mandolin_noteOff" "', argument " "1"" of type '" "stk::Mandolin *""'"); 
  }
  arg1 = reinterpret_cast< stk::Mandolin * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Mandolin_noteOff" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->noteOff(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Mandolin_controlChange(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Mandolin *arg1 = (stk::Mandolin *) 0 ;
  int arg2 ;
  stk::StkFloat arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Mandolin_controlChange", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Mandolin, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Mandolin_controlChange" "', argument " "1"" of type '" "stk::Mandolin *""'"); 
  }
  arg1 = reinterpret_cast< stk::Mandolin * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Mandolin_controlChange" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Mandolin_controlChange" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  (arg1)->controlChange(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Mandolin_tick__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Mandolin *arg1 = (stk::Mandolin *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Mandolin, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Mandolin_tick" "', argument " "1"" of type '" "stk::Mandolin *""'"); 
  }
  arg1 = reinterpret_cast< stk::Mandolin * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Mandolin_tick" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (stk::StkFloat)(arg1)->tick(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Mandolin_tick__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Mandolin *arg1 = (stk::Mandolin *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Mandolin, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Mandolin_tick" "', argument " "1"" of type '" "stk::Mandolin *""'"); 
  }
  arg1 = reinterpret_cast< stk::Mandolin * >(argp1);
  result = (stk::StkFloat)(arg1)->tick();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Mandolin_tick__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Mandolin *arg1 = (stk::Mandolin *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Mandolin, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Mandolin_tick" "', argument " "1"" of type '" "stk::Mandolin *""'"); 
  }
  arg1 = reinterpret_cast< stk::Mandolin * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Mandolin_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Mandolin_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Mandolin_tick" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Mandolin_tick__SWIG_3(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Mandolin *arg1 = (stk::Mandolin *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Mandolin, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Mandolin_tick" "', argument " "1"" of type '" "stk::Mandolin *""'"); 
  }
  arg1 = reinterpret_cast< stk::Mandolin * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Mandolin_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Mandolin_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Mandolin_tick(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Mandolin_tick", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Mandolin, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Mandolin_tick__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Mandolin, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Mandolin_tick__SWIG_3(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Mandolin, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Mandolin_tick__SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Mandolin, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Mandolin_tick__SWIG_2(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Mandolin_tick'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::Mandolin::tick(unsigned int)\n"
    "    stk::Mandolin::tick()\n"
    "    stk::Mandolin::tick(stk::StkFrames &,unsigned int)\n"
    "    stk::Mandolin::tick(stk::StkFrames &)\n");
  return 0;
}


SWIGINTERN PyObject *Mandolin_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_stk__Mandolin, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *Mandolin_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_Mesh2D(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  unsigned short arg1 ;
  unsigned short arg2 ;
  unsigned short val1 ;
  int ecode1 = 0 ;
  unsigned short val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  stk::Mesh2D *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_Mesh2D", 2, 2, swig_obj)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_short(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Mesh2D" "', argument " "1"" of type '" "unsigned short""'");
  } 
  arg1 = static_cast< unsigned short >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_short(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_Mesh2D" "', argument " "2"" of type '" "unsigned short""'");
  } 
  arg2 = static_cast< unsigned short >(val2);
  result = (stk::Mesh2D *)new stk::Mesh2D(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__Mesh2D, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Mesh2D(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Mesh2D *arg1 = (stk::Mesh2D *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Mesh2D, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Mesh2D" "', argument " "1"" of type '" "stk::Mesh2D *""'"); 
  }
  arg1 = reinterpret_cast< stk::Mesh2D * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Mesh2D_clear(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Mesh2D *arg1 = (stk::Mesh2D *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Mesh2D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Mesh2D_clear" "', argument " "1"" of type '" "stk::Mesh2D *""'"); 
  }
  arg1 = reinterpret_cast< stk::Mesh2D * >(argp1);
  (arg1)->clear();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Mesh2D_setNX(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Mesh2D *arg1 = (stk::Mesh2D *) 0 ;
  unsigned short arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned short val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Mesh2D_setNX", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Mesh2D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Mesh2D_setNX" "', argument " "1"" of type '" "stk::Mesh2D *""'"); 
  }
  arg1 = reinterpret_cast< stk::Mesh2D * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_short(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Mesh2D_setNX" "', argument " "2"" of type '" "unsigned short""'");
  } 
  arg2 = static_cast< unsigned short >(val2);
  (arg1)->setNX(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Mesh2D_setNY(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Mesh2D *arg1 = (stk::Mesh2D *) 0 ;
  unsigned short arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned short val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Mesh2D_setNY", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Mesh2D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Mesh2D_setNY" "', argument " "1"" of type '" "stk::Mesh2D *""'"); 
  }
  arg1 = reinterpret_cast< stk::Mesh2D * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_short(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Mesh2D_setNY" "', argument " "2"" of type '" "unsigned short""'");
  } 
  arg2 = static_cast< unsigned short >(val2);
  (arg1)->setNY(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Mesh2D_setInputPosition(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Mesh2D *arg1 = (stk::Mesh2D *) 0 ;
  stk::StkFloat arg2 ;
  stk::StkFloat arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Mesh2D_setInputPosition", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Mesh2D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Mesh2D_setInputPosition" "', argument " "1"" of type '" "stk::Mesh2D *""'"); 
  }
  arg1 = reinterpret_cast< stk::Mesh2D * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Mesh2D_setInputPosition" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Mesh2D_setInputPosition" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  (arg1)->setInputPosition(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Mesh2D_setDecay(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Mesh2D *arg1 = (stk::Mesh2D *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Mesh2D_setDecay", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Mesh2D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Mesh2D_setDecay" "', argument " "1"" of type '" "stk::Mesh2D *""'"); 
  }
  arg1 = reinterpret_cast< stk::Mesh2D * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Mesh2D_setDecay" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setDecay(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Mesh2D_noteOn(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Mesh2D *arg1 = (stk::Mesh2D *) 0 ;
  stk::StkFloat arg2 ;
  stk::StkFloat arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Mesh2D_noteOn", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Mesh2D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Mesh2D_noteOn" "', argument " "1"" of type '" "stk::Mesh2D *""'"); 
  }
  arg1 = reinterpret_cast< stk::Mesh2D * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Mesh2D_noteOn" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Mesh2D_noteOn" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  (arg1)->noteOn(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Mesh2D_noteOff(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Mesh2D *arg1 = (stk::Mesh2D *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Mesh2D_noteOff", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Mesh2D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Mesh2D_noteOff" "', argument " "1"" of type '" "stk::Mesh2D *""'"); 
  }
  arg1 = reinterpret_cast< stk::Mesh2D * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Mesh2D_noteOff" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->noteOff(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Mesh2D_energy(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Mesh2D *arg1 = (stk::Mesh2D *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  stk::StkFloat result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Mesh2D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Mesh2D_energy" "', argument " "1"" of type '" "stk::Mesh2D *""'"); 
  }
  arg1 = reinterpret_cast< stk::Mesh2D * >(argp1);
  result = (stk::StkFloat)(arg1)->energy();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Mesh2D_inputTick(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Mesh2D *arg1 = (stk::Mesh2D *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  stk::StkFloat result;
  
  if (!SWIG_Python_UnpackTuple(args, "Mesh2D_inputTick", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Mesh2D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Mesh2D_inputTick" "', argument " "1"" of type '" "stk::Mesh2D *""'"); 
  }
  arg1 = reinterpret_cast< stk::Mesh2D * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Mesh2D_inputTick" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  result = (stk::StkFloat)(arg1)->inputTick(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Mesh2D_controlChange(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Mesh2D *arg1 = (stk::Mesh2D *) 0 ;
  int arg2 ;
  stk::StkFloat arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Mesh2D_controlChange", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Mesh2D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Mesh2D_controlChange" "', argument " "1"" of type '" "stk::Mesh2D *""'"); 
  }
  arg1 = reinterpret_cast< stk::Mesh2D * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Mesh2D_controlChange" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Mesh2D_controlChange" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  (arg1)->controlChange(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Mesh2D_tick__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Mesh2D *arg1 = (stk::Mesh2D *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Mesh2D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Mesh2D_tick" "', argument " "1"" of type '" "stk::Mesh2D *""'"); 
  }
  arg1 = reinterpret_cast< stk::Mesh2D * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Mesh2D_tick" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (stk::StkFloat)(arg1)->tick(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Mesh2D_tick__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Mesh2D *arg1 = (stk::Mesh2D *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Mesh2D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Mesh2D_tick" "', argument " "1"" of type '" "stk::Mesh2D *""'"); 
  }
  arg1 = reinterpret_cast< stk::Mesh2D * >(argp1);
  result = (stk::StkFloat)(arg1)->tick();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Mesh2D_tick__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Mesh2D *arg1 = (stk::Mesh2D *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Mesh2D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Mesh2D_tick" "', argument " "1"" of type '" "stk::Mesh2D *""'"); 
  }
  arg1 = reinterpret_cast< stk::Mesh2D * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Mesh2D_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Mesh2D_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Mesh2D_tick" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Mesh2D_tick__SWIG_3(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Mesh2D *arg1 = (stk::Mesh2D *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Mesh2D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Mesh2D_tick" "', argument " "1"" of type '" "stk::Mesh2D *""'"); 
  }
  arg1 = reinterpret_cast< stk::Mesh2D * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Mesh2D_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Mesh2D_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Mesh2D_tick(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Mesh2D_tick", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Mesh2D, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Mesh2D_tick__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Mesh2D, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Mesh2D_tick__SWIG_3(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Mesh2D, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Mesh2D_tick__SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Mesh2D, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Mesh2D_tick__SWIG_2(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Mesh2D_tick'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::Mesh2D::tick(unsigned int)\n"
    "    stk::Mesh2D::tick()\n"
    "    stk::Mesh2D::tick(stk::StkFrames &,unsigned int)\n"
    "    stk::Mesh2D::tick(stk::StkFrames &)\n");
  return 0;
}


SWIGINTERN PyObject *Mesh2D_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_stk__Mesh2D, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *Mesh2D_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_Messager(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Messager *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_Messager", 0, 0, 0)) SWIG_fail;
  result = (stk::Messager *)new stk::Messager();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__Messager, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Messager(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Messager *arg1 = (stk::Messager *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Messager, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Messager" "', argument " "1"" of type '" "stk::Messager *""'"); 
  }
  arg1 = reinterpret_cast< stk::Messager * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Messager_popMessage(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Messager *arg1 = (stk::Messager *) 0 ;
  Skini::Message *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Messager_popMessage", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Messager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Messager_popMessage" "', argument " "1"" of type '" "stk::Messager *""'"); 
  }
  arg1 = reinterpret_cast< stk::Messager * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_Skini__Message,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Messager_popMessage" "', argument " "2"" of type '" "Skini::Message &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Messager_popMessage" "', argument " "2"" of type '" "Skini::Message &""'"); 
  }
  arg2 = reinterpret_cast< Skini::Message * >(argp2);
  (arg1)->popMessage(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Messager_pushMessage(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Messager *arg1 = (stk::Messager *) 0 ;
  Skini::Message *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Messager_pushMessage", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Messager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Messager_pushMessage" "', argument " "1"" of type '" "stk::Messager *""'"); 
  }
  arg1 = reinterpret_cast< stk::Messager * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_Skini__Message,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Messager_pushMessage" "', argument " "2"" of type '" "Skini::Message &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Messager_pushMessage" "', argument " "2"" of type '" "Skini::Message &""'"); 
  }
  arg2 = reinterpret_cast< Skini::Message * >(argp2);
  (arg1)->pushMessage(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Messager_setScoreFile(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Messager *arg1 = (stk::Messager *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "Messager_setScoreFile", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Messager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Messager_setScoreFile" "', argument " "1"" of type '" "stk::Messager *""'"); 
  }
  arg1 = reinterpret_cast< stk::Messager * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(swig_obj[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Messager_setScoreFile" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (bool)(arg1)->setScoreFile((char const *)arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *Messager_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_stk__Messager, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *Messager_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_MidiFileIn(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  std::string arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  stk::MidiFileIn *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  {
    res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_std__string,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_MidiFileIn" "', argument " "1"" of type '" "std::string""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_MidiFileIn" "', argument " "1"" of type '" "std::string""'");
    } else {
      std::string * temp = reinterpret_cast< std::string * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  result = (stk::MidiFileIn *)new stk::MidiFileIn(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__MidiFileIn, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_MidiFileIn(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::MidiFileIn *arg1 = (stk::MidiFileIn *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__MidiFileIn, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_MidiFileIn" "', argument " "1"" of type '" "stk::MidiFileIn *""'"); 
  }
  arg1 = reinterpret_cast< stk::MidiFileIn * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MidiFileIn_getFileFormat(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::MidiFileIn *arg1 = (stk::MidiFileIn *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__MidiFileIn, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MidiFileIn_getFileFormat" "', argument " "1"" of type '" "stk::MidiFileIn const *""'"); 
  }
  arg1 = reinterpret_cast< stk::MidiFileIn * >(argp1);
  result = (int)((stk::MidiFileIn const *)arg1)->getFileFormat();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MidiFileIn_getNumberOfTracks(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::MidiFileIn *arg1 = (stk::MidiFileIn *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__MidiFileIn, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MidiFileIn_getNumberOfTracks" "', argument " "1"" of type '" "stk::MidiFileIn const *""'"); 
  }
  arg1 = reinterpret_cast< stk::MidiFileIn * >(argp1);
  result = (unsigned int)((stk::MidiFileIn const *)arg1)->getNumberOfTracks();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MidiFileIn_getDivision(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::MidiFileIn *arg1 = (stk::MidiFileIn *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__MidiFileIn, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MidiFileIn_getDivision" "', argument " "1"" of type '" "stk::MidiFileIn const *""'"); 
  }
  arg1 = reinterpret_cast< stk::MidiFileIn * >(argp1);
  result = (int)((stk::MidiFileIn const *)arg1)->getDivision();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MidiFileIn_rewindTrack__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::MidiFileIn *arg1 = (stk::MidiFileIn *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__MidiFileIn, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MidiFileIn_rewindTrack" "', argument " "1"" of type '" "stk::MidiFileIn *""'"); 
  }
  arg1 = reinterpret_cast< stk::MidiFileIn * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MidiFileIn_rewindTrack" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  (arg1)->rewindTrack(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MidiFileIn_rewindTrack__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::MidiFileIn *arg1 = (stk::MidiFileIn *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__MidiFileIn, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MidiFileIn_rewindTrack" "', argument " "1"" of type '" "stk::MidiFileIn *""'"); 
  }
  arg1 = reinterpret_cast< stk::MidiFileIn * >(argp1);
  (arg1)->rewindTrack();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MidiFileIn_rewindTrack(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "MidiFileIn_rewindTrack", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__MidiFileIn, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_MidiFileIn_rewindTrack__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__MidiFileIn, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_MidiFileIn_rewindTrack__SWIG_0(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'MidiFileIn_rewindTrack'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::MidiFileIn::rewindTrack(unsigned int)\n"
    "    stk::MidiFileIn::rewindTrack()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_MidiFileIn_getTickSeconds__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::MidiFileIn *arg1 = (stk::MidiFileIn *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  double result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__MidiFileIn, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MidiFileIn_getTickSeconds" "', argument " "1"" of type '" "stk::MidiFileIn *""'"); 
  }
  arg1 = reinterpret_cast< stk::MidiFileIn * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MidiFileIn_getTickSeconds" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (double)(arg1)->getTickSeconds(arg2);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MidiFileIn_getTickSeconds__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::MidiFileIn *arg1 = (stk::MidiFileIn *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double result;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__MidiFileIn, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MidiFileIn_getTickSeconds" "', argument " "1"" of type '" "stk::MidiFileIn *""'"); 
  }
  arg1 = reinterpret_cast< stk::MidiFileIn * >(argp1);
  result = (double)(arg1)->getTickSeconds();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MidiFileIn_getTickSeconds(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "MidiFileIn_getTickSeconds", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__MidiFileIn, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_MidiFileIn_getTickSeconds__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__MidiFileIn, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_MidiFileIn_getTickSeconds__SWIG_0(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'MidiFileIn_getTickSeconds'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::MidiFileIn::getTickSeconds(unsigned int)\n"
    "    stk::MidiFileIn::getTickSeconds()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_MidiFileIn_getNextEvent__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::MidiFileIn *arg1 = (stk::MidiFileIn *) 0 ;
  std::vector< unsigned char,std::allocator< unsigned char > > *arg2 = (std::vector< unsigned char,std::allocator< unsigned char > > *) 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  unsigned long result;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__MidiFileIn, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MidiFileIn_getNextEvent" "', argument " "1"" of type '" "stk::MidiFileIn *""'"); 
  }
  arg1 = reinterpret_cast< stk::MidiFileIn * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_std__vectorT_unsigned_char_std__allocatorT_unsigned_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MidiFileIn_getNextEvent" "', argument " "2"" of type '" "std::vector< unsigned char,std::allocator< unsigned char > > *""'"); 
  }
  arg2 = reinterpret_cast< std::vector< unsigned char,std::allocator< unsigned char > > * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "MidiFileIn_getNextEvent" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  result = (unsigned long)(arg1)->getNextEvent(arg2,arg3);
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MidiFileIn_getNextEvent__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::MidiFileIn *arg1 = (stk::MidiFileIn *) 0 ;
  std::vector< unsigned char,std::allocator< unsigned char > > *arg2 = (std::vector< unsigned char,std::allocator< unsigned char > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned long result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__MidiFileIn, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MidiFileIn_getNextEvent" "', argument " "1"" of type '" "stk::MidiFileIn *""'"); 
  }
  arg1 = reinterpret_cast< stk::MidiFileIn * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_std__vectorT_unsigned_char_std__allocatorT_unsigned_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MidiFileIn_getNextEvent" "', argument " "2"" of type '" "std::vector< unsigned char,std::allocator< unsigned char > > *""'"); 
  }
  arg2 = reinterpret_cast< std::vector< unsigned char,std::allocator< unsigned char > > * >(argp2);
  result = (unsigned long)(arg1)->getNextEvent(arg2);
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MidiFileIn_getNextEvent(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "MidiFileIn_getNextEvent", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__MidiFileIn, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_std__vectorT_unsigned_char_std__allocatorT_unsigned_char_t_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_MidiFileIn_getNextEvent__SWIG_1(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__MidiFileIn, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_std__vectorT_unsigned_char_std__allocatorT_unsigned_char_t_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_MidiFileIn_getNextEvent__SWIG_0(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'MidiFileIn_getNextEvent'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::MidiFileIn::getNextEvent(std::vector< unsigned char,std::allocator< unsigned char > > *,unsigned int)\n"
    "    stk::MidiFileIn::getNextEvent(std::vector< unsigned char,std::allocator< unsigned char > > *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_MidiFileIn_getNextMidiEvent__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::MidiFileIn *arg1 = (stk::MidiFileIn *) 0 ;
  std::vector< unsigned char,std::allocator< unsigned char > > *arg2 = (std::vector< unsigned char,std::allocator< unsigned char > > *) 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  unsigned long result;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__MidiFileIn, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MidiFileIn_getNextMidiEvent" "', argument " "1"" of type '" "stk::MidiFileIn *""'"); 
  }
  arg1 = reinterpret_cast< stk::MidiFileIn * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_std__vectorT_unsigned_char_std__allocatorT_unsigned_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MidiFileIn_getNextMidiEvent" "', argument " "2"" of type '" "std::vector< unsigned char,std::allocator< unsigned char > > *""'"); 
  }
  arg2 = reinterpret_cast< std::vector< unsigned char,std::allocator< unsigned char > > * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "MidiFileIn_getNextMidiEvent" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  result = (unsigned long)(arg1)->getNextMidiEvent(arg2,arg3);
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MidiFileIn_getNextMidiEvent__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::MidiFileIn *arg1 = (stk::MidiFileIn *) 0 ;
  std::vector< unsigned char,std::allocator< unsigned char > > *arg2 = (std::vector< unsigned char,std::allocator< unsigned char > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned long result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__MidiFileIn, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MidiFileIn_getNextMidiEvent" "', argument " "1"" of type '" "stk::MidiFileIn *""'"); 
  }
  arg1 = reinterpret_cast< stk::MidiFileIn * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_std__vectorT_unsigned_char_std__allocatorT_unsigned_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MidiFileIn_getNextMidiEvent" "', argument " "2"" of type '" "std::vector< unsigned char,std::allocator< unsigned char > > *""'"); 
  }
  arg2 = reinterpret_cast< std::vector< unsigned char,std::allocator< unsigned char > > * >(argp2);
  result = (unsigned long)(arg1)->getNextMidiEvent(arg2);
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MidiFileIn_getNextMidiEvent(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "MidiFileIn_getNextMidiEvent", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__MidiFileIn, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_std__vectorT_unsigned_char_std__allocatorT_unsigned_char_t_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_MidiFileIn_getNextMidiEvent__SWIG_1(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__MidiFileIn, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_std__vectorT_unsigned_char_std__allocatorT_unsigned_char_t_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_MidiFileIn_getNextMidiEvent__SWIG_0(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'MidiFileIn_getNextMidiEvent'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::MidiFileIn::getNextMidiEvent(std::vector< unsigned char,std::allocator< unsigned char > > *,unsigned int)\n"
    "    stk::MidiFileIn::getNextMidiEvent(std::vector< unsigned char,std::allocator< unsigned char > > *)\n");
  return 0;
}


SWIGINTERN PyObject *MidiFileIn_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_stk__MidiFileIn, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *MidiFileIn_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_delete_Modal(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Modal *arg1 = (stk::Modal *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Modal, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Modal" "', argument " "1"" of type '" "stk::Modal *""'"); 
  }
  arg1 = reinterpret_cast< stk::Modal * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Modal_clear(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Modal *arg1 = (stk::Modal *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Modal, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Modal_clear" "', argument " "1"" of type '" "stk::Modal *""'"); 
  }
  arg1 = reinterpret_cast< stk::Modal * >(argp1);
  (arg1)->clear();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Modal_setFrequency(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Modal *arg1 = (stk::Modal *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Modal_setFrequency", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Modal, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Modal_setFrequency" "', argument " "1"" of type '" "stk::Modal *""'"); 
  }
  arg1 = reinterpret_cast< stk::Modal * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Modal_setFrequency" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setFrequency(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Modal_setRatioAndRadius(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Modal *arg1 = (stk::Modal *) 0 ;
  unsigned int arg2 ;
  stk::StkFloat arg3 ;
  stk::StkFloat arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  PyObject *swig_obj[4] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Modal_setRatioAndRadius", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Modal, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Modal_setRatioAndRadius" "', argument " "1"" of type '" "stk::Modal *""'"); 
  }
  arg1 = reinterpret_cast< stk::Modal * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Modal_setRatioAndRadius" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Modal_setRatioAndRadius" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Modal_setRatioAndRadius" "', argument " "4"" of type '" "stk::StkFloat""'");
  } 
  arg4 = static_cast< stk::StkFloat >(val4);
  (arg1)->setRatioAndRadius(arg2,arg3,arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Modal_setMasterGain(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Modal *arg1 = (stk::Modal *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Modal_setMasterGain", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Modal, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Modal_setMasterGain" "', argument " "1"" of type '" "stk::Modal *""'"); 
  }
  arg1 = reinterpret_cast< stk::Modal * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Modal_setMasterGain" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setMasterGain(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Modal_setDirectGain(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Modal *arg1 = (stk::Modal *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Modal_setDirectGain", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Modal, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Modal_setDirectGain" "', argument " "1"" of type '" "stk::Modal *""'"); 
  }
  arg1 = reinterpret_cast< stk::Modal * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Modal_setDirectGain" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setDirectGain(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Modal_setModeGain(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Modal *arg1 = (stk::Modal *) 0 ;
  unsigned int arg2 ;
  stk::StkFloat arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Modal_setModeGain", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Modal, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Modal_setModeGain" "', argument " "1"" of type '" "stk::Modal *""'"); 
  }
  arg1 = reinterpret_cast< stk::Modal * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Modal_setModeGain" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Modal_setModeGain" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  (arg1)->setModeGain(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Modal_strike(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Modal *arg1 = (stk::Modal *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Modal_strike", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Modal, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Modal_strike" "', argument " "1"" of type '" "stk::Modal *""'"); 
  }
  arg1 = reinterpret_cast< stk::Modal * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Modal_strike" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->strike(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Modal_damp(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Modal *arg1 = (stk::Modal *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Modal_damp", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Modal, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Modal_damp" "', argument " "1"" of type '" "stk::Modal *""'"); 
  }
  arg1 = reinterpret_cast< stk::Modal * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Modal_damp" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->damp(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Modal_noteOn(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Modal *arg1 = (stk::Modal *) 0 ;
  stk::StkFloat arg2 ;
  stk::StkFloat arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Modal_noteOn", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Modal, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Modal_noteOn" "', argument " "1"" of type '" "stk::Modal *""'"); 
  }
  arg1 = reinterpret_cast< stk::Modal * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Modal_noteOn" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Modal_noteOn" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  (arg1)->noteOn(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Modal_noteOff(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Modal *arg1 = (stk::Modal *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Modal_noteOff", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Modal, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Modal_noteOff" "', argument " "1"" of type '" "stk::Modal *""'"); 
  }
  arg1 = reinterpret_cast< stk::Modal * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Modal_noteOff" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->noteOff(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Modal_controlChange(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Modal *arg1 = (stk::Modal *) 0 ;
  int arg2 ;
  stk::StkFloat arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Modal_controlChange", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Modal, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Modal_controlChange" "', argument " "1"" of type '" "stk::Modal *""'"); 
  }
  arg1 = reinterpret_cast< stk::Modal * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Modal_controlChange" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Modal_controlChange" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  (arg1)->controlChange(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Modal_tick__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Modal *arg1 = (stk::Modal *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Modal, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Modal_tick" "', argument " "1"" of type '" "stk::Modal *""'"); 
  }
  arg1 = reinterpret_cast< stk::Modal * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Modal_tick" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (stk::StkFloat)(arg1)->tick(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Modal_tick__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Modal *arg1 = (stk::Modal *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Modal, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Modal_tick" "', argument " "1"" of type '" "stk::Modal *""'"); 
  }
  arg1 = reinterpret_cast< stk::Modal * >(argp1);
  result = (stk::StkFloat)(arg1)->tick();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Modal_tick__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Modal *arg1 = (stk::Modal *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Modal, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Modal_tick" "', argument " "1"" of type '" "stk::Modal *""'"); 
  }
  arg1 = reinterpret_cast< stk::Modal * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Modal_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Modal_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Modal_tick" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Modal_tick__SWIG_3(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Modal *arg1 = (stk::Modal *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Modal, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Modal_tick" "', argument " "1"" of type '" "stk::Modal *""'"); 
  }
  arg1 = reinterpret_cast< stk::Modal * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Modal_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Modal_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Modal_tick(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Modal_tick", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Modal, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Modal_tick__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Modal, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Modal_tick__SWIG_3(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Modal, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Modal_tick__SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Modal, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Modal_tick__SWIG_2(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Modal_tick'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::Modal::tick(unsigned int)\n"
    "    stk::Modal::tick()\n"
    "    stk::Modal::tick(stk::StkFrames &,unsigned int)\n"
    "    stk::Modal::tick(stk::StkFrames &)\n");
  return 0;
}


SWIGINTERN PyObject *Modal_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_stk__Modal, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_ModalBar(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::ModalBar *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_ModalBar", 0, 0, 0)) SWIG_fail;
  result = (stk::ModalBar *)new stk::ModalBar();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__ModalBar, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ModalBar(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::ModalBar *arg1 = (stk::ModalBar *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__ModalBar, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ModalBar" "', argument " "1"" of type '" "stk::ModalBar *""'"); 
  }
  arg1 = reinterpret_cast< stk::ModalBar * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ModalBar_setStickHardness(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::ModalBar *arg1 = (stk::ModalBar *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ModalBar_setStickHardness", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__ModalBar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ModalBar_setStickHardness" "', argument " "1"" of type '" "stk::ModalBar *""'"); 
  }
  arg1 = reinterpret_cast< stk::ModalBar * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ModalBar_setStickHardness" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setStickHardness(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ModalBar_setStrikePosition(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::ModalBar *arg1 = (stk::ModalBar *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ModalBar_setStrikePosition", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__ModalBar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ModalBar_setStrikePosition" "', argument " "1"" of type '" "stk::ModalBar *""'"); 
  }
  arg1 = reinterpret_cast< stk::ModalBar * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ModalBar_setStrikePosition" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setStrikePosition(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ModalBar_setPreset(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::ModalBar *arg1 = (stk::ModalBar *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ModalBar_setPreset", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__ModalBar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ModalBar_setPreset" "', argument " "1"" of type '" "stk::ModalBar *""'"); 
  }
  arg1 = reinterpret_cast< stk::ModalBar * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ModalBar_setPreset" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->setPreset(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ModalBar_setModulationDepth(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::ModalBar *arg1 = (stk::ModalBar *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ModalBar_setModulationDepth", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__ModalBar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ModalBar_setModulationDepth" "', argument " "1"" of type '" "stk::ModalBar *""'"); 
  }
  arg1 = reinterpret_cast< stk::ModalBar * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ModalBar_setModulationDepth" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setModulationDepth(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ModalBar_controlChange(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::ModalBar *arg1 = (stk::ModalBar *) 0 ;
  int arg2 ;
  stk::StkFloat arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ModalBar_controlChange", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__ModalBar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ModalBar_controlChange" "', argument " "1"" of type '" "stk::ModalBar *""'"); 
  }
  arg1 = reinterpret_cast< stk::ModalBar * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ModalBar_controlChange" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ModalBar_controlChange" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  (arg1)->controlChange(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ModalBar_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_stk__ModalBar, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *ModalBar_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_Modulate(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Modulate *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_Modulate", 0, 0, 0)) SWIG_fail;
  result = (stk::Modulate *)new stk::Modulate();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__Modulate, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Modulate(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Modulate *arg1 = (stk::Modulate *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Modulate, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Modulate" "', argument " "1"" of type '" "stk::Modulate *""'"); 
  }
  arg1 = reinterpret_cast< stk::Modulate * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Modulate_reset(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Modulate *arg1 = (stk::Modulate *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Modulate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Modulate_reset" "', argument " "1"" of type '" "stk::Modulate *""'"); 
  }
  arg1 = reinterpret_cast< stk::Modulate * >(argp1);
  (arg1)->reset();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Modulate_setVibratoRate(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Modulate *arg1 = (stk::Modulate *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Modulate_setVibratoRate", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Modulate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Modulate_setVibratoRate" "', argument " "1"" of type '" "stk::Modulate *""'"); 
  }
  arg1 = reinterpret_cast< stk::Modulate * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Modulate_setVibratoRate" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setVibratoRate(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Modulate_setVibratoGain(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Modulate *arg1 = (stk::Modulate *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Modulate_setVibratoGain", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Modulate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Modulate_setVibratoGain" "', argument " "1"" of type '" "stk::Modulate *""'"); 
  }
  arg1 = reinterpret_cast< stk::Modulate * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Modulate_setVibratoGain" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setVibratoGain(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Modulate_setRandomRate(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Modulate *arg1 = (stk::Modulate *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Modulate_setRandomRate", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Modulate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Modulate_setRandomRate" "', argument " "1"" of type '" "stk::Modulate *""'"); 
  }
  arg1 = reinterpret_cast< stk::Modulate * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Modulate_setRandomRate" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setRandomRate(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Modulate_setRandomGain(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Modulate *arg1 = (stk::Modulate *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Modulate_setRandomGain", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Modulate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Modulate_setRandomGain" "', argument " "1"" of type '" "stk::Modulate *""'"); 
  }
  arg1 = reinterpret_cast< stk::Modulate * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Modulate_setRandomGain" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setRandomGain(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Modulate_lastOut(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Modulate *arg1 = (stk::Modulate *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  stk::StkFloat result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Modulate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Modulate_lastOut" "', argument " "1"" of type '" "stk::Modulate const *""'"); 
  }
  arg1 = reinterpret_cast< stk::Modulate * >(argp1);
  result = (stk::StkFloat)((stk::Modulate const *)arg1)->lastOut();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Modulate_tick__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Modulate *arg1 = (stk::Modulate *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Modulate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Modulate_tick" "', argument " "1"" of type '" "stk::Modulate *""'"); 
  }
  arg1 = reinterpret_cast< stk::Modulate * >(argp1);
  result = (stk::StkFloat)(arg1)->tick();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Modulate_tick__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Modulate *arg1 = (stk::Modulate *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Modulate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Modulate_tick" "', argument " "1"" of type '" "stk::Modulate *""'"); 
  }
  arg1 = reinterpret_cast< stk::Modulate * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Modulate_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Modulate_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Modulate_tick" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Modulate_tick__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Modulate *arg1 = (stk::Modulate *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Modulate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Modulate_tick" "', argument " "1"" of type '" "stk::Modulate *""'"); 
  }
  arg1 = reinterpret_cast< stk::Modulate * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Modulate_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Modulate_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Modulate_tick(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Modulate_tick", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Modulate, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Modulate_tick__SWIG_0(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Modulate, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Modulate_tick__SWIG_2(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Modulate, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Modulate_tick__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Modulate_tick'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::Modulate::tick()\n"
    "    stk::Modulate::tick(stk::StkFrames &,unsigned int)\n"
    "    stk::Modulate::tick(stk::StkFrames &)\n");
  return 0;
}


SWIGINTERN PyObject *Modulate_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_stk__Modulate, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *Modulate_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_Moog(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Moog *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_Moog", 0, 0, 0)) SWIG_fail;
  result = (stk::Moog *)new stk::Moog();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__Moog, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Moog(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Moog *arg1 = (stk::Moog *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Moog, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Moog" "', argument " "1"" of type '" "stk::Moog *""'"); 
  }
  arg1 = reinterpret_cast< stk::Moog * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Moog_setFrequency(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Moog *arg1 = (stk::Moog *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Moog_setFrequency", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Moog, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Moog_setFrequency" "', argument " "1"" of type '" "stk::Moog *""'"); 
  }
  arg1 = reinterpret_cast< stk::Moog * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Moog_setFrequency" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setFrequency(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Moog_noteOn(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Moog *arg1 = (stk::Moog *) 0 ;
  stk::StkFloat arg2 ;
  stk::StkFloat arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Moog_noteOn", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Moog, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Moog_noteOn" "', argument " "1"" of type '" "stk::Moog *""'"); 
  }
  arg1 = reinterpret_cast< stk::Moog * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Moog_noteOn" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Moog_noteOn" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  (arg1)->noteOn(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Moog_setModulationSpeed(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Moog *arg1 = (stk::Moog *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Moog_setModulationSpeed", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Moog, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Moog_setModulationSpeed" "', argument " "1"" of type '" "stk::Moog *""'"); 
  }
  arg1 = reinterpret_cast< stk::Moog * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Moog_setModulationSpeed" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setModulationSpeed(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Moog_setModulationDepth(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Moog *arg1 = (stk::Moog *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Moog_setModulationDepth", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Moog, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Moog_setModulationDepth" "', argument " "1"" of type '" "stk::Moog *""'"); 
  }
  arg1 = reinterpret_cast< stk::Moog * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Moog_setModulationDepth" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setModulationDepth(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Moog_controlChange(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Moog *arg1 = (stk::Moog *) 0 ;
  int arg2 ;
  stk::StkFloat arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Moog_controlChange", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Moog, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Moog_controlChange" "', argument " "1"" of type '" "stk::Moog *""'"); 
  }
  arg1 = reinterpret_cast< stk::Moog * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Moog_controlChange" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Moog_controlChange" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  (arg1)->controlChange(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Moog_tick__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Moog *arg1 = (stk::Moog *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Moog, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Moog_tick" "', argument " "1"" of type '" "stk::Moog *""'"); 
  }
  arg1 = reinterpret_cast< stk::Moog * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Moog_tick" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (stk::StkFloat)(arg1)->tick(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Moog_tick__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Moog *arg1 = (stk::Moog *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Moog, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Moog_tick" "', argument " "1"" of type '" "stk::Moog *""'"); 
  }
  arg1 = reinterpret_cast< stk::Moog * >(argp1);
  result = (stk::StkFloat)(arg1)->tick();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Moog_tick__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Moog *arg1 = (stk::Moog *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Moog, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Moog_tick" "', argument " "1"" of type '" "stk::Moog *""'"); 
  }
  arg1 = reinterpret_cast< stk::Moog * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Moog_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Moog_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Moog_tick" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Moog_tick__SWIG_3(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Moog *arg1 = (stk::Moog *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Moog, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Moog_tick" "', argument " "1"" of type '" "stk::Moog *""'"); 
  }
  arg1 = reinterpret_cast< stk::Moog * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Moog_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Moog_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Moog_tick(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Moog_tick", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Moog, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Moog_tick__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Moog, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Moog_tick__SWIG_3(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Moog, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Moog_tick__SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Moog, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Moog_tick__SWIG_2(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Moog_tick'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::Moog::tick(unsigned int)\n"
    "    stk::Moog::tick()\n"
    "    stk::Moog::tick(stk::StkFrames &,unsigned int)\n"
    "    stk::Moog::tick(stk::StkFrames &)\n");
  return 0;
}


SWIGINTERN PyObject *Moog_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_stk__Moog, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *Moog_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_NRev__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::StkFloat arg1 ;
  float val1 ;
  int ecode1 = 0 ;
  stk::NRev *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_NRev" "', argument " "1"" of type '" "stk::StkFloat""'");
  } 
  arg1 = static_cast< stk::StkFloat >(val1);
  result = (stk::NRev *)new stk::NRev(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__NRev, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_NRev__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  stk::NRev *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (stk::NRev *)new stk::NRev();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__NRev, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_NRev(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_NRev", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_NRev__SWIG_1(self, argc, argv);
  }
  if (argc == 1) {
    int _v = 0;
    {
      int res = SWIG_AsVal_float(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_NRev__SWIG_0(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_NRev'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::NRev::NRev(stk::StkFloat)\n"
    "    stk::NRev::NRev()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_NRev_clear(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::NRev *arg1 = (stk::NRev *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__NRev, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NRev_clear" "', argument " "1"" of type '" "stk::NRev *""'"); 
  }
  arg1 = reinterpret_cast< stk::NRev * >(argp1);
  (arg1)->clear();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NRev_setT60(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::NRev *arg1 = (stk::NRev *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "NRev_setT60", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__NRev, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NRev_setT60" "', argument " "1"" of type '" "stk::NRev *""'"); 
  }
  arg1 = reinterpret_cast< stk::NRev * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "NRev_setT60" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setT60(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NRev_lastOut__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::NRev *arg1 = (stk::NRev *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__NRev, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NRev_lastOut" "', argument " "1"" of type '" "stk::NRev *""'"); 
  }
  arg1 = reinterpret_cast< stk::NRev * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "NRev_lastOut" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (stk::StkFloat)(arg1)->lastOut(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NRev_lastOut__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::NRev *arg1 = (stk::NRev *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__NRev, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NRev_lastOut" "', argument " "1"" of type '" "stk::NRev *""'"); 
  }
  arg1 = reinterpret_cast< stk::NRev * >(argp1);
  result = (stk::StkFloat)(arg1)->lastOut();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NRev_lastOut(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "NRev_lastOut", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__NRev, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_NRev_lastOut__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__NRev, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_NRev_lastOut__SWIG_0(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'NRev_lastOut'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::NRev::lastOut(unsigned int)\n"
    "    stk::NRev::lastOut()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_NRev_tick__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::NRev *arg1 = (stk::NRev *) 0 ;
  stk::StkFloat arg2 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__NRev, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NRev_tick" "', argument " "1"" of type '" "stk::NRev *""'"); 
  }
  arg1 = reinterpret_cast< stk::NRev * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "NRev_tick" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "NRev_tick" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  result = (stk::StkFloat)(arg1)->tick(arg2,arg3);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NRev_tick__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::NRev *arg1 = (stk::NRev *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__NRev, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NRev_tick" "', argument " "1"" of type '" "stk::NRev *""'"); 
  }
  arg1 = reinterpret_cast< stk::NRev * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "NRev_tick" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  result = (stk::StkFloat)(arg1)->tick(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NRev_tick__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::NRev *arg1 = (stk::NRev *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__NRev, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NRev_tick" "', argument " "1"" of type '" "stk::NRev *""'"); 
  }
  arg1 = reinterpret_cast< stk::NRev * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "NRev_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "NRev_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "NRev_tick" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NRev_tick__SWIG_3(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::NRev *arg1 = (stk::NRev *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__NRev, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NRev_tick" "', argument " "1"" of type '" "stk::NRev *""'"); 
  }
  arg1 = reinterpret_cast< stk::NRev * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "NRev_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "NRev_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NRev_tick__SWIG_4(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::NRev *arg1 = (stk::NRev *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  stk::StkFrames *arg3 = 0 ;
  unsigned int arg4 ;
  unsigned int arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  unsigned int val5 ;
  int ecode5 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__NRev, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NRev_tick" "', argument " "1"" of type '" "stk::NRev *""'"); 
  }
  arg1 = reinterpret_cast< stk::NRev * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "NRev_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "NRev_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "NRev_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "NRev_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  arg3 = reinterpret_cast< stk::StkFrames * >(argp3);
  ecode4 = SWIG_AsVal_unsigned_SS_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "NRev_tick" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  ecode5 = SWIG_AsVal_unsigned_SS_int(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "NRev_tick" "', argument " "5"" of type '" "unsigned int""'");
  } 
  arg5 = static_cast< unsigned int >(val5);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,*arg3,arg4,arg5);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NRev_tick__SWIG_5(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::NRev *arg1 = (stk::NRev *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  stk::StkFrames *arg3 = 0 ;
  unsigned int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__NRev, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NRev_tick" "', argument " "1"" of type '" "stk::NRev *""'"); 
  }
  arg1 = reinterpret_cast< stk::NRev * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "NRev_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "NRev_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "NRev_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "NRev_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  arg3 = reinterpret_cast< stk::StkFrames * >(argp3);
  ecode4 = SWIG_AsVal_unsigned_SS_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "NRev_tick" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,*arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NRev_tick__SWIG_6(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::NRev *arg1 = (stk::NRev *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  stk::StkFrames *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__NRev, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NRev_tick" "', argument " "1"" of type '" "stk::NRev *""'"); 
  }
  arg1 = reinterpret_cast< stk::NRev * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "NRev_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "NRev_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "NRev_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "NRev_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  arg3 = reinterpret_cast< stk::StkFrames * >(argp3);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,*arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NRev_tick(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[6] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "NRev_tick", 0, 5, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__NRev, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_NRev_tick__SWIG_3(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__NRev, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_NRev_tick__SWIG_1(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__NRev, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_NRev_tick__SWIG_6(self, argc, argv);
        }
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__NRev, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_NRev_tick__SWIG_2(self, argc, argv);
        }
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__NRev, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_NRev_tick__SWIG_0(self, argc, argv);
        }
      }
    }
  }
  if (argc == 4) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__NRev, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_NRev_tick__SWIG_5(self, argc, argv);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__NRev, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_unsigned_SS_int(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_NRev_tick__SWIG_4(self, argc, argv);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'NRev_tick'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::NRev::tick(stk::StkFloat,unsigned int)\n"
    "    stk::NRev::tick(stk::StkFloat)\n"
    "    stk::NRev::tick(stk::StkFrames &,unsigned int)\n"
    "    stk::NRev::tick(stk::StkFrames &)\n"
    "    stk::NRev::tick(stk::StkFrames &,stk::StkFrames &,unsigned int,unsigned int)\n"
    "    stk::NRev::tick(stk::StkFrames &,stk::StkFrames &,unsigned int)\n"
    "    stk::NRev::tick(stk::StkFrames &,stk::StkFrames &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_NRev(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::NRev *arg1 = (stk::NRev *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__NRev, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_NRev" "', argument " "1"" of type '" "stk::NRev *""'"); 
  }
  arg1 = reinterpret_cast< stk::NRev * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *NRev_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_stk__NRev, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *NRev_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_Noise__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  stk::Noise *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Noise" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  result = (stk::Noise *)new stk::Noise(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__Noise, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Noise__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  stk::Noise *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (stk::Noise *)new stk::Noise();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__Noise, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Noise(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_Noise", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_Noise__SWIG_1(self, argc, argv);
  }
  if (argc == 1) {
    int _v = 0;
    {
      int res = SWIG_AsVal_unsigned_SS_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_Noise__SWIG_0(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_Noise'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::Noise::Noise(unsigned int)\n"
    "    stk::Noise::Noise()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Noise_setSeed__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Noise *arg1 = (stk::Noise *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Noise, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Noise_setSeed" "', argument " "1"" of type '" "stk::Noise *""'"); 
  }
  arg1 = reinterpret_cast< stk::Noise * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Noise_setSeed" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  (arg1)->setSeed(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Noise_setSeed__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Noise *arg1 = (stk::Noise *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Noise, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Noise_setSeed" "', argument " "1"" of type '" "stk::Noise *""'"); 
  }
  arg1 = reinterpret_cast< stk::Noise * >(argp1);
  (arg1)->setSeed();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Noise_setSeed(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Noise_setSeed", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Noise, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Noise_setSeed__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Noise, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Noise_setSeed__SWIG_0(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Noise_setSeed'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::Noise::setSeed(unsigned int)\n"
    "    stk::Noise::setSeed()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Noise_lastOut(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Noise *arg1 = (stk::Noise *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  stk::StkFloat result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Noise, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Noise_lastOut" "', argument " "1"" of type '" "stk::Noise const *""'"); 
  }
  arg1 = reinterpret_cast< stk::Noise * >(argp1);
  result = (stk::StkFloat)((stk::Noise const *)arg1)->lastOut();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Noise_tick__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Noise *arg1 = (stk::Noise *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Noise, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Noise_tick" "', argument " "1"" of type '" "stk::Noise *""'"); 
  }
  arg1 = reinterpret_cast< stk::Noise * >(argp1);
  result = (stk::StkFloat)(arg1)->tick();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Noise_tick__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Noise *arg1 = (stk::Noise *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Noise, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Noise_tick" "', argument " "1"" of type '" "stk::Noise *""'"); 
  }
  arg1 = reinterpret_cast< stk::Noise * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Noise_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Noise_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Noise_tick" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Noise_tick__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Noise *arg1 = (stk::Noise *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Noise, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Noise_tick" "', argument " "1"" of type '" "stk::Noise *""'"); 
  }
  arg1 = reinterpret_cast< stk::Noise * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Noise_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Noise_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Noise_tick(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Noise_tick", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Noise, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Noise_tick__SWIG_0(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Noise, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Noise_tick__SWIG_2(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Noise, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Noise_tick__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Noise_tick'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::Noise::tick()\n"
    "    stk::Noise::tick(stk::StkFrames &,unsigned int)\n"
    "    stk::Noise::tick(stk::StkFrames &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_Noise(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Noise *arg1 = (stk::Noise *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Noise, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Noise" "', argument " "1"" of type '" "stk::Noise *""'"); 
  }
  arg1 = reinterpret_cast< stk::Noise * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Noise_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_stk__Noise, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *Noise_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_OnePole__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::StkFloat arg1 ;
  float val1 ;
  int ecode1 = 0 ;
  stk::OnePole *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_OnePole" "', argument " "1"" of type '" "stk::StkFloat""'");
  } 
  arg1 = static_cast< stk::StkFloat >(val1);
  result = (stk::OnePole *)new stk::OnePole(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__OnePole, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_OnePole__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  stk::OnePole *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (stk::OnePole *)new stk::OnePole();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__OnePole, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_OnePole(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_OnePole", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_OnePole__SWIG_1(self, argc, argv);
  }
  if (argc == 1) {
    int _v = 0;
    {
      int res = SWIG_AsVal_float(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_OnePole__SWIG_0(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_OnePole'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::OnePole::OnePole(stk::StkFloat)\n"
    "    stk::OnePole::OnePole()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_OnePole(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::OnePole *arg1 = (stk::OnePole *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__OnePole, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OnePole" "', argument " "1"" of type '" "stk::OnePole *""'"); 
  }
  arg1 = reinterpret_cast< stk::OnePole * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnePole_setB0(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::OnePole *arg1 = (stk::OnePole *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "OnePole_setB0", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__OnePole, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnePole_setB0" "', argument " "1"" of type '" "stk::OnePole *""'"); 
  }
  arg1 = reinterpret_cast< stk::OnePole * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OnePole_setB0" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setB0(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnePole_setA1(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::OnePole *arg1 = (stk::OnePole *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "OnePole_setA1", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__OnePole, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnePole_setA1" "', argument " "1"" of type '" "stk::OnePole *""'"); 
  }
  arg1 = reinterpret_cast< stk::OnePole * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OnePole_setA1" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setA1(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnePole_setCoefficients__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::OnePole *arg1 = (stk::OnePole *) 0 ;
  stk::StkFloat arg2 ;
  stk::StkFloat arg3 ;
  bool arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__OnePole, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnePole_setCoefficients" "', argument " "1"" of type '" "stk::OnePole *""'"); 
  }
  arg1 = reinterpret_cast< stk::OnePole * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OnePole_setCoefficients" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "OnePole_setCoefficients" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  ecode4 = SWIG_AsVal_bool(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "OnePole_setCoefficients" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  (arg1)->setCoefficients(arg2,arg3,arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnePole_setCoefficients__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::OnePole *arg1 = (stk::OnePole *) 0 ;
  stk::StkFloat arg2 ;
  stk::StkFloat arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__OnePole, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnePole_setCoefficients" "', argument " "1"" of type '" "stk::OnePole *""'"); 
  }
  arg1 = reinterpret_cast< stk::OnePole * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OnePole_setCoefficients" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "OnePole_setCoefficients" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  (arg1)->setCoefficients(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnePole_setCoefficients(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "OnePole_setCoefficients", 0, 4, argv))) SWIG_fail;
  --argc;
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__OnePole, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_OnePole_setCoefficients__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  if (argc == 4) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__OnePole, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_OnePole_setCoefficients__SWIG_0(self, argc, argv);
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'OnePole_setCoefficients'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::OnePole::setCoefficients(stk::StkFloat,stk::StkFloat,bool)\n"
    "    stk::OnePole::setCoefficients(stk::StkFloat,stk::StkFloat)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_OnePole_setPole(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::OnePole *arg1 = (stk::OnePole *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "OnePole_setPole", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__OnePole, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnePole_setPole" "', argument " "1"" of type '" "stk::OnePole *""'"); 
  }
  arg1 = reinterpret_cast< stk::OnePole * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OnePole_setPole" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setPole(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnePole_lastOut(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::OnePole *arg1 = (stk::OnePole *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  stk::StkFloat result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__OnePole, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnePole_lastOut" "', argument " "1"" of type '" "stk::OnePole const *""'"); 
  }
  arg1 = reinterpret_cast< stk::OnePole * >(argp1);
  result = (stk::StkFloat)((stk::OnePole const *)arg1)->lastOut();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnePole_tick__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::OnePole *arg1 = (stk::OnePole *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__OnePole, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnePole_tick" "', argument " "1"" of type '" "stk::OnePole *""'"); 
  }
  arg1 = reinterpret_cast< stk::OnePole * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OnePole_tick" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  result = (stk::StkFloat)(arg1)->tick(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnePole_tick__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::OnePole *arg1 = (stk::OnePole *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__OnePole, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnePole_tick" "', argument " "1"" of type '" "stk::OnePole *""'"); 
  }
  arg1 = reinterpret_cast< stk::OnePole * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OnePole_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OnePole_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "OnePole_tick" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnePole_tick__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::OnePole *arg1 = (stk::OnePole *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__OnePole, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnePole_tick" "', argument " "1"" of type '" "stk::OnePole *""'"); 
  }
  arg1 = reinterpret_cast< stk::OnePole * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OnePole_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OnePole_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnePole_tick__SWIG_3(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::OnePole *arg1 = (stk::OnePole *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  stk::StkFrames *arg3 = 0 ;
  unsigned int arg4 ;
  unsigned int arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  unsigned int val5 ;
  int ecode5 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__OnePole, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnePole_tick" "', argument " "1"" of type '" "stk::OnePole *""'"); 
  }
  arg1 = reinterpret_cast< stk::OnePole * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OnePole_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OnePole_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OnePole_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OnePole_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  arg3 = reinterpret_cast< stk::StkFrames * >(argp3);
  ecode4 = SWIG_AsVal_unsigned_SS_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "OnePole_tick" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  ecode5 = SWIG_AsVal_unsigned_SS_int(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "OnePole_tick" "', argument " "5"" of type '" "unsigned int""'");
  } 
  arg5 = static_cast< unsigned int >(val5);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,*arg3,arg4,arg5);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnePole_tick__SWIG_4(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::OnePole *arg1 = (stk::OnePole *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  stk::StkFrames *arg3 = 0 ;
  unsigned int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__OnePole, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnePole_tick" "', argument " "1"" of type '" "stk::OnePole *""'"); 
  }
  arg1 = reinterpret_cast< stk::OnePole * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OnePole_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OnePole_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OnePole_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OnePole_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  arg3 = reinterpret_cast< stk::StkFrames * >(argp3);
  ecode4 = SWIG_AsVal_unsigned_SS_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "OnePole_tick" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,*arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnePole_tick__SWIG_5(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::OnePole *arg1 = (stk::OnePole *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  stk::StkFrames *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__OnePole, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnePole_tick" "', argument " "1"" of type '" "stk::OnePole *""'"); 
  }
  arg1 = reinterpret_cast< stk::OnePole * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OnePole_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OnePole_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OnePole_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OnePole_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  arg3 = reinterpret_cast< stk::StkFrames * >(argp3);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,*arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnePole_tick(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[6] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "OnePole_tick", 0, 5, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__OnePole, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_OnePole_tick__SWIG_2(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__OnePole, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_OnePole_tick__SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__OnePole, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_OnePole_tick__SWIG_5(self, argc, argv);
        }
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__OnePole, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_OnePole_tick__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  if (argc == 4) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__OnePole, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_OnePole_tick__SWIG_4(self, argc, argv);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__OnePole, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_unsigned_SS_int(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_OnePole_tick__SWIG_3(self, argc, argv);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'OnePole_tick'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::OnePole::tick(stk::StkFloat)\n"
    "    stk::OnePole::tick(stk::StkFrames &,unsigned int)\n"
    "    stk::OnePole::tick(stk::StkFrames &)\n"
    "    stk::OnePole::tick(stk::StkFrames &,stk::StkFrames &,unsigned int,unsigned int)\n"
    "    stk::OnePole::tick(stk::StkFrames &,stk::StkFrames &,unsigned int)\n"
    "    stk::OnePole::tick(stk::StkFrames &,stk::StkFrames &)\n");
  return 0;
}


SWIGINTERN PyObject *OnePole_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_stk__OnePole, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *OnePole_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_OneZero__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::StkFloat arg1 ;
  float val1 ;
  int ecode1 = 0 ;
  stk::OneZero *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_OneZero" "', argument " "1"" of type '" "stk::StkFloat""'");
  } 
  arg1 = static_cast< stk::StkFloat >(val1);
  result = (stk::OneZero *)new stk::OneZero(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__OneZero, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_OneZero__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  stk::OneZero *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (stk::OneZero *)new stk::OneZero();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__OneZero, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_OneZero(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_OneZero", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_OneZero__SWIG_1(self, argc, argv);
  }
  if (argc == 1) {
    int _v = 0;
    {
      int res = SWIG_AsVal_float(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_OneZero__SWIG_0(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_OneZero'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::OneZero::OneZero(stk::StkFloat)\n"
    "    stk::OneZero::OneZero()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_OneZero(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::OneZero *arg1 = (stk::OneZero *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__OneZero, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OneZero" "', argument " "1"" of type '" "stk::OneZero *""'"); 
  }
  arg1 = reinterpret_cast< stk::OneZero * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OneZero_setB0(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::OneZero *arg1 = (stk::OneZero *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "OneZero_setB0", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__OneZero, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OneZero_setB0" "', argument " "1"" of type '" "stk::OneZero *""'"); 
  }
  arg1 = reinterpret_cast< stk::OneZero * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OneZero_setB0" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setB0(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OneZero_setB1(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::OneZero *arg1 = (stk::OneZero *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "OneZero_setB1", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__OneZero, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OneZero_setB1" "', argument " "1"" of type '" "stk::OneZero *""'"); 
  }
  arg1 = reinterpret_cast< stk::OneZero * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OneZero_setB1" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setB1(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OneZero_setCoefficients__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::OneZero *arg1 = (stk::OneZero *) 0 ;
  stk::StkFloat arg2 ;
  stk::StkFloat arg3 ;
  bool arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__OneZero, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OneZero_setCoefficients" "', argument " "1"" of type '" "stk::OneZero *""'"); 
  }
  arg1 = reinterpret_cast< stk::OneZero * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OneZero_setCoefficients" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "OneZero_setCoefficients" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  ecode4 = SWIG_AsVal_bool(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "OneZero_setCoefficients" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  (arg1)->setCoefficients(arg2,arg3,arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OneZero_setCoefficients__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::OneZero *arg1 = (stk::OneZero *) 0 ;
  stk::StkFloat arg2 ;
  stk::StkFloat arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__OneZero, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OneZero_setCoefficients" "', argument " "1"" of type '" "stk::OneZero *""'"); 
  }
  arg1 = reinterpret_cast< stk::OneZero * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OneZero_setCoefficients" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "OneZero_setCoefficients" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  (arg1)->setCoefficients(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OneZero_setCoefficients(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "OneZero_setCoefficients", 0, 4, argv))) SWIG_fail;
  --argc;
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__OneZero, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_OneZero_setCoefficients__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  if (argc == 4) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__OneZero, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_OneZero_setCoefficients__SWIG_0(self, argc, argv);
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'OneZero_setCoefficients'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::OneZero::setCoefficients(stk::StkFloat,stk::StkFloat,bool)\n"
    "    stk::OneZero::setCoefficients(stk::StkFloat,stk::StkFloat)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_OneZero_setZero(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::OneZero *arg1 = (stk::OneZero *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "OneZero_setZero", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__OneZero, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OneZero_setZero" "', argument " "1"" of type '" "stk::OneZero *""'"); 
  }
  arg1 = reinterpret_cast< stk::OneZero * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OneZero_setZero" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setZero(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OneZero_lastOut(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::OneZero *arg1 = (stk::OneZero *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  stk::StkFloat result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__OneZero, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OneZero_lastOut" "', argument " "1"" of type '" "stk::OneZero const *""'"); 
  }
  arg1 = reinterpret_cast< stk::OneZero * >(argp1);
  result = (stk::StkFloat)((stk::OneZero const *)arg1)->lastOut();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OneZero_tick__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::OneZero *arg1 = (stk::OneZero *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__OneZero, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OneZero_tick" "', argument " "1"" of type '" "stk::OneZero *""'"); 
  }
  arg1 = reinterpret_cast< stk::OneZero * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OneZero_tick" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  result = (stk::StkFloat)(arg1)->tick(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OneZero_tick__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::OneZero *arg1 = (stk::OneZero *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__OneZero, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OneZero_tick" "', argument " "1"" of type '" "stk::OneZero *""'"); 
  }
  arg1 = reinterpret_cast< stk::OneZero * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OneZero_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OneZero_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "OneZero_tick" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OneZero_tick__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::OneZero *arg1 = (stk::OneZero *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__OneZero, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OneZero_tick" "', argument " "1"" of type '" "stk::OneZero *""'"); 
  }
  arg1 = reinterpret_cast< stk::OneZero * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OneZero_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OneZero_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OneZero_tick__SWIG_3(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::OneZero *arg1 = (stk::OneZero *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  stk::StkFrames *arg3 = 0 ;
  unsigned int arg4 ;
  unsigned int arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  unsigned int val5 ;
  int ecode5 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__OneZero, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OneZero_tick" "', argument " "1"" of type '" "stk::OneZero *""'"); 
  }
  arg1 = reinterpret_cast< stk::OneZero * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OneZero_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OneZero_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OneZero_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OneZero_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  arg3 = reinterpret_cast< stk::StkFrames * >(argp3);
  ecode4 = SWIG_AsVal_unsigned_SS_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "OneZero_tick" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  ecode5 = SWIG_AsVal_unsigned_SS_int(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "OneZero_tick" "', argument " "5"" of type '" "unsigned int""'");
  } 
  arg5 = static_cast< unsigned int >(val5);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,*arg3,arg4,arg5);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OneZero_tick__SWIG_4(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::OneZero *arg1 = (stk::OneZero *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  stk::StkFrames *arg3 = 0 ;
  unsigned int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__OneZero, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OneZero_tick" "', argument " "1"" of type '" "stk::OneZero *""'"); 
  }
  arg1 = reinterpret_cast< stk::OneZero * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OneZero_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OneZero_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OneZero_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OneZero_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  arg3 = reinterpret_cast< stk::StkFrames * >(argp3);
  ecode4 = SWIG_AsVal_unsigned_SS_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "OneZero_tick" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,*arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OneZero_tick__SWIG_5(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::OneZero *arg1 = (stk::OneZero *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  stk::StkFrames *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__OneZero, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OneZero_tick" "', argument " "1"" of type '" "stk::OneZero *""'"); 
  }
  arg1 = reinterpret_cast< stk::OneZero * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OneZero_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OneZero_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OneZero_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OneZero_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  arg3 = reinterpret_cast< stk::StkFrames * >(argp3);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,*arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OneZero_tick(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[6] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "OneZero_tick", 0, 5, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__OneZero, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_OneZero_tick__SWIG_2(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__OneZero, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_OneZero_tick__SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__OneZero, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_OneZero_tick__SWIG_5(self, argc, argv);
        }
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__OneZero, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_OneZero_tick__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  if (argc == 4) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__OneZero, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_OneZero_tick__SWIG_4(self, argc, argv);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__OneZero, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_unsigned_SS_int(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_OneZero_tick__SWIG_3(self, argc, argv);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'OneZero_tick'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::OneZero::tick(stk::StkFloat)\n"
    "    stk::OneZero::tick(stk::StkFrames &,unsigned int)\n"
    "    stk::OneZero::tick(stk::StkFrames &)\n"
    "    stk::OneZero::tick(stk::StkFrames &,stk::StkFrames &,unsigned int,unsigned int)\n"
    "    stk::OneZero::tick(stk::StkFrames &,stk::StkFrames &,unsigned int)\n"
    "    stk::OneZero::tick(stk::StkFrames &,stk::StkFrames &)\n");
  return 0;
}


SWIGINTERN PyObject *OneZero_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_stk__OneZero, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *OneZero_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_PRCRev__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::StkFloat arg1 ;
  float val1 ;
  int ecode1 = 0 ;
  stk::PRCRev *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_PRCRev" "', argument " "1"" of type '" "stk::StkFloat""'");
  } 
  arg1 = static_cast< stk::StkFloat >(val1);
  result = (stk::PRCRev *)new stk::PRCRev(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__PRCRev, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_PRCRev__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  stk::PRCRev *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (stk::PRCRev *)new stk::PRCRev();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__PRCRev, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_PRCRev(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_PRCRev", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_PRCRev__SWIG_1(self, argc, argv);
  }
  if (argc == 1) {
    int _v = 0;
    {
      int res = SWIG_AsVal_float(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_PRCRev__SWIG_0(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_PRCRev'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::PRCRev::PRCRev(stk::StkFloat)\n"
    "    stk::PRCRev::PRCRev()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_PRCRev_clear(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::PRCRev *arg1 = (stk::PRCRev *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__PRCRev, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PRCRev_clear" "', argument " "1"" of type '" "stk::PRCRev *""'"); 
  }
  arg1 = reinterpret_cast< stk::PRCRev * >(argp1);
  (arg1)->clear();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PRCRev_setT60(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::PRCRev *arg1 = (stk::PRCRev *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "PRCRev_setT60", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__PRCRev, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PRCRev_setT60" "', argument " "1"" of type '" "stk::PRCRev *""'"); 
  }
  arg1 = reinterpret_cast< stk::PRCRev * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PRCRev_setT60" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setT60(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PRCRev_lastOut__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::PRCRev *arg1 = (stk::PRCRev *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__PRCRev, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PRCRev_lastOut" "', argument " "1"" of type '" "stk::PRCRev *""'"); 
  }
  arg1 = reinterpret_cast< stk::PRCRev * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PRCRev_lastOut" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (stk::StkFloat)(arg1)->lastOut(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PRCRev_lastOut__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::PRCRev *arg1 = (stk::PRCRev *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__PRCRev, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PRCRev_lastOut" "', argument " "1"" of type '" "stk::PRCRev *""'"); 
  }
  arg1 = reinterpret_cast< stk::PRCRev * >(argp1);
  result = (stk::StkFloat)(arg1)->lastOut();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PRCRev_lastOut(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "PRCRev_lastOut", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__PRCRev, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_PRCRev_lastOut__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__PRCRev, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_PRCRev_lastOut__SWIG_0(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'PRCRev_lastOut'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::PRCRev::lastOut(unsigned int)\n"
    "    stk::PRCRev::lastOut()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_PRCRev_tick__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::PRCRev *arg1 = (stk::PRCRev *) 0 ;
  stk::StkFloat arg2 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__PRCRev, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PRCRev_tick" "', argument " "1"" of type '" "stk::PRCRev *""'"); 
  }
  arg1 = reinterpret_cast< stk::PRCRev * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PRCRev_tick" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "PRCRev_tick" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  result = (stk::StkFloat)(arg1)->tick(arg2,arg3);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PRCRev_tick__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::PRCRev *arg1 = (stk::PRCRev *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__PRCRev, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PRCRev_tick" "', argument " "1"" of type '" "stk::PRCRev *""'"); 
  }
  arg1 = reinterpret_cast< stk::PRCRev * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PRCRev_tick" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  result = (stk::StkFloat)(arg1)->tick(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PRCRev_tick__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::PRCRev *arg1 = (stk::PRCRev *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__PRCRev, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PRCRev_tick" "', argument " "1"" of type '" "stk::PRCRev *""'"); 
  }
  arg1 = reinterpret_cast< stk::PRCRev * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PRCRev_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PRCRev_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "PRCRev_tick" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PRCRev_tick__SWIG_3(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::PRCRev *arg1 = (stk::PRCRev *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__PRCRev, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PRCRev_tick" "', argument " "1"" of type '" "stk::PRCRev *""'"); 
  }
  arg1 = reinterpret_cast< stk::PRCRev * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PRCRev_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PRCRev_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PRCRev_tick__SWIG_4(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::PRCRev *arg1 = (stk::PRCRev *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  stk::StkFrames *arg3 = 0 ;
  unsigned int arg4 ;
  unsigned int arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  unsigned int val5 ;
  int ecode5 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__PRCRev, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PRCRev_tick" "', argument " "1"" of type '" "stk::PRCRev *""'"); 
  }
  arg1 = reinterpret_cast< stk::PRCRev * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PRCRev_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PRCRev_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "PRCRev_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PRCRev_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  arg3 = reinterpret_cast< stk::StkFrames * >(argp3);
  ecode4 = SWIG_AsVal_unsigned_SS_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "PRCRev_tick" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  ecode5 = SWIG_AsVal_unsigned_SS_int(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "PRCRev_tick" "', argument " "5"" of type '" "unsigned int""'");
  } 
  arg5 = static_cast< unsigned int >(val5);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,*arg3,arg4,arg5);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PRCRev_tick__SWIG_5(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::PRCRev *arg1 = (stk::PRCRev *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  stk::StkFrames *arg3 = 0 ;
  unsigned int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__PRCRev, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PRCRev_tick" "', argument " "1"" of type '" "stk::PRCRev *""'"); 
  }
  arg1 = reinterpret_cast< stk::PRCRev * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PRCRev_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PRCRev_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "PRCRev_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PRCRev_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  arg3 = reinterpret_cast< stk::StkFrames * >(argp3);
  ecode4 = SWIG_AsVal_unsigned_SS_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "PRCRev_tick" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,*arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PRCRev_tick__SWIG_6(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::PRCRev *arg1 = (stk::PRCRev *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  stk::StkFrames *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__PRCRev, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PRCRev_tick" "', argument " "1"" of type '" "stk::PRCRev *""'"); 
  }
  arg1 = reinterpret_cast< stk::PRCRev * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PRCRev_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PRCRev_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "PRCRev_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PRCRev_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  arg3 = reinterpret_cast< stk::StkFrames * >(argp3);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,*arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PRCRev_tick(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[6] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "PRCRev_tick", 0, 5, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__PRCRev, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_PRCRev_tick__SWIG_3(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__PRCRev, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_PRCRev_tick__SWIG_1(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__PRCRev, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_PRCRev_tick__SWIG_6(self, argc, argv);
        }
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__PRCRev, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_PRCRev_tick__SWIG_2(self, argc, argv);
        }
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__PRCRev, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_PRCRev_tick__SWIG_0(self, argc, argv);
        }
      }
    }
  }
  if (argc == 4) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__PRCRev, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_PRCRev_tick__SWIG_5(self, argc, argv);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__PRCRev, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_unsigned_SS_int(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_PRCRev_tick__SWIG_4(self, argc, argv);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'PRCRev_tick'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::PRCRev::tick(stk::StkFloat,unsigned int)\n"
    "    stk::PRCRev::tick(stk::StkFloat)\n"
    "    stk::PRCRev::tick(stk::StkFrames &,unsigned int)\n"
    "    stk::PRCRev::tick(stk::StkFrames &)\n"
    "    stk::PRCRev::tick(stk::StkFrames &,stk::StkFrames &,unsigned int,unsigned int)\n"
    "    stk::PRCRev::tick(stk::StkFrames &,stk::StkFrames &,unsigned int)\n"
    "    stk::PRCRev::tick(stk::StkFrames &,stk::StkFrames &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_PRCRev(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::PRCRev *arg1 = (stk::PRCRev *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__PRCRev, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_PRCRev" "', argument " "1"" of type '" "stk::PRCRev *""'"); 
  }
  arg1 = reinterpret_cast< stk::PRCRev * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *PRCRev_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_stk__PRCRev, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *PRCRev_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_PercFlut(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::PercFlut *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_PercFlut", 0, 0, 0)) SWIG_fail;
  result = (stk::PercFlut *)new stk::PercFlut();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__PercFlut, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_PercFlut(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::PercFlut *arg1 = (stk::PercFlut *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__PercFlut, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_PercFlut" "', argument " "1"" of type '" "stk::PercFlut *""'"); 
  }
  arg1 = reinterpret_cast< stk::PercFlut * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PercFlut_setFrequency(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::PercFlut *arg1 = (stk::PercFlut *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "PercFlut_setFrequency", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__PercFlut, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PercFlut_setFrequency" "', argument " "1"" of type '" "stk::PercFlut *""'"); 
  }
  arg1 = reinterpret_cast< stk::PercFlut * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PercFlut_setFrequency" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setFrequency(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PercFlut_noteOn(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::PercFlut *arg1 = (stk::PercFlut *) 0 ;
  stk::StkFloat arg2 ;
  stk::StkFloat arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "PercFlut_noteOn", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__PercFlut, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PercFlut_noteOn" "', argument " "1"" of type '" "stk::PercFlut *""'"); 
  }
  arg1 = reinterpret_cast< stk::PercFlut * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PercFlut_noteOn" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "PercFlut_noteOn" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  (arg1)->noteOn(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PercFlut_tick__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::PercFlut *arg1 = (stk::PercFlut *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__PercFlut, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PercFlut_tick" "', argument " "1"" of type '" "stk::PercFlut *""'"); 
  }
  arg1 = reinterpret_cast< stk::PercFlut * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PercFlut_tick" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (stk::StkFloat)(arg1)->tick(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PercFlut_tick__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::PercFlut *arg1 = (stk::PercFlut *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__PercFlut, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PercFlut_tick" "', argument " "1"" of type '" "stk::PercFlut *""'"); 
  }
  arg1 = reinterpret_cast< stk::PercFlut * >(argp1);
  result = (stk::StkFloat)(arg1)->tick();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PercFlut_tick__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::PercFlut *arg1 = (stk::PercFlut *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__PercFlut, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PercFlut_tick" "', argument " "1"" of type '" "stk::PercFlut *""'"); 
  }
  arg1 = reinterpret_cast< stk::PercFlut * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PercFlut_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PercFlut_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "PercFlut_tick" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PercFlut_tick__SWIG_3(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::PercFlut *arg1 = (stk::PercFlut *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__PercFlut, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PercFlut_tick" "', argument " "1"" of type '" "stk::PercFlut *""'"); 
  }
  arg1 = reinterpret_cast< stk::PercFlut * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PercFlut_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PercFlut_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PercFlut_tick(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "PercFlut_tick", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__PercFlut, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_PercFlut_tick__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__PercFlut, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_PercFlut_tick__SWIG_3(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__PercFlut, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_PercFlut_tick__SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__PercFlut, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_PercFlut_tick__SWIG_2(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'PercFlut_tick'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::PercFlut::tick(unsigned int)\n"
    "    stk::PercFlut::tick()\n"
    "    stk::PercFlut::tick(stk::StkFrames &,unsigned int)\n"
    "    stk::PercFlut::tick(stk::StkFrames &)\n");
  return 0;
}


SWIGINTERN PyObject *PercFlut_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_stk__PercFlut, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *PercFlut_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_Phonemes(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Phonemes *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_Phonemes", 0, 0, 0)) SWIG_fail;
  result = (stk::Phonemes *)new stk::Phonemes();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__Phonemes, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Phonemes(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Phonemes *arg1 = (stk::Phonemes *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Phonemes, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Phonemes" "', argument " "1"" of type '" "stk::Phonemes *""'"); 
  }
  arg1 = reinterpret_cast< stk::Phonemes * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Phonemes_name(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  ecode1 = SWIG_AsVal_unsigned_SS_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Phonemes_name" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  result = (char *)stk::Phonemes::name(arg1);
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Phonemes_voiceGain(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  PyObject *swig_obj[1] ;
  stk::StkFloat result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  ecode1 = SWIG_AsVal_unsigned_SS_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Phonemes_voiceGain" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  result = (stk::StkFloat)stk::Phonemes::voiceGain(arg1);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Phonemes_noiseGain(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  PyObject *swig_obj[1] ;
  stk::StkFloat result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  ecode1 = SWIG_AsVal_unsigned_SS_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Phonemes_noiseGain" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  result = (stk::StkFloat)stk::Phonemes::noiseGain(arg1);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Phonemes_formantFrequency(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  unsigned int arg2 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  stk::StkFloat result;
  
  if (!SWIG_Python_UnpackTuple(args, "Phonemes_formantFrequency", 2, 2, swig_obj)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Phonemes_formantFrequency" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Phonemes_formantFrequency" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (stk::StkFloat)stk::Phonemes::formantFrequency(arg1,arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Phonemes_formantRadius(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  unsigned int arg2 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  stk::StkFloat result;
  
  if (!SWIG_Python_UnpackTuple(args, "Phonemes_formantRadius", 2, 2, swig_obj)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Phonemes_formantRadius" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Phonemes_formantRadius" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (stk::StkFloat)stk::Phonemes::formantRadius(arg1,arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Phonemes_formantGain(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  unsigned int arg2 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  stk::StkFloat result;
  
  if (!SWIG_Python_UnpackTuple(args, "Phonemes_formantGain", 2, 2, swig_obj)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Phonemes_formantGain" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Phonemes_formantGain" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (stk::StkFloat)stk::Phonemes::formantGain(arg1,arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Phonemes_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_stk__Phonemes, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *Phonemes_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_PitShift(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::PitShift *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_PitShift", 0, 0, 0)) SWIG_fail;
  result = (stk::PitShift *)new stk::PitShift();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__PitShift, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PitShift_clear(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::PitShift *arg1 = (stk::PitShift *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__PitShift, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PitShift_clear" "', argument " "1"" of type '" "stk::PitShift *""'"); 
  }
  arg1 = reinterpret_cast< stk::PitShift * >(argp1);
  (arg1)->clear();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PitShift_setShift(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::PitShift *arg1 = (stk::PitShift *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "PitShift_setShift", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__PitShift, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PitShift_setShift" "', argument " "1"" of type '" "stk::PitShift *""'"); 
  }
  arg1 = reinterpret_cast< stk::PitShift * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PitShift_setShift" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setShift(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PitShift_lastOut(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::PitShift *arg1 = (stk::PitShift *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  stk::StkFloat result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__PitShift, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PitShift_lastOut" "', argument " "1"" of type '" "stk::PitShift *""'"); 
  }
  arg1 = reinterpret_cast< stk::PitShift * >(argp1);
  result = (stk::StkFloat)(arg1)->lastOut();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PitShift_tick__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::PitShift *arg1 = (stk::PitShift *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__PitShift, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PitShift_tick" "', argument " "1"" of type '" "stk::PitShift *""'"); 
  }
  arg1 = reinterpret_cast< stk::PitShift * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PitShift_tick" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  result = (stk::StkFloat)(arg1)->tick(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PitShift_tick__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::PitShift *arg1 = (stk::PitShift *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__PitShift, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PitShift_tick" "', argument " "1"" of type '" "stk::PitShift *""'"); 
  }
  arg1 = reinterpret_cast< stk::PitShift * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PitShift_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PitShift_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "PitShift_tick" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PitShift_tick__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::PitShift *arg1 = (stk::PitShift *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__PitShift, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PitShift_tick" "', argument " "1"" of type '" "stk::PitShift *""'"); 
  }
  arg1 = reinterpret_cast< stk::PitShift * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PitShift_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PitShift_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PitShift_tick__SWIG_3(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::PitShift *arg1 = (stk::PitShift *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  stk::StkFrames *arg3 = 0 ;
  unsigned int arg4 ;
  unsigned int arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  unsigned int val5 ;
  int ecode5 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__PitShift, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PitShift_tick" "', argument " "1"" of type '" "stk::PitShift *""'"); 
  }
  arg1 = reinterpret_cast< stk::PitShift * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PitShift_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PitShift_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "PitShift_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PitShift_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  arg3 = reinterpret_cast< stk::StkFrames * >(argp3);
  ecode4 = SWIG_AsVal_unsigned_SS_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "PitShift_tick" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  ecode5 = SWIG_AsVal_unsigned_SS_int(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "PitShift_tick" "', argument " "5"" of type '" "unsigned int""'");
  } 
  arg5 = static_cast< unsigned int >(val5);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,*arg3,arg4,arg5);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PitShift_tick__SWIG_4(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::PitShift *arg1 = (stk::PitShift *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  stk::StkFrames *arg3 = 0 ;
  unsigned int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__PitShift, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PitShift_tick" "', argument " "1"" of type '" "stk::PitShift *""'"); 
  }
  arg1 = reinterpret_cast< stk::PitShift * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PitShift_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PitShift_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "PitShift_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PitShift_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  arg3 = reinterpret_cast< stk::StkFrames * >(argp3);
  ecode4 = SWIG_AsVal_unsigned_SS_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "PitShift_tick" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,*arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PitShift_tick__SWIG_5(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::PitShift *arg1 = (stk::PitShift *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  stk::StkFrames *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__PitShift, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PitShift_tick" "', argument " "1"" of type '" "stk::PitShift *""'"); 
  }
  arg1 = reinterpret_cast< stk::PitShift * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PitShift_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PitShift_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "PitShift_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PitShift_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  arg3 = reinterpret_cast< stk::StkFrames * >(argp3);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,*arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PitShift_tick(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[6] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "PitShift_tick", 0, 5, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__PitShift, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_PitShift_tick__SWIG_2(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__PitShift, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_PitShift_tick__SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__PitShift, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_PitShift_tick__SWIG_5(self, argc, argv);
        }
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__PitShift, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_PitShift_tick__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  if (argc == 4) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__PitShift, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_PitShift_tick__SWIG_4(self, argc, argv);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__PitShift, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_unsigned_SS_int(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_PitShift_tick__SWIG_3(self, argc, argv);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'PitShift_tick'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::PitShift::tick(stk::StkFloat)\n"
    "    stk::PitShift::tick(stk::StkFrames &,unsigned int)\n"
    "    stk::PitShift::tick(stk::StkFrames &)\n"
    "    stk::PitShift::tick(stk::StkFrames &,stk::StkFrames &,unsigned int,unsigned int)\n"
    "    stk::PitShift::tick(stk::StkFrames &,stk::StkFrames &,unsigned int)\n"
    "    stk::PitShift::tick(stk::StkFrames &,stk::StkFrames &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_PitShift(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::PitShift *arg1 = (stk::PitShift *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__PitShift, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_PitShift" "', argument " "1"" of type '" "stk::PitShift *""'"); 
  }
  arg1 = reinterpret_cast< stk::PitShift * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *PitShift_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_stk__PitShift, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *PitShift_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_Plucked__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::StkFloat arg1 ;
  float val1 ;
  int ecode1 = 0 ;
  stk::Plucked *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Plucked" "', argument " "1"" of type '" "stk::StkFloat""'");
  } 
  arg1 = static_cast< stk::StkFloat >(val1);
  result = (stk::Plucked *)new stk::Plucked(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__Plucked, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Plucked__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  stk::Plucked *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (stk::Plucked *)new stk::Plucked();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__Plucked, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Plucked(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_Plucked", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_Plucked__SWIG_1(self, argc, argv);
  }
  if (argc == 1) {
    int _v = 0;
    {
      int res = SWIG_AsVal_float(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_Plucked__SWIG_0(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_Plucked'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::Plucked::Plucked(stk::StkFloat)\n"
    "    stk::Plucked::Plucked()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_Plucked(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Plucked *arg1 = (stk::Plucked *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Plucked, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Plucked" "', argument " "1"" of type '" "stk::Plucked *""'"); 
  }
  arg1 = reinterpret_cast< stk::Plucked * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Plucked_clear(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Plucked *arg1 = (stk::Plucked *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Plucked, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Plucked_clear" "', argument " "1"" of type '" "stk::Plucked *""'"); 
  }
  arg1 = reinterpret_cast< stk::Plucked * >(argp1);
  (arg1)->clear();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Plucked_setFrequency(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Plucked *arg1 = (stk::Plucked *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Plucked_setFrequency", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Plucked, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Plucked_setFrequency" "', argument " "1"" of type '" "stk::Plucked *""'"); 
  }
  arg1 = reinterpret_cast< stk::Plucked * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Plucked_setFrequency" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setFrequency(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Plucked_pluck(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Plucked *arg1 = (stk::Plucked *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Plucked_pluck", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Plucked, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Plucked_pluck" "', argument " "1"" of type '" "stk::Plucked *""'"); 
  }
  arg1 = reinterpret_cast< stk::Plucked * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Plucked_pluck" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->pluck(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Plucked_noteOn(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Plucked *arg1 = (stk::Plucked *) 0 ;
  stk::StkFloat arg2 ;
  stk::StkFloat arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Plucked_noteOn", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Plucked, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Plucked_noteOn" "', argument " "1"" of type '" "stk::Plucked *""'"); 
  }
  arg1 = reinterpret_cast< stk::Plucked * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Plucked_noteOn" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Plucked_noteOn" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  (arg1)->noteOn(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Plucked_noteOff(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Plucked *arg1 = (stk::Plucked *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Plucked_noteOff", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Plucked, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Plucked_noteOff" "', argument " "1"" of type '" "stk::Plucked *""'"); 
  }
  arg1 = reinterpret_cast< stk::Plucked * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Plucked_noteOff" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->noteOff(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Plucked_tick__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Plucked *arg1 = (stk::Plucked *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Plucked, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Plucked_tick" "', argument " "1"" of type '" "stk::Plucked *""'"); 
  }
  arg1 = reinterpret_cast< stk::Plucked * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Plucked_tick" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (stk::StkFloat)(arg1)->tick(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Plucked_tick__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Plucked *arg1 = (stk::Plucked *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Plucked, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Plucked_tick" "', argument " "1"" of type '" "stk::Plucked *""'"); 
  }
  arg1 = reinterpret_cast< stk::Plucked * >(argp1);
  result = (stk::StkFloat)(arg1)->tick();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Plucked_tick__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Plucked *arg1 = (stk::Plucked *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Plucked, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Plucked_tick" "', argument " "1"" of type '" "stk::Plucked *""'"); 
  }
  arg1 = reinterpret_cast< stk::Plucked * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Plucked_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Plucked_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Plucked_tick" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Plucked_tick__SWIG_3(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Plucked *arg1 = (stk::Plucked *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Plucked, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Plucked_tick" "', argument " "1"" of type '" "stk::Plucked *""'"); 
  }
  arg1 = reinterpret_cast< stk::Plucked * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Plucked_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Plucked_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Plucked_tick(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Plucked_tick", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Plucked, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Plucked_tick__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Plucked, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Plucked_tick__SWIG_3(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Plucked, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Plucked_tick__SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Plucked, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Plucked_tick__SWIG_2(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Plucked_tick'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::Plucked::tick(unsigned int)\n"
    "    stk::Plucked::tick()\n"
    "    stk::Plucked::tick(stk::StkFrames &,unsigned int)\n"
    "    stk::Plucked::tick(stk::StkFrames &)\n");
  return 0;
}


SWIGINTERN PyObject *Plucked_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_stk__Plucked, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *Plucked_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_PoleZero(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::PoleZero *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_PoleZero", 0, 0, 0)) SWIG_fail;
  result = (stk::PoleZero *)new stk::PoleZero();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__PoleZero, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_PoleZero(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::PoleZero *arg1 = (stk::PoleZero *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__PoleZero, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_PoleZero" "', argument " "1"" of type '" "stk::PoleZero *""'"); 
  }
  arg1 = reinterpret_cast< stk::PoleZero * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoleZero_setB0(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::PoleZero *arg1 = (stk::PoleZero *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "PoleZero_setB0", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__PoleZero, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoleZero_setB0" "', argument " "1"" of type '" "stk::PoleZero *""'"); 
  }
  arg1 = reinterpret_cast< stk::PoleZero * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoleZero_setB0" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setB0(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoleZero_setB1(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::PoleZero *arg1 = (stk::PoleZero *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "PoleZero_setB1", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__PoleZero, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoleZero_setB1" "', argument " "1"" of type '" "stk::PoleZero *""'"); 
  }
  arg1 = reinterpret_cast< stk::PoleZero * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoleZero_setB1" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setB1(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoleZero_setA1(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::PoleZero *arg1 = (stk::PoleZero *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "PoleZero_setA1", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__PoleZero, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoleZero_setA1" "', argument " "1"" of type '" "stk::PoleZero *""'"); 
  }
  arg1 = reinterpret_cast< stk::PoleZero * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoleZero_setA1" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setA1(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoleZero_setCoefficients__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::PoleZero *arg1 = (stk::PoleZero *) 0 ;
  stk::StkFloat arg2 ;
  stk::StkFloat arg3 ;
  stk::StkFloat arg4 ;
  bool arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  
  if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__PoleZero, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoleZero_setCoefficients" "', argument " "1"" of type '" "stk::PoleZero *""'"); 
  }
  arg1 = reinterpret_cast< stk::PoleZero * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoleZero_setCoefficients" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "PoleZero_setCoefficients" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "PoleZero_setCoefficients" "', argument " "4"" of type '" "stk::StkFloat""'");
  } 
  arg4 = static_cast< stk::StkFloat >(val4);
  ecode5 = SWIG_AsVal_bool(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "PoleZero_setCoefficients" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  (arg1)->setCoefficients(arg2,arg3,arg4,arg5);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoleZero_setCoefficients__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::PoleZero *arg1 = (stk::PoleZero *) 0 ;
  stk::StkFloat arg2 ;
  stk::StkFloat arg3 ;
  stk::StkFloat arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__PoleZero, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoleZero_setCoefficients" "', argument " "1"" of type '" "stk::PoleZero *""'"); 
  }
  arg1 = reinterpret_cast< stk::PoleZero * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoleZero_setCoefficients" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "PoleZero_setCoefficients" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "PoleZero_setCoefficients" "', argument " "4"" of type '" "stk::StkFloat""'");
  } 
  arg4 = static_cast< stk::StkFloat >(val4);
  (arg1)->setCoefficients(arg2,arg3,arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoleZero_setCoefficients(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[6] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "PoleZero_setCoefficients", 0, 5, argv))) SWIG_fail;
  --argc;
  if (argc == 4) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__PoleZero, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_PoleZero_setCoefficients__SWIG_1(self, argc, argv);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__PoleZero, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_PoleZero_setCoefficients__SWIG_0(self, argc, argv);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'PoleZero_setCoefficients'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::PoleZero::setCoefficients(stk::StkFloat,stk::StkFloat,stk::StkFloat,bool)\n"
    "    stk::PoleZero::setCoefficients(stk::StkFloat,stk::StkFloat,stk::StkFloat)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_PoleZero_setAllpass(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::PoleZero *arg1 = (stk::PoleZero *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "PoleZero_setAllpass", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__PoleZero, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoleZero_setAllpass" "', argument " "1"" of type '" "stk::PoleZero *""'"); 
  }
  arg1 = reinterpret_cast< stk::PoleZero * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoleZero_setAllpass" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setAllpass(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoleZero_setBlockZero__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::PoleZero *arg1 = (stk::PoleZero *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__PoleZero, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoleZero_setBlockZero" "', argument " "1"" of type '" "stk::PoleZero *""'"); 
  }
  arg1 = reinterpret_cast< stk::PoleZero * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoleZero_setBlockZero" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setBlockZero(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoleZero_setBlockZero__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::PoleZero *arg1 = (stk::PoleZero *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__PoleZero, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoleZero_setBlockZero" "', argument " "1"" of type '" "stk::PoleZero *""'"); 
  }
  arg1 = reinterpret_cast< stk::PoleZero * >(argp1);
  (arg1)->setBlockZero();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoleZero_setBlockZero(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "PoleZero_setBlockZero", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__PoleZero, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_PoleZero_setBlockZero__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__PoleZero, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_PoleZero_setBlockZero__SWIG_0(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'PoleZero_setBlockZero'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::PoleZero::setBlockZero(stk::StkFloat)\n"
    "    stk::PoleZero::setBlockZero()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_PoleZero_lastOut(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::PoleZero *arg1 = (stk::PoleZero *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  stk::StkFloat result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__PoleZero, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoleZero_lastOut" "', argument " "1"" of type '" "stk::PoleZero const *""'"); 
  }
  arg1 = reinterpret_cast< stk::PoleZero * >(argp1);
  result = (stk::StkFloat)((stk::PoleZero const *)arg1)->lastOut();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoleZero_tick__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::PoleZero *arg1 = (stk::PoleZero *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__PoleZero, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoleZero_tick" "', argument " "1"" of type '" "stk::PoleZero *""'"); 
  }
  arg1 = reinterpret_cast< stk::PoleZero * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PoleZero_tick" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  result = (stk::StkFloat)(arg1)->tick(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoleZero_tick__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::PoleZero *arg1 = (stk::PoleZero *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__PoleZero, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoleZero_tick" "', argument " "1"" of type '" "stk::PoleZero *""'"); 
  }
  arg1 = reinterpret_cast< stk::PoleZero * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoleZero_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PoleZero_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "PoleZero_tick" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoleZero_tick__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::PoleZero *arg1 = (stk::PoleZero *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__PoleZero, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PoleZero_tick" "', argument " "1"" of type '" "stk::PoleZero *""'"); 
  }
  arg1 = reinterpret_cast< stk::PoleZero * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PoleZero_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PoleZero_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PoleZero_tick(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "PoleZero_tick", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__PoleZero, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_PoleZero_tick__SWIG_2(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__PoleZero, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_PoleZero_tick__SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__PoleZero, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_PoleZero_tick__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'PoleZero_tick'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::PoleZero::tick(stk::StkFloat)\n"
    "    stk::PoleZero::tick(stk::StkFrames &,unsigned int)\n"
    "    stk::PoleZero::tick(stk::StkFrames &)\n");
  return 0;
}


SWIGINTERN PyObject *PoleZero_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_stk__PoleZero, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *PoleZero_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_Recorder(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Recorder *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_Recorder", 0, 0, 0)) SWIG_fail;
  result = (stk::Recorder *)new stk::Recorder();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__Recorder, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Recorder(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Recorder *arg1 = (stk::Recorder *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Recorder, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Recorder" "', argument " "1"" of type '" "stk::Recorder *""'"); 
  }
  arg1 = reinterpret_cast< stk::Recorder * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Recorder_clear(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Recorder *arg1 = (stk::Recorder *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Recorder, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Recorder_clear" "', argument " "1"" of type '" "stk::Recorder *""'"); 
  }
  arg1 = reinterpret_cast< stk::Recorder * >(argp1);
  (arg1)->clear();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Recorder_setFrequency(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Recorder *arg1 = (stk::Recorder *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Recorder_setFrequency", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Recorder, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Recorder_setFrequency" "', argument " "1"" of type '" "stk::Recorder *""'"); 
  }
  arg1 = reinterpret_cast< stk::Recorder * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Recorder_setFrequency" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setFrequency(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Recorder_startBlowing(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Recorder *arg1 = (stk::Recorder *) 0 ;
  stk::StkFloat arg2 ;
  stk::StkFloat arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Recorder_startBlowing", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Recorder, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Recorder_startBlowing" "', argument " "1"" of type '" "stk::Recorder *""'"); 
  }
  arg1 = reinterpret_cast< stk::Recorder * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Recorder_startBlowing" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Recorder_startBlowing" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  (arg1)->startBlowing(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Recorder_stopBlowing(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Recorder *arg1 = (stk::Recorder *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Recorder_stopBlowing", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Recorder, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Recorder_stopBlowing" "', argument " "1"" of type '" "stk::Recorder *""'"); 
  }
  arg1 = reinterpret_cast< stk::Recorder * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Recorder_stopBlowing" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->stopBlowing(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Recorder_noteOn(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Recorder *arg1 = (stk::Recorder *) 0 ;
  stk::StkFloat arg2 ;
  stk::StkFloat arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Recorder_noteOn", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Recorder, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Recorder_noteOn" "', argument " "1"" of type '" "stk::Recorder *""'"); 
  }
  arg1 = reinterpret_cast< stk::Recorder * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Recorder_noteOn" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Recorder_noteOn" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  (arg1)->noteOn(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Recorder_noteOff(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Recorder *arg1 = (stk::Recorder *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Recorder_noteOff", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Recorder, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Recorder_noteOff" "', argument " "1"" of type '" "stk::Recorder *""'"); 
  }
  arg1 = reinterpret_cast< stk::Recorder * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Recorder_noteOff" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->noteOff(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Recorder_controlChange(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Recorder *arg1 = (stk::Recorder *) 0 ;
  int arg2 ;
  stk::StkFloat arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Recorder_controlChange", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Recorder, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Recorder_controlChange" "', argument " "1"" of type '" "stk::Recorder *""'"); 
  }
  arg1 = reinterpret_cast< stk::Recorder * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Recorder_controlChange" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Recorder_controlChange" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  (arg1)->controlChange(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Recorder_tick__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Recorder *arg1 = (stk::Recorder *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Recorder, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Recorder_tick" "', argument " "1"" of type '" "stk::Recorder *""'"); 
  }
  arg1 = reinterpret_cast< stk::Recorder * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Recorder_tick" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (stk::StkFloat)(arg1)->tick(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Recorder_tick__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Recorder *arg1 = (stk::Recorder *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Recorder, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Recorder_tick" "', argument " "1"" of type '" "stk::Recorder *""'"); 
  }
  arg1 = reinterpret_cast< stk::Recorder * >(argp1);
  result = (stk::StkFloat)(arg1)->tick();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Recorder_tick__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Recorder *arg1 = (stk::Recorder *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Recorder, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Recorder_tick" "', argument " "1"" of type '" "stk::Recorder *""'"); 
  }
  arg1 = reinterpret_cast< stk::Recorder * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Recorder_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Recorder_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Recorder_tick" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Recorder_tick__SWIG_3(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Recorder *arg1 = (stk::Recorder *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Recorder, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Recorder_tick" "', argument " "1"" of type '" "stk::Recorder *""'"); 
  }
  arg1 = reinterpret_cast< stk::Recorder * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Recorder_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Recorder_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Recorder_tick(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Recorder_tick", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Recorder, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Recorder_tick__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Recorder, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Recorder_tick__SWIG_3(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Recorder, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Recorder_tick__SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Recorder, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Recorder_tick__SWIG_2(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Recorder_tick'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::Recorder::tick(unsigned int)\n"
    "    stk::Recorder::tick()\n"
    "    stk::Recorder::tick(stk::StkFrames &,unsigned int)\n"
    "    stk::Recorder::tick(stk::StkFrames &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Recorder_setBlowPressure(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Recorder *arg1 = (stk::Recorder *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Recorder_setBlowPressure", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Recorder, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Recorder_setBlowPressure" "', argument " "1"" of type '" "stk::Recorder *""'"); 
  }
  arg1 = reinterpret_cast< stk::Recorder * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Recorder_setBlowPressure" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setBlowPressure(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Recorder_setVibratoGain(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Recorder *arg1 = (stk::Recorder *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Recorder_setVibratoGain", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Recorder, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Recorder_setVibratoGain" "', argument " "1"" of type '" "stk::Recorder *""'"); 
  }
  arg1 = reinterpret_cast< stk::Recorder * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Recorder_setVibratoGain" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setVibratoGain(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Recorder_setVibratoFrequency(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Recorder *arg1 = (stk::Recorder *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Recorder_setVibratoFrequency", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Recorder, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Recorder_setVibratoFrequency" "', argument " "1"" of type '" "stk::Recorder *""'"); 
  }
  arg1 = reinterpret_cast< stk::Recorder * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Recorder_setVibratoFrequency" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setVibratoFrequency(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Recorder_setNoiseGain(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Recorder *arg1 = (stk::Recorder *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Recorder_setNoiseGain", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Recorder, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Recorder_setNoiseGain" "', argument " "1"" of type '" "stk::Recorder *""'"); 
  }
  arg1 = reinterpret_cast< stk::Recorder * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Recorder_setNoiseGain" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setNoiseGain(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Recorder_setBreathCutoff(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Recorder *arg1 = (stk::Recorder *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Recorder_setBreathCutoff", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Recorder, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Recorder_setBreathCutoff" "', argument " "1"" of type '" "stk::Recorder *""'"); 
  }
  arg1 = reinterpret_cast< stk::Recorder * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Recorder_setBreathCutoff" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setBreathCutoff(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Recorder_setSoftness(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Recorder *arg1 = (stk::Recorder *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Recorder_setSoftness", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Recorder, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Recorder_setSoftness" "', argument " "1"" of type '" "stk::Recorder *""'"); 
  }
  arg1 = reinterpret_cast< stk::Recorder * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Recorder_setSoftness" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setSoftness(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Recorder_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_stk__Recorder, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *Recorder_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_ReedTable(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::ReedTable *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_ReedTable", 0, 0, 0)) SWIG_fail;
  result = (stk::ReedTable *)new stk::ReedTable();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__ReedTable, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ReedTable_setOffset(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::ReedTable *arg1 = (stk::ReedTable *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ReedTable_setOffset", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__ReedTable, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ReedTable_setOffset" "', argument " "1"" of type '" "stk::ReedTable *""'"); 
  }
  arg1 = reinterpret_cast< stk::ReedTable * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ReedTable_setOffset" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setOffset(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ReedTable_setSlope(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::ReedTable *arg1 = (stk::ReedTable *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ReedTable_setSlope", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__ReedTable, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ReedTable_setSlope" "', argument " "1"" of type '" "stk::ReedTable *""'"); 
  }
  arg1 = reinterpret_cast< stk::ReedTable * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ReedTable_setSlope" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setSlope(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ReedTable_tick__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::ReedTable *arg1 = (stk::ReedTable *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__ReedTable, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ReedTable_tick" "', argument " "1"" of type '" "stk::ReedTable *""'"); 
  }
  arg1 = reinterpret_cast< stk::ReedTable * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ReedTable_tick" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  result = (stk::StkFloat)(arg1)->tick(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ReedTable_tick__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::ReedTable *arg1 = (stk::ReedTable *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__ReedTable, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ReedTable_tick" "', argument " "1"" of type '" "stk::ReedTable *""'"); 
  }
  arg1 = reinterpret_cast< stk::ReedTable * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ReedTable_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ReedTable_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ReedTable_tick" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ReedTable_tick__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::ReedTable *arg1 = (stk::ReedTable *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__ReedTable, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ReedTable_tick" "', argument " "1"" of type '" "stk::ReedTable *""'"); 
  }
  arg1 = reinterpret_cast< stk::ReedTable * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ReedTable_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ReedTable_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ReedTable_tick__SWIG_3(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::ReedTable *arg1 = (stk::ReedTable *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  stk::StkFrames *arg3 = 0 ;
  unsigned int arg4 ;
  unsigned int arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  unsigned int val5 ;
  int ecode5 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__ReedTable, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ReedTable_tick" "', argument " "1"" of type '" "stk::ReedTable *""'"); 
  }
  arg1 = reinterpret_cast< stk::ReedTable * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ReedTable_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ReedTable_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ReedTable_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ReedTable_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  arg3 = reinterpret_cast< stk::StkFrames * >(argp3);
  ecode4 = SWIG_AsVal_unsigned_SS_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "ReedTable_tick" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  ecode5 = SWIG_AsVal_unsigned_SS_int(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "ReedTable_tick" "', argument " "5"" of type '" "unsigned int""'");
  } 
  arg5 = static_cast< unsigned int >(val5);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,*arg3,arg4,arg5);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ReedTable_tick__SWIG_4(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::ReedTable *arg1 = (stk::ReedTable *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  stk::StkFrames *arg3 = 0 ;
  unsigned int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__ReedTable, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ReedTable_tick" "', argument " "1"" of type '" "stk::ReedTable *""'"); 
  }
  arg1 = reinterpret_cast< stk::ReedTable * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ReedTable_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ReedTable_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ReedTable_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ReedTable_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  arg3 = reinterpret_cast< stk::StkFrames * >(argp3);
  ecode4 = SWIG_AsVal_unsigned_SS_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "ReedTable_tick" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,*arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ReedTable_tick__SWIG_5(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::ReedTable *arg1 = (stk::ReedTable *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  stk::StkFrames *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__ReedTable, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ReedTable_tick" "', argument " "1"" of type '" "stk::ReedTable *""'"); 
  }
  arg1 = reinterpret_cast< stk::ReedTable * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ReedTable_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ReedTable_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ReedTable_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ReedTable_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  arg3 = reinterpret_cast< stk::StkFrames * >(argp3);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,*arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ReedTable_tick(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[6] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "ReedTable_tick", 0, 5, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__ReedTable, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_ReedTable_tick__SWIG_2(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__ReedTable, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_ReedTable_tick__SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__ReedTable, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_ReedTable_tick__SWIG_5(self, argc, argv);
        }
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__ReedTable, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_ReedTable_tick__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  if (argc == 4) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__ReedTable, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_ReedTable_tick__SWIG_4(self, argc, argv);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__ReedTable, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_unsigned_SS_int(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_ReedTable_tick__SWIG_3(self, argc, argv);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'ReedTable_tick'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::ReedTable::tick(stk::StkFloat)\n"
    "    stk::ReedTable::tick(stk::StkFrames &,unsigned int)\n"
    "    stk::ReedTable::tick(stk::StkFrames &)\n"
    "    stk::ReedTable::tick(stk::StkFrames &,stk::StkFrames &,unsigned int,unsigned int)\n"
    "    stk::ReedTable::tick(stk::StkFrames &,stk::StkFrames &,unsigned int)\n"
    "    stk::ReedTable::tick(stk::StkFrames &,stk::StkFrames &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_ReedTable(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::ReedTable *arg1 = (stk::ReedTable *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__ReedTable, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ReedTable" "', argument " "1"" of type '" "stk::ReedTable *""'"); 
  }
  arg1 = reinterpret_cast< stk::ReedTable * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ReedTable_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_stk__ReedTable, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *ReedTable_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_Resonate(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Resonate *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_Resonate", 0, 0, 0)) SWIG_fail;
  result = (stk::Resonate *)new stk::Resonate();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__Resonate, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Resonate(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Resonate *arg1 = (stk::Resonate *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Resonate, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Resonate" "', argument " "1"" of type '" "stk::Resonate *""'"); 
  }
  arg1 = reinterpret_cast< stk::Resonate * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Resonate_setResonance(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Resonate *arg1 = (stk::Resonate *) 0 ;
  stk::StkFloat arg2 ;
  stk::StkFloat arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Resonate_setResonance", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Resonate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Resonate_setResonance" "', argument " "1"" of type '" "stk::Resonate *""'"); 
  }
  arg1 = reinterpret_cast< stk::Resonate * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Resonate_setResonance" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Resonate_setResonance" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  (arg1)->setResonance(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Resonate_setNotch(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Resonate *arg1 = (stk::Resonate *) 0 ;
  stk::StkFloat arg2 ;
  stk::StkFloat arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Resonate_setNotch", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Resonate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Resonate_setNotch" "', argument " "1"" of type '" "stk::Resonate *""'"); 
  }
  arg1 = reinterpret_cast< stk::Resonate * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Resonate_setNotch" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Resonate_setNotch" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  (arg1)->setNotch(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Resonate_setEqualGainZeroes(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Resonate *arg1 = (stk::Resonate *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Resonate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Resonate_setEqualGainZeroes" "', argument " "1"" of type '" "stk::Resonate *""'"); 
  }
  arg1 = reinterpret_cast< stk::Resonate * >(argp1);
  (arg1)->setEqualGainZeroes();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Resonate_keyOn(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Resonate *arg1 = (stk::Resonate *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Resonate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Resonate_keyOn" "', argument " "1"" of type '" "stk::Resonate *""'"); 
  }
  arg1 = reinterpret_cast< stk::Resonate * >(argp1);
  (arg1)->keyOn();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Resonate_keyOff(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Resonate *arg1 = (stk::Resonate *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Resonate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Resonate_keyOff" "', argument " "1"" of type '" "stk::Resonate *""'"); 
  }
  arg1 = reinterpret_cast< stk::Resonate * >(argp1);
  (arg1)->keyOff();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Resonate_noteOn(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Resonate *arg1 = (stk::Resonate *) 0 ;
  stk::StkFloat arg2 ;
  stk::StkFloat arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Resonate_noteOn", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Resonate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Resonate_noteOn" "', argument " "1"" of type '" "stk::Resonate *""'"); 
  }
  arg1 = reinterpret_cast< stk::Resonate * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Resonate_noteOn" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Resonate_noteOn" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  (arg1)->noteOn(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Resonate_noteOff(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Resonate *arg1 = (stk::Resonate *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Resonate_noteOff", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Resonate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Resonate_noteOff" "', argument " "1"" of type '" "stk::Resonate *""'"); 
  }
  arg1 = reinterpret_cast< stk::Resonate * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Resonate_noteOff" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->noteOff(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Resonate_controlChange(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Resonate *arg1 = (stk::Resonate *) 0 ;
  int arg2 ;
  stk::StkFloat arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Resonate_controlChange", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Resonate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Resonate_controlChange" "', argument " "1"" of type '" "stk::Resonate *""'"); 
  }
  arg1 = reinterpret_cast< stk::Resonate * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Resonate_controlChange" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Resonate_controlChange" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  (arg1)->controlChange(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Resonate_tick__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Resonate *arg1 = (stk::Resonate *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Resonate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Resonate_tick" "', argument " "1"" of type '" "stk::Resonate *""'"); 
  }
  arg1 = reinterpret_cast< stk::Resonate * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Resonate_tick" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (stk::StkFloat)(arg1)->tick(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Resonate_tick__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Resonate *arg1 = (stk::Resonate *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Resonate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Resonate_tick" "', argument " "1"" of type '" "stk::Resonate *""'"); 
  }
  arg1 = reinterpret_cast< stk::Resonate * >(argp1);
  result = (stk::StkFloat)(arg1)->tick();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Resonate_tick__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Resonate *arg1 = (stk::Resonate *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Resonate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Resonate_tick" "', argument " "1"" of type '" "stk::Resonate *""'"); 
  }
  arg1 = reinterpret_cast< stk::Resonate * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Resonate_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Resonate_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Resonate_tick" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Resonate_tick__SWIG_3(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Resonate *arg1 = (stk::Resonate *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Resonate, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Resonate_tick" "', argument " "1"" of type '" "stk::Resonate *""'"); 
  }
  arg1 = reinterpret_cast< stk::Resonate * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Resonate_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Resonate_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Resonate_tick(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Resonate_tick", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Resonate, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Resonate_tick__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Resonate, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Resonate_tick__SWIG_3(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Resonate, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Resonate_tick__SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Resonate, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Resonate_tick__SWIG_2(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Resonate_tick'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::Resonate::tick(unsigned int)\n"
    "    stk::Resonate::tick()\n"
    "    stk::Resonate::tick(stk::StkFrames &,unsigned int)\n"
    "    stk::Resonate::tick(stk::StkFrames &)\n");
  return 0;
}


SWIGINTERN PyObject *Resonate_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_stk__Resonate, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *Resonate_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_Rhodey(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Rhodey *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_Rhodey", 0, 0, 0)) SWIG_fail;
  result = (stk::Rhodey *)new stk::Rhodey();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__Rhodey, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Rhodey(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Rhodey *arg1 = (stk::Rhodey *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Rhodey, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Rhodey" "', argument " "1"" of type '" "stk::Rhodey *""'"); 
  }
  arg1 = reinterpret_cast< stk::Rhodey * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rhodey_setFrequency(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Rhodey *arg1 = (stk::Rhodey *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Rhodey_setFrequency", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Rhodey, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rhodey_setFrequency" "', argument " "1"" of type '" "stk::Rhodey *""'"); 
  }
  arg1 = reinterpret_cast< stk::Rhodey * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Rhodey_setFrequency" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setFrequency(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rhodey_noteOn(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Rhodey *arg1 = (stk::Rhodey *) 0 ;
  stk::StkFloat arg2 ;
  stk::StkFloat arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Rhodey_noteOn", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Rhodey, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rhodey_noteOn" "', argument " "1"" of type '" "stk::Rhodey *""'"); 
  }
  arg1 = reinterpret_cast< stk::Rhodey * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Rhodey_noteOn" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Rhodey_noteOn" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  (arg1)->noteOn(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rhodey_tick__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Rhodey *arg1 = (stk::Rhodey *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Rhodey, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rhodey_tick" "', argument " "1"" of type '" "stk::Rhodey *""'"); 
  }
  arg1 = reinterpret_cast< stk::Rhodey * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Rhodey_tick" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (stk::StkFloat)(arg1)->tick(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rhodey_tick__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Rhodey *arg1 = (stk::Rhodey *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Rhodey, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rhodey_tick" "', argument " "1"" of type '" "stk::Rhodey *""'"); 
  }
  arg1 = reinterpret_cast< stk::Rhodey * >(argp1);
  result = (stk::StkFloat)(arg1)->tick();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rhodey_tick__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Rhodey *arg1 = (stk::Rhodey *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Rhodey, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rhodey_tick" "', argument " "1"" of type '" "stk::Rhodey *""'"); 
  }
  arg1 = reinterpret_cast< stk::Rhodey * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Rhodey_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Rhodey_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Rhodey_tick" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rhodey_tick__SWIG_3(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Rhodey *arg1 = (stk::Rhodey *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Rhodey, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rhodey_tick" "', argument " "1"" of type '" "stk::Rhodey *""'"); 
  }
  arg1 = reinterpret_cast< stk::Rhodey * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Rhodey_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Rhodey_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Rhodey_tick(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Rhodey_tick", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Rhodey, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Rhodey_tick__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Rhodey, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Rhodey_tick__SWIG_3(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Rhodey, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Rhodey_tick__SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Rhodey, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Rhodey_tick__SWIG_2(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Rhodey_tick'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::Rhodey::tick(unsigned int)\n"
    "    stk::Rhodey::tick()\n"
    "    stk::Rhodey::tick(stk::StkFrames &,unsigned int)\n"
    "    stk::Rhodey::tick(stk::StkFrames &)\n");
  return 0;
}


SWIGINTERN PyObject *Rhodey_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_stk__Rhodey, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *Rhodey_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_Saxofony(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::StkFloat arg1 ;
  float val1 ;
  int ecode1 = 0 ;
  PyObject *swig_obj[1] ;
  stk::Saxofony *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Saxofony" "', argument " "1"" of type '" "stk::StkFloat""'");
  } 
  arg1 = static_cast< stk::StkFloat >(val1);
  result = (stk::Saxofony *)new stk::Saxofony(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__Saxofony, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Saxofony(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Saxofony *arg1 = (stk::Saxofony *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Saxofony, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Saxofony" "', argument " "1"" of type '" "stk::Saxofony *""'"); 
  }
  arg1 = reinterpret_cast< stk::Saxofony * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Saxofony_clear(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Saxofony *arg1 = (stk::Saxofony *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Saxofony, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Saxofony_clear" "', argument " "1"" of type '" "stk::Saxofony *""'"); 
  }
  arg1 = reinterpret_cast< stk::Saxofony * >(argp1);
  (arg1)->clear();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Saxofony_setFrequency(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Saxofony *arg1 = (stk::Saxofony *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Saxofony_setFrequency", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Saxofony, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Saxofony_setFrequency" "', argument " "1"" of type '" "stk::Saxofony *""'"); 
  }
  arg1 = reinterpret_cast< stk::Saxofony * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Saxofony_setFrequency" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setFrequency(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Saxofony_setBlowPosition(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Saxofony *arg1 = (stk::Saxofony *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Saxofony_setBlowPosition", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Saxofony, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Saxofony_setBlowPosition" "', argument " "1"" of type '" "stk::Saxofony *""'"); 
  }
  arg1 = reinterpret_cast< stk::Saxofony * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Saxofony_setBlowPosition" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setBlowPosition(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Saxofony_startBlowing(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Saxofony *arg1 = (stk::Saxofony *) 0 ;
  stk::StkFloat arg2 ;
  stk::StkFloat arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Saxofony_startBlowing", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Saxofony, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Saxofony_startBlowing" "', argument " "1"" of type '" "stk::Saxofony *""'"); 
  }
  arg1 = reinterpret_cast< stk::Saxofony * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Saxofony_startBlowing" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Saxofony_startBlowing" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  (arg1)->startBlowing(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Saxofony_stopBlowing(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Saxofony *arg1 = (stk::Saxofony *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Saxofony_stopBlowing", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Saxofony, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Saxofony_stopBlowing" "', argument " "1"" of type '" "stk::Saxofony *""'"); 
  }
  arg1 = reinterpret_cast< stk::Saxofony * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Saxofony_stopBlowing" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->stopBlowing(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Saxofony_noteOn(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Saxofony *arg1 = (stk::Saxofony *) 0 ;
  stk::StkFloat arg2 ;
  stk::StkFloat arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Saxofony_noteOn", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Saxofony, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Saxofony_noteOn" "', argument " "1"" of type '" "stk::Saxofony *""'"); 
  }
  arg1 = reinterpret_cast< stk::Saxofony * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Saxofony_noteOn" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Saxofony_noteOn" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  (arg1)->noteOn(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Saxofony_noteOff(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Saxofony *arg1 = (stk::Saxofony *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Saxofony_noteOff", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Saxofony, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Saxofony_noteOff" "', argument " "1"" of type '" "stk::Saxofony *""'"); 
  }
  arg1 = reinterpret_cast< stk::Saxofony * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Saxofony_noteOff" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->noteOff(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Saxofony_controlChange(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Saxofony *arg1 = (stk::Saxofony *) 0 ;
  int arg2 ;
  stk::StkFloat arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Saxofony_controlChange", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Saxofony, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Saxofony_controlChange" "', argument " "1"" of type '" "stk::Saxofony *""'"); 
  }
  arg1 = reinterpret_cast< stk::Saxofony * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Saxofony_controlChange" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Saxofony_controlChange" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  (arg1)->controlChange(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Saxofony_tick__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Saxofony *arg1 = (stk::Saxofony *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Saxofony, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Saxofony_tick" "', argument " "1"" of type '" "stk::Saxofony *""'"); 
  }
  arg1 = reinterpret_cast< stk::Saxofony * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Saxofony_tick" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (stk::StkFloat)(arg1)->tick(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Saxofony_tick__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Saxofony *arg1 = (stk::Saxofony *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Saxofony, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Saxofony_tick" "', argument " "1"" of type '" "stk::Saxofony *""'"); 
  }
  arg1 = reinterpret_cast< stk::Saxofony * >(argp1);
  result = (stk::StkFloat)(arg1)->tick();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Saxofony_tick__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Saxofony *arg1 = (stk::Saxofony *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Saxofony, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Saxofony_tick" "', argument " "1"" of type '" "stk::Saxofony *""'"); 
  }
  arg1 = reinterpret_cast< stk::Saxofony * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Saxofony_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Saxofony_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Saxofony_tick" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Saxofony_tick__SWIG_3(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Saxofony *arg1 = (stk::Saxofony *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Saxofony, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Saxofony_tick" "', argument " "1"" of type '" "stk::Saxofony *""'"); 
  }
  arg1 = reinterpret_cast< stk::Saxofony * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Saxofony_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Saxofony_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Saxofony_tick(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Saxofony_tick", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Saxofony, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Saxofony_tick__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Saxofony, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Saxofony_tick__SWIG_3(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Saxofony, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Saxofony_tick__SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Saxofony, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Saxofony_tick__SWIG_2(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Saxofony_tick'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::Saxofony::tick(unsigned int)\n"
    "    stk::Saxofony::tick()\n"
    "    stk::Saxofony::tick(stk::StkFrames &,unsigned int)\n"
    "    stk::Saxofony::tick(stk::StkFrames &)\n");
  return 0;
}


SWIGINTERN PyObject *Saxofony_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_stk__Saxofony, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *Saxofony_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_Shakers__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  int arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  stk::Shakers *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Shakers" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  result = (stk::Shakers *)new stk::Shakers(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__Shakers, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Shakers__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  stk::Shakers *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (stk::Shakers *)new stk::Shakers();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__Shakers, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Shakers(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_Shakers", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_Shakers__SWIG_1(self, argc, argv);
  }
  if (argc == 1) {
    int _v = 0;
    {
      int res = SWIG_AsVal_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_Shakers__SWIG_0(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_Shakers'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::Shakers::Shakers(int)\n"
    "    stk::Shakers::Shakers()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Shakers_noteOn(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Shakers *arg1 = (stk::Shakers *) 0 ;
  stk::StkFloat arg2 ;
  stk::StkFloat arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Shakers_noteOn", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Shakers, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Shakers_noteOn" "', argument " "1"" of type '" "stk::Shakers *""'"); 
  }
  arg1 = reinterpret_cast< stk::Shakers * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Shakers_noteOn" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Shakers_noteOn" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  (arg1)->noteOn(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Shakers_noteOff(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Shakers *arg1 = (stk::Shakers *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Shakers_noteOff", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Shakers, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Shakers_noteOff" "', argument " "1"" of type '" "stk::Shakers *""'"); 
  }
  arg1 = reinterpret_cast< stk::Shakers * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Shakers_noteOff" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->noteOff(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Shakers_controlChange(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Shakers *arg1 = (stk::Shakers *) 0 ;
  int arg2 ;
  stk::StkFloat arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Shakers_controlChange", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Shakers, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Shakers_controlChange" "', argument " "1"" of type '" "stk::Shakers *""'"); 
  }
  arg1 = reinterpret_cast< stk::Shakers * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Shakers_controlChange" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Shakers_controlChange" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  (arg1)->controlChange(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Shakers_tick__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Shakers *arg1 = (stk::Shakers *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Shakers, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Shakers_tick" "', argument " "1"" of type '" "stk::Shakers *""'"); 
  }
  arg1 = reinterpret_cast< stk::Shakers * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Shakers_tick" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (stk::StkFloat)(arg1)->tick(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Shakers_tick__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Shakers *arg1 = (stk::Shakers *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Shakers, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Shakers_tick" "', argument " "1"" of type '" "stk::Shakers *""'"); 
  }
  arg1 = reinterpret_cast< stk::Shakers * >(argp1);
  result = (stk::StkFloat)(arg1)->tick();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Shakers_tick__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Shakers *arg1 = (stk::Shakers *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Shakers, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Shakers_tick" "', argument " "1"" of type '" "stk::Shakers *""'"); 
  }
  arg1 = reinterpret_cast< stk::Shakers * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Shakers_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Shakers_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Shakers_tick" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Shakers_tick__SWIG_3(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Shakers *arg1 = (stk::Shakers *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Shakers, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Shakers_tick" "', argument " "1"" of type '" "stk::Shakers *""'"); 
  }
  arg1 = reinterpret_cast< stk::Shakers * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Shakers_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Shakers_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Shakers_tick(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Shakers_tick", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Shakers, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Shakers_tick__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Shakers, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Shakers_tick__SWIG_3(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Shakers, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Shakers_tick__SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Shakers, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Shakers_tick__SWIG_2(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Shakers_tick'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::Shakers::tick(unsigned int)\n"
    "    stk::Shakers::tick()\n"
    "    stk::Shakers::tick(stk::StkFrames &,unsigned int)\n"
    "    stk::Shakers::tick(stk::StkFrames &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_Shakers(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Shakers *arg1 = (stk::Shakers *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Shakers, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Shakers" "', argument " "1"" of type '" "stk::Shakers *""'"); 
  }
  arg1 = reinterpret_cast< stk::Shakers * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Shakers_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_stk__Shakers, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *Shakers_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_Simple(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Simple *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_Simple", 0, 0, 0)) SWIG_fail;
  result = (stk::Simple *)new stk::Simple();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__Simple, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Simple(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Simple *arg1 = (stk::Simple *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Simple, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Simple" "', argument " "1"" of type '" "stk::Simple *""'"); 
  }
  arg1 = reinterpret_cast< stk::Simple * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Simple_setFrequency(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Simple *arg1 = (stk::Simple *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Simple_setFrequency", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Simple, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Simple_setFrequency" "', argument " "1"" of type '" "stk::Simple *""'"); 
  }
  arg1 = reinterpret_cast< stk::Simple * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Simple_setFrequency" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setFrequency(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Simple_keyOn(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Simple *arg1 = (stk::Simple *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Simple, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Simple_keyOn" "', argument " "1"" of type '" "stk::Simple *""'"); 
  }
  arg1 = reinterpret_cast< stk::Simple * >(argp1);
  (arg1)->keyOn();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Simple_keyOff(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Simple *arg1 = (stk::Simple *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Simple, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Simple_keyOff" "', argument " "1"" of type '" "stk::Simple *""'"); 
  }
  arg1 = reinterpret_cast< stk::Simple * >(argp1);
  (arg1)->keyOff();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Simple_noteOn(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Simple *arg1 = (stk::Simple *) 0 ;
  stk::StkFloat arg2 ;
  stk::StkFloat arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Simple_noteOn", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Simple, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Simple_noteOn" "', argument " "1"" of type '" "stk::Simple *""'"); 
  }
  arg1 = reinterpret_cast< stk::Simple * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Simple_noteOn" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Simple_noteOn" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  (arg1)->noteOn(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Simple_noteOff(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Simple *arg1 = (stk::Simple *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Simple_noteOff", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Simple, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Simple_noteOff" "', argument " "1"" of type '" "stk::Simple *""'"); 
  }
  arg1 = reinterpret_cast< stk::Simple * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Simple_noteOff" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->noteOff(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Simple_controlChange(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Simple *arg1 = (stk::Simple *) 0 ;
  int arg2 ;
  stk::StkFloat arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Simple_controlChange", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Simple, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Simple_controlChange" "', argument " "1"" of type '" "stk::Simple *""'"); 
  }
  arg1 = reinterpret_cast< stk::Simple * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Simple_controlChange" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Simple_controlChange" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  (arg1)->controlChange(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Simple_tick__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Simple *arg1 = (stk::Simple *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Simple, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Simple_tick" "', argument " "1"" of type '" "stk::Simple *""'"); 
  }
  arg1 = reinterpret_cast< stk::Simple * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Simple_tick" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (stk::StkFloat)(arg1)->tick(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Simple_tick__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Simple *arg1 = (stk::Simple *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Simple, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Simple_tick" "', argument " "1"" of type '" "stk::Simple *""'"); 
  }
  arg1 = reinterpret_cast< stk::Simple * >(argp1);
  result = (stk::StkFloat)(arg1)->tick();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Simple_tick__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Simple *arg1 = (stk::Simple *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Simple, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Simple_tick" "', argument " "1"" of type '" "stk::Simple *""'"); 
  }
  arg1 = reinterpret_cast< stk::Simple * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Simple_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Simple_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Simple_tick" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Simple_tick__SWIG_3(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Simple *arg1 = (stk::Simple *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Simple, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Simple_tick" "', argument " "1"" of type '" "stk::Simple *""'"); 
  }
  arg1 = reinterpret_cast< stk::Simple * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Simple_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Simple_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Simple_tick(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Simple_tick", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Simple, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Simple_tick__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Simple, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Simple_tick__SWIG_3(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Simple, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Simple_tick__SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Simple, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Simple_tick__SWIG_2(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Simple_tick'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::Simple::tick(unsigned int)\n"
    "    stk::Simple::tick()\n"
    "    stk::Simple::tick(stk::StkFrames &,unsigned int)\n"
    "    stk::Simple::tick(stk::StkFrames &)\n");
  return 0;
}


SWIGINTERN PyObject *Simple_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_stk__Simple, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *Simple_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_SineWave(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::SineWave *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_SineWave", 0, 0, 0)) SWIG_fail;
  result = (stk::SineWave *)new stk::SineWave();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__SineWave, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_SineWave(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::SineWave *arg1 = (stk::SineWave *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__SineWave, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SineWave" "', argument " "1"" of type '" "stk::SineWave *""'"); 
  }
  arg1 = reinterpret_cast< stk::SineWave * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SineWave_reset(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::SineWave *arg1 = (stk::SineWave *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__SineWave, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SineWave_reset" "', argument " "1"" of type '" "stk::SineWave *""'"); 
  }
  arg1 = reinterpret_cast< stk::SineWave * >(argp1);
  (arg1)->reset();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SineWave_setRate(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::SineWave *arg1 = (stk::SineWave *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "SineWave_setRate", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__SineWave, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SineWave_setRate" "', argument " "1"" of type '" "stk::SineWave *""'"); 
  }
  arg1 = reinterpret_cast< stk::SineWave * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SineWave_setRate" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setRate(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SineWave_setFrequency(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::SineWave *arg1 = (stk::SineWave *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "SineWave_setFrequency", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__SineWave, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SineWave_setFrequency" "', argument " "1"" of type '" "stk::SineWave *""'"); 
  }
  arg1 = reinterpret_cast< stk::SineWave * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SineWave_setFrequency" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setFrequency(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SineWave_addTime(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::SineWave *arg1 = (stk::SineWave *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "SineWave_addTime", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__SineWave, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SineWave_addTime" "', argument " "1"" of type '" "stk::SineWave *""'"); 
  }
  arg1 = reinterpret_cast< stk::SineWave * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SineWave_addTime" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->addTime(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SineWave_addPhase(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::SineWave *arg1 = (stk::SineWave *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "SineWave_addPhase", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__SineWave, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SineWave_addPhase" "', argument " "1"" of type '" "stk::SineWave *""'"); 
  }
  arg1 = reinterpret_cast< stk::SineWave * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SineWave_addPhase" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->addPhase(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SineWave_addPhaseOffset(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::SineWave *arg1 = (stk::SineWave *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "SineWave_addPhaseOffset", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__SineWave, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SineWave_addPhaseOffset" "', argument " "1"" of type '" "stk::SineWave *""'"); 
  }
  arg1 = reinterpret_cast< stk::SineWave * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SineWave_addPhaseOffset" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->addPhaseOffset(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SineWave_lastOut(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::SineWave *arg1 = (stk::SineWave *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  stk::StkFloat result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__SineWave, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SineWave_lastOut" "', argument " "1"" of type '" "stk::SineWave const *""'"); 
  }
  arg1 = reinterpret_cast< stk::SineWave * >(argp1);
  result = (stk::StkFloat)((stk::SineWave const *)arg1)->lastOut();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SineWave_tick__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::SineWave *arg1 = (stk::SineWave *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__SineWave, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SineWave_tick" "', argument " "1"" of type '" "stk::SineWave *""'"); 
  }
  arg1 = reinterpret_cast< stk::SineWave * >(argp1);
  result = (stk::StkFloat)(arg1)->tick();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SineWave_tick__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::SineWave *arg1 = (stk::SineWave *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__SineWave, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SineWave_tick" "', argument " "1"" of type '" "stk::SineWave *""'"); 
  }
  arg1 = reinterpret_cast< stk::SineWave * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SineWave_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SineWave_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "SineWave_tick" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SineWave_tick__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::SineWave *arg1 = (stk::SineWave *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__SineWave, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SineWave_tick" "', argument " "1"" of type '" "stk::SineWave *""'"); 
  }
  arg1 = reinterpret_cast< stk::SineWave * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SineWave_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SineWave_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SineWave_tick(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "SineWave_tick", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__SineWave, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SineWave_tick__SWIG_0(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__SineWave, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SineWave_tick__SWIG_2(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__SineWave, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_SineWave_tick__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'SineWave_tick'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::SineWave::tick()\n"
    "    stk::SineWave::tick(stk::StkFrames &,unsigned int)\n"
    "    stk::SineWave::tick(stk::StkFrames &)\n");
  return 0;
}


SWIGINTERN PyObject *SineWave_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_stk__SineWave, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *SineWave_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_SingWave__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::string arg1 ;
  bool arg2 ;
  void *argp1 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  stk::SingWave *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_std__string,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SingWave" "', argument " "1"" of type '" "std::string""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SingWave" "', argument " "1"" of type '" "std::string""'");
    } else {
      std::string * temp = reinterpret_cast< std::string * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  ecode2 = SWIG_AsVal_bool(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_SingWave" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  result = (stk::SingWave *)new stk::SingWave(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__SingWave, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SingWave__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::string arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  stk::SingWave *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_std__string,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SingWave" "', argument " "1"" of type '" "std::string""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SingWave" "', argument " "1"" of type '" "std::string""'");
    } else {
      std::string * temp = reinterpret_cast< std::string * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  result = (stk::SingWave *)new stk::SingWave(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__SingWave, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SingWave(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_SingWave", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_std__string, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SingWave__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_std__string, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_SingWave__SWIG_0(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_SingWave'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::SingWave::SingWave(std::string,bool)\n"
    "    stk::SingWave::SingWave(std::string)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_SingWave(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::SingWave *arg1 = (stk::SingWave *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__SingWave, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SingWave" "', argument " "1"" of type '" "stk::SingWave *""'"); 
  }
  arg1 = reinterpret_cast< stk::SingWave * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SingWave_reset(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::SingWave *arg1 = (stk::SingWave *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__SingWave, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SingWave_reset" "', argument " "1"" of type '" "stk::SingWave *""'"); 
  }
  arg1 = reinterpret_cast< stk::SingWave * >(argp1);
  (arg1)->reset();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SingWave_normalize__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::SingWave *arg1 = (stk::SingWave *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__SingWave, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SingWave_normalize" "', argument " "1"" of type '" "stk::SingWave *""'"); 
  }
  arg1 = reinterpret_cast< stk::SingWave * >(argp1);
  (arg1)->normalize();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SingWave_normalize__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::SingWave *arg1 = (stk::SingWave *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__SingWave, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SingWave_normalize" "', argument " "1"" of type '" "stk::SingWave *""'"); 
  }
  arg1 = reinterpret_cast< stk::SingWave * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SingWave_normalize" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->normalize(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SingWave_normalize(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "SingWave_normalize", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__SingWave, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SingWave_normalize__SWIG_0(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__SingWave, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SingWave_normalize__SWIG_1(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'SingWave_normalize'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::SingWave::normalize()\n"
    "    stk::SingWave::normalize(stk::StkFloat)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SingWave_setFrequency(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::SingWave *arg1 = (stk::SingWave *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "SingWave_setFrequency", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__SingWave, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SingWave_setFrequency" "', argument " "1"" of type '" "stk::SingWave *""'"); 
  }
  arg1 = reinterpret_cast< stk::SingWave * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SingWave_setFrequency" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setFrequency(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SingWave_setVibratoRate(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::SingWave *arg1 = (stk::SingWave *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "SingWave_setVibratoRate", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__SingWave, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SingWave_setVibratoRate" "', argument " "1"" of type '" "stk::SingWave *""'"); 
  }
  arg1 = reinterpret_cast< stk::SingWave * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SingWave_setVibratoRate" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setVibratoRate(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SingWave_setVibratoGain(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::SingWave *arg1 = (stk::SingWave *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "SingWave_setVibratoGain", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__SingWave, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SingWave_setVibratoGain" "', argument " "1"" of type '" "stk::SingWave *""'"); 
  }
  arg1 = reinterpret_cast< stk::SingWave * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SingWave_setVibratoGain" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setVibratoGain(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SingWave_setRandomGain(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::SingWave *arg1 = (stk::SingWave *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "SingWave_setRandomGain", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__SingWave, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SingWave_setRandomGain" "', argument " "1"" of type '" "stk::SingWave *""'"); 
  }
  arg1 = reinterpret_cast< stk::SingWave * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SingWave_setRandomGain" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setRandomGain(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SingWave_setSweepRate(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::SingWave *arg1 = (stk::SingWave *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "SingWave_setSweepRate", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__SingWave, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SingWave_setSweepRate" "', argument " "1"" of type '" "stk::SingWave *""'"); 
  }
  arg1 = reinterpret_cast< stk::SingWave * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SingWave_setSweepRate" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setSweepRate(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SingWave_setGainRate(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::SingWave *arg1 = (stk::SingWave *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "SingWave_setGainRate", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__SingWave, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SingWave_setGainRate" "', argument " "1"" of type '" "stk::SingWave *""'"); 
  }
  arg1 = reinterpret_cast< stk::SingWave * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SingWave_setGainRate" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setGainRate(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SingWave_setGainTarget(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::SingWave *arg1 = (stk::SingWave *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "SingWave_setGainTarget", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__SingWave, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SingWave_setGainTarget" "', argument " "1"" of type '" "stk::SingWave *""'"); 
  }
  arg1 = reinterpret_cast< stk::SingWave * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SingWave_setGainTarget" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setGainTarget(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SingWave_noteOn(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::SingWave *arg1 = (stk::SingWave *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__SingWave, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SingWave_noteOn" "', argument " "1"" of type '" "stk::SingWave *""'"); 
  }
  arg1 = reinterpret_cast< stk::SingWave * >(argp1);
  (arg1)->noteOn();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SingWave_noteOff(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::SingWave *arg1 = (stk::SingWave *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__SingWave, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SingWave_noteOff" "', argument " "1"" of type '" "stk::SingWave *""'"); 
  }
  arg1 = reinterpret_cast< stk::SingWave * >(argp1);
  (arg1)->noteOff();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SingWave_lastOut(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::SingWave *arg1 = (stk::SingWave *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  stk::StkFloat result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__SingWave, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SingWave_lastOut" "', argument " "1"" of type '" "stk::SingWave const *""'"); 
  }
  arg1 = reinterpret_cast< stk::SingWave * >(argp1);
  result = (stk::StkFloat)((stk::SingWave const *)arg1)->lastOut();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SingWave_tick__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::SingWave *arg1 = (stk::SingWave *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__SingWave, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SingWave_tick" "', argument " "1"" of type '" "stk::SingWave *""'"); 
  }
  arg1 = reinterpret_cast< stk::SingWave * >(argp1);
  result = (stk::StkFloat)(arg1)->tick();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SingWave_tick__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::SingWave *arg1 = (stk::SingWave *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__SingWave, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SingWave_tick" "', argument " "1"" of type '" "stk::SingWave *""'"); 
  }
  arg1 = reinterpret_cast< stk::SingWave * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SingWave_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SingWave_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "SingWave_tick" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SingWave_tick__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::SingWave *arg1 = (stk::SingWave *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__SingWave, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SingWave_tick" "', argument " "1"" of type '" "stk::SingWave *""'"); 
  }
  arg1 = reinterpret_cast< stk::SingWave * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SingWave_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SingWave_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SingWave_tick(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "SingWave_tick", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__SingWave, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SingWave_tick__SWIG_0(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__SingWave, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SingWave_tick__SWIG_2(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__SingWave, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_SingWave_tick__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'SingWave_tick'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::SingWave::tick()\n"
    "    stk::SingWave::tick(stk::StkFrames &,unsigned int)\n"
    "    stk::SingWave::tick(stk::StkFrames &)\n");
  return 0;
}


SWIGINTERN PyObject *SingWave_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_stk__SingWave, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *SingWave_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_Sitar__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::StkFloat arg1 ;
  float val1 ;
  int ecode1 = 0 ;
  stk::Sitar *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Sitar" "', argument " "1"" of type '" "stk::StkFloat""'");
  } 
  arg1 = static_cast< stk::StkFloat >(val1);
  result = (stk::Sitar *)new stk::Sitar(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__Sitar, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Sitar__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  stk::Sitar *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (stk::Sitar *)new stk::Sitar();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__Sitar, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Sitar(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_Sitar", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_Sitar__SWIG_1(self, argc, argv);
  }
  if (argc == 1) {
    int _v = 0;
    {
      int res = SWIG_AsVal_float(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_Sitar__SWIG_0(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_Sitar'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::Sitar::Sitar(stk::StkFloat)\n"
    "    stk::Sitar::Sitar()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_Sitar(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Sitar *arg1 = (stk::Sitar *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Sitar, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Sitar" "', argument " "1"" of type '" "stk::Sitar *""'"); 
  }
  arg1 = reinterpret_cast< stk::Sitar * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Sitar_clear(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Sitar *arg1 = (stk::Sitar *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Sitar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Sitar_clear" "', argument " "1"" of type '" "stk::Sitar *""'"); 
  }
  arg1 = reinterpret_cast< stk::Sitar * >(argp1);
  (arg1)->clear();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Sitar_setFrequency(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Sitar *arg1 = (stk::Sitar *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Sitar_setFrequency", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Sitar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Sitar_setFrequency" "', argument " "1"" of type '" "stk::Sitar *""'"); 
  }
  arg1 = reinterpret_cast< stk::Sitar * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Sitar_setFrequency" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setFrequency(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Sitar_pluck(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Sitar *arg1 = (stk::Sitar *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Sitar_pluck", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Sitar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Sitar_pluck" "', argument " "1"" of type '" "stk::Sitar *""'"); 
  }
  arg1 = reinterpret_cast< stk::Sitar * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Sitar_pluck" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->pluck(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Sitar_noteOn(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Sitar *arg1 = (stk::Sitar *) 0 ;
  stk::StkFloat arg2 ;
  stk::StkFloat arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Sitar_noteOn", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Sitar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Sitar_noteOn" "', argument " "1"" of type '" "stk::Sitar *""'"); 
  }
  arg1 = reinterpret_cast< stk::Sitar * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Sitar_noteOn" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Sitar_noteOn" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  (arg1)->noteOn(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Sitar_noteOff(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Sitar *arg1 = (stk::Sitar *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Sitar_noteOff", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Sitar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Sitar_noteOff" "', argument " "1"" of type '" "stk::Sitar *""'"); 
  }
  arg1 = reinterpret_cast< stk::Sitar * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Sitar_noteOff" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->noteOff(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Sitar_tick__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Sitar *arg1 = (stk::Sitar *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Sitar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Sitar_tick" "', argument " "1"" of type '" "stk::Sitar *""'"); 
  }
  arg1 = reinterpret_cast< stk::Sitar * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Sitar_tick" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (stk::StkFloat)(arg1)->tick(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Sitar_tick__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Sitar *arg1 = (stk::Sitar *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Sitar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Sitar_tick" "', argument " "1"" of type '" "stk::Sitar *""'"); 
  }
  arg1 = reinterpret_cast< stk::Sitar * >(argp1);
  result = (stk::StkFloat)(arg1)->tick();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Sitar_tick__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Sitar *arg1 = (stk::Sitar *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Sitar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Sitar_tick" "', argument " "1"" of type '" "stk::Sitar *""'"); 
  }
  arg1 = reinterpret_cast< stk::Sitar * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Sitar_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Sitar_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Sitar_tick" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Sitar_tick__SWIG_3(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Sitar *arg1 = (stk::Sitar *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Sitar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Sitar_tick" "', argument " "1"" of type '" "stk::Sitar *""'"); 
  }
  arg1 = reinterpret_cast< stk::Sitar * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Sitar_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Sitar_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Sitar_tick(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Sitar_tick", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Sitar, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Sitar_tick__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Sitar, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Sitar_tick__SWIG_3(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Sitar, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Sitar_tick__SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Sitar, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Sitar_tick__SWIG_2(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Sitar_tick'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::Sitar::tick(unsigned int)\n"
    "    stk::Sitar::tick()\n"
    "    stk::Sitar::tick(stk::StkFrames &,unsigned int)\n"
    "    stk::Sitar::tick(stk::StkFrames &)\n");
  return 0;
}


SWIGINTERN PyObject *Sitar_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_stk__Sitar, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *Sitar_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_Sphere__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::StkFloat arg1 ;
  float val1 ;
  int ecode1 = 0 ;
  stk::Sphere *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Sphere" "', argument " "1"" of type '" "stk::StkFloat""'");
  } 
  arg1 = static_cast< stk::StkFloat >(val1);
  result = (stk::Sphere *)new stk::Sphere(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__Sphere, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Sphere__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  stk::Sphere *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (stk::Sphere *)new stk::Sphere();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__Sphere, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Sphere(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_Sphere", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_Sphere__SWIG_1(self, argc, argv);
  }
  if (argc == 1) {
    int _v = 0;
    {
      int res = SWIG_AsVal_float(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_Sphere__SWIG_0(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_Sphere'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::Sphere::Sphere(stk::StkFloat)\n"
    "    stk::Sphere::Sphere()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Sphere_setPosition(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Sphere *arg1 = (stk::Sphere *) 0 ;
  stk::StkFloat arg2 ;
  stk::StkFloat arg3 ;
  stk::StkFloat arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  PyObject *swig_obj[4] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Sphere_setPosition", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Sphere, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Sphere_setPosition" "', argument " "1"" of type '" "stk::Sphere *""'"); 
  }
  arg1 = reinterpret_cast< stk::Sphere * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Sphere_setPosition" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Sphere_setPosition" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Sphere_setPosition" "', argument " "4"" of type '" "stk::StkFloat""'");
  } 
  arg4 = static_cast< stk::StkFloat >(val4);
  (arg1)->setPosition(arg2,arg3,arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Sphere_setVelocity(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Sphere *arg1 = (stk::Sphere *) 0 ;
  stk::StkFloat arg2 ;
  stk::StkFloat arg3 ;
  stk::StkFloat arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  PyObject *swig_obj[4] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Sphere_setVelocity", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Sphere, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Sphere_setVelocity" "', argument " "1"" of type '" "stk::Sphere *""'"); 
  }
  arg1 = reinterpret_cast< stk::Sphere * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Sphere_setVelocity" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Sphere_setVelocity" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Sphere_setVelocity" "', argument " "4"" of type '" "stk::StkFloat""'");
  } 
  arg4 = static_cast< stk::StkFloat >(val4);
  (arg1)->setVelocity(arg2,arg3,arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Sphere_setRadius(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Sphere *arg1 = (stk::Sphere *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Sphere_setRadius", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Sphere, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Sphere_setRadius" "', argument " "1"" of type '" "stk::Sphere *""'"); 
  }
  arg1 = reinterpret_cast< stk::Sphere * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Sphere_setRadius" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setRadius(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Sphere_setMass(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Sphere *arg1 = (stk::Sphere *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Sphere_setMass", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Sphere, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Sphere_setMass" "', argument " "1"" of type '" "stk::Sphere *""'"); 
  }
  arg1 = reinterpret_cast< stk::Sphere * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Sphere_setMass" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setMass(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Sphere_getPosition(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Sphere *arg1 = (stk::Sphere *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  Vector3D *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Sphere, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Sphere_getPosition" "', argument " "1"" of type '" "stk::Sphere *""'"); 
  }
  arg1 = reinterpret_cast< stk::Sphere * >(argp1);
  result = (Vector3D *)(arg1)->getPosition();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Vector3D, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Sphere_getRelativePosition(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Sphere *arg1 = (stk::Sphere *) 0 ;
  Vector3D *arg2 = (Vector3D *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  Vector3D *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "Sphere_getRelativePosition", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Sphere, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Sphere_getRelativePosition" "', argument " "1"" of type '" "stk::Sphere *""'"); 
  }
  arg1 = reinterpret_cast< stk::Sphere * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_Vector3D, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Sphere_getRelativePosition" "', argument " "2"" of type '" "Vector3D *""'"); 
  }
  arg2 = reinterpret_cast< Vector3D * >(argp2);
  result = (Vector3D *)(arg1)->getRelativePosition(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Vector3D, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Sphere_getVelocity(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Sphere *arg1 = (stk::Sphere *) 0 ;
  Vector3D *arg2 = (Vector3D *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  stk::StkFloat result;
  
  if (!SWIG_Python_UnpackTuple(args, "Sphere_getVelocity", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Sphere, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Sphere_getVelocity" "', argument " "1"" of type '" "stk::Sphere *""'"); 
  }
  arg1 = reinterpret_cast< stk::Sphere * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_Vector3D, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Sphere_getVelocity" "', argument " "2"" of type '" "Vector3D *""'"); 
  }
  arg2 = reinterpret_cast< Vector3D * >(argp2);
  result = (stk::StkFloat)(arg1)->getVelocity(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Sphere_isInside(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Sphere *arg1 = (stk::Sphere *) 0 ;
  Vector3D *arg2 = (Vector3D *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  stk::StkFloat result;
  
  if (!SWIG_Python_UnpackTuple(args, "Sphere_isInside", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Sphere, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Sphere_isInside" "', argument " "1"" of type '" "stk::Sphere *""'"); 
  }
  arg1 = reinterpret_cast< stk::Sphere * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_Vector3D, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Sphere_isInside" "', argument " "2"" of type '" "Vector3D *""'"); 
  }
  arg2 = reinterpret_cast< Vector3D * >(argp2);
  result = (stk::StkFloat)(arg1)->isInside(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Sphere_getRadius(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Sphere *arg1 = (stk::Sphere *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  stk::StkFloat result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Sphere, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Sphere_getRadius" "', argument " "1"" of type '" "stk::Sphere *""'"); 
  }
  arg1 = reinterpret_cast< stk::Sphere * >(argp1);
  result = (stk::StkFloat)(arg1)->getRadius();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Sphere_getMass(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Sphere *arg1 = (stk::Sphere *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  stk::StkFloat result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Sphere, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Sphere_getMass" "', argument " "1"" of type '" "stk::Sphere *""'"); 
  }
  arg1 = reinterpret_cast< stk::Sphere * >(argp1);
  result = (stk::StkFloat)(arg1)->getMass();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Sphere_addVelocity(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Sphere *arg1 = (stk::Sphere *) 0 ;
  stk::StkFloat arg2 ;
  stk::StkFloat arg3 ;
  stk::StkFloat arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  PyObject *swig_obj[4] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Sphere_addVelocity", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Sphere, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Sphere_addVelocity" "', argument " "1"" of type '" "stk::Sphere *""'"); 
  }
  arg1 = reinterpret_cast< stk::Sphere * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Sphere_addVelocity" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Sphere_addVelocity" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Sphere_addVelocity" "', argument " "4"" of type '" "stk::StkFloat""'");
  } 
  arg4 = static_cast< stk::StkFloat >(val4);
  (arg1)->addVelocity(arg2,arg3,arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Sphere_tick(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Sphere *arg1 = (stk::Sphere *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Sphere_tick", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Sphere, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Sphere_tick" "', argument " "1"" of type '" "stk::Sphere *""'"); 
  }
  arg1 = reinterpret_cast< stk::Sphere * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Sphere_tick" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->tick(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Sphere(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Sphere *arg1 = (stk::Sphere *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Sphere, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Sphere" "', argument " "1"" of type '" "stk::Sphere *""'"); 
  }
  arg1 = reinterpret_cast< stk::Sphere * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Sphere_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_stk__Sphere, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *Sphere_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_StifKarp__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::StkFloat arg1 ;
  float val1 ;
  int ecode1 = 0 ;
  stk::StifKarp *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_StifKarp" "', argument " "1"" of type '" "stk::StkFloat""'");
  } 
  arg1 = static_cast< stk::StkFloat >(val1);
  result = (stk::StifKarp *)new stk::StifKarp(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StifKarp, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_StifKarp__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  stk::StifKarp *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (stk::StifKarp *)new stk::StifKarp();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StifKarp, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_StifKarp(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_StifKarp", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_StifKarp__SWIG_1(self, argc, argv);
  }
  if (argc == 1) {
    int _v = 0;
    {
      int res = SWIG_AsVal_float(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_StifKarp__SWIG_0(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_StifKarp'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::StifKarp::StifKarp(stk::StkFloat)\n"
    "    stk::StifKarp::StifKarp()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_StifKarp(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::StifKarp *arg1 = (stk::StifKarp *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__StifKarp, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_StifKarp" "', argument " "1"" of type '" "stk::StifKarp *""'"); 
  }
  arg1 = reinterpret_cast< stk::StifKarp * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StifKarp_clear(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::StifKarp *arg1 = (stk::StifKarp *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__StifKarp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StifKarp_clear" "', argument " "1"" of type '" "stk::StifKarp *""'"); 
  }
  arg1 = reinterpret_cast< stk::StifKarp * >(argp1);
  (arg1)->clear();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StifKarp_setFrequency(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::StifKarp *arg1 = (stk::StifKarp *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "StifKarp_setFrequency", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__StifKarp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StifKarp_setFrequency" "', argument " "1"" of type '" "stk::StifKarp *""'"); 
  }
  arg1 = reinterpret_cast< stk::StifKarp * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "StifKarp_setFrequency" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setFrequency(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StifKarp_setStretch(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::StifKarp *arg1 = (stk::StifKarp *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "StifKarp_setStretch", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__StifKarp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StifKarp_setStretch" "', argument " "1"" of type '" "stk::StifKarp *""'"); 
  }
  arg1 = reinterpret_cast< stk::StifKarp * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "StifKarp_setStretch" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setStretch(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StifKarp_setPickupPosition(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::StifKarp *arg1 = (stk::StifKarp *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "StifKarp_setPickupPosition", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__StifKarp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StifKarp_setPickupPosition" "', argument " "1"" of type '" "stk::StifKarp *""'"); 
  }
  arg1 = reinterpret_cast< stk::StifKarp * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "StifKarp_setPickupPosition" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setPickupPosition(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StifKarp_setBaseLoopGain(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::StifKarp *arg1 = (stk::StifKarp *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "StifKarp_setBaseLoopGain", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__StifKarp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StifKarp_setBaseLoopGain" "', argument " "1"" of type '" "stk::StifKarp *""'"); 
  }
  arg1 = reinterpret_cast< stk::StifKarp * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "StifKarp_setBaseLoopGain" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setBaseLoopGain(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StifKarp_pluck(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::StifKarp *arg1 = (stk::StifKarp *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "StifKarp_pluck", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__StifKarp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StifKarp_pluck" "', argument " "1"" of type '" "stk::StifKarp *""'"); 
  }
  arg1 = reinterpret_cast< stk::StifKarp * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "StifKarp_pluck" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->pluck(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StifKarp_noteOn(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::StifKarp *arg1 = (stk::StifKarp *) 0 ;
  stk::StkFloat arg2 ;
  stk::StkFloat arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "StifKarp_noteOn", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__StifKarp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StifKarp_noteOn" "', argument " "1"" of type '" "stk::StifKarp *""'"); 
  }
  arg1 = reinterpret_cast< stk::StifKarp * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "StifKarp_noteOn" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "StifKarp_noteOn" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  (arg1)->noteOn(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StifKarp_noteOff(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::StifKarp *arg1 = (stk::StifKarp *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "StifKarp_noteOff", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__StifKarp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StifKarp_noteOff" "', argument " "1"" of type '" "stk::StifKarp *""'"); 
  }
  arg1 = reinterpret_cast< stk::StifKarp * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "StifKarp_noteOff" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->noteOff(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StifKarp_controlChange(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::StifKarp *arg1 = (stk::StifKarp *) 0 ;
  int arg2 ;
  stk::StkFloat arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "StifKarp_controlChange", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__StifKarp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StifKarp_controlChange" "', argument " "1"" of type '" "stk::StifKarp *""'"); 
  }
  arg1 = reinterpret_cast< stk::StifKarp * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "StifKarp_controlChange" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "StifKarp_controlChange" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  (arg1)->controlChange(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StifKarp_tick__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::StifKarp *arg1 = (stk::StifKarp *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__StifKarp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StifKarp_tick" "', argument " "1"" of type '" "stk::StifKarp *""'"); 
  }
  arg1 = reinterpret_cast< stk::StifKarp * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "StifKarp_tick" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (stk::StkFloat)(arg1)->tick(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StifKarp_tick__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::StifKarp *arg1 = (stk::StifKarp *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__StifKarp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StifKarp_tick" "', argument " "1"" of type '" "stk::StifKarp *""'"); 
  }
  arg1 = reinterpret_cast< stk::StifKarp * >(argp1);
  result = (stk::StkFloat)(arg1)->tick();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StifKarp_tick__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::StifKarp *arg1 = (stk::StifKarp *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__StifKarp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StifKarp_tick" "', argument " "1"" of type '" "stk::StifKarp *""'"); 
  }
  arg1 = reinterpret_cast< stk::StifKarp * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "StifKarp_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "StifKarp_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "StifKarp_tick" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StifKarp_tick__SWIG_3(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::StifKarp *arg1 = (stk::StifKarp *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__StifKarp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StifKarp_tick" "', argument " "1"" of type '" "stk::StifKarp *""'"); 
  }
  arg1 = reinterpret_cast< stk::StifKarp * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "StifKarp_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "StifKarp_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StifKarp_tick(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "StifKarp_tick", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__StifKarp, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_StifKarp_tick__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__StifKarp, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_StifKarp_tick__SWIG_3(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__StifKarp, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_StifKarp_tick__SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__StifKarp, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_StifKarp_tick__SWIG_2(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'StifKarp_tick'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::StifKarp::tick(unsigned int)\n"
    "    stk::StifKarp::tick()\n"
    "    stk::StifKarp::tick(stk::StkFrames &,unsigned int)\n"
    "    stk::StifKarp::tick(stk::StkFrames &)\n");
  return 0;
}


SWIGINTERN PyObject *StifKarp_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_stk__StifKarp, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *StifKarp_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_TapDelay__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  SwigValueWrapper< std::vector< unsigned long,std::allocator< unsigned long > > > arg1 ;
  unsigned long arg2 ;
  void *argp1 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  stk::TapDelay *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_std__vectorT_unsigned_long_std__allocatorT_unsigned_long_t_t,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_TapDelay" "', argument " "1"" of type '" "std::vector< unsigned long,std::allocator< unsigned long > >""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_TapDelay" "', argument " "1"" of type '" "std::vector< unsigned long,std::allocator< unsigned long > >""'");
    } else {
      std::vector< unsigned long,std::allocator< unsigned long > > * temp = reinterpret_cast< std::vector< unsigned long,std::allocator< unsigned long > > * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  ecode2 = SWIG_AsVal_unsigned_SS_long(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_TapDelay" "', argument " "2"" of type '" "unsigned long""'");
  } 
  arg2 = static_cast< unsigned long >(val2);
  result = (stk::TapDelay *)new stk::TapDelay(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__TapDelay, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_TapDelay__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  SwigValueWrapper< std::vector< unsigned long,std::allocator< unsigned long > > > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  stk::TapDelay *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_std__vectorT_unsigned_long_std__allocatorT_unsigned_long_t_t,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_TapDelay" "', argument " "1"" of type '" "std::vector< unsigned long,std::allocator< unsigned long > >""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_TapDelay" "', argument " "1"" of type '" "std::vector< unsigned long,std::allocator< unsigned long > >""'");
    } else {
      std::vector< unsigned long,std::allocator< unsigned long > > * temp = reinterpret_cast< std::vector< unsigned long,std::allocator< unsigned long > > * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  result = (stk::TapDelay *)new stk::TapDelay(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__TapDelay, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_TapDelay__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  stk::TapDelay *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (stk::TapDelay *)new stk::TapDelay();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__TapDelay, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_TapDelay(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_TapDelay", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_TapDelay__SWIG_2(self, argc, argv);
  }
  if (argc == 1) {
    int _v = 0;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_std__vectorT_unsigned_long_std__allocatorT_unsigned_long_t_t, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_TapDelay__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_std__vectorT_unsigned_long_std__allocatorT_unsigned_long_t_t, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_long(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_TapDelay__SWIG_0(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_TapDelay'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::TapDelay::TapDelay(std::vector< unsigned long,std::allocator< unsigned long > >,unsigned long)\n"
    "    stk::TapDelay::TapDelay(std::vector< unsigned long,std::allocator< unsigned long > >)\n"
    "    stk::TapDelay::TapDelay()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_TapDelay(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::TapDelay *arg1 = (stk::TapDelay *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__TapDelay, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_TapDelay" "', argument " "1"" of type '" "stk::TapDelay *""'"); 
  }
  arg1 = reinterpret_cast< stk::TapDelay * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TapDelay_setMaximumDelay(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::TapDelay *arg1 = (stk::TapDelay *) 0 ;
  unsigned long arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "TapDelay_setMaximumDelay", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__TapDelay, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TapDelay_setMaximumDelay" "', argument " "1"" of type '" "stk::TapDelay *""'"); 
  }
  arg1 = reinterpret_cast< stk::TapDelay * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "TapDelay_setMaximumDelay" "', argument " "2"" of type '" "unsigned long""'");
  } 
  arg2 = static_cast< unsigned long >(val2);
  (arg1)->setMaximumDelay(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TapDelay_setTapDelays(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::TapDelay *arg1 = (stk::TapDelay *) 0 ;
  SwigValueWrapper< std::vector< unsigned long,std::allocator< unsigned long > > > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "TapDelay_setTapDelays", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__TapDelay, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TapDelay_setTapDelays" "', argument " "1"" of type '" "stk::TapDelay *""'"); 
  }
  arg1 = reinterpret_cast< stk::TapDelay * >(argp1);
  {
    res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__vectorT_unsigned_long_std__allocatorT_unsigned_long_t_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TapDelay_setTapDelays" "', argument " "2"" of type '" "std::vector< unsigned long,std::allocator< unsigned long > >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TapDelay_setTapDelays" "', argument " "2"" of type '" "std::vector< unsigned long,std::allocator< unsigned long > >""'");
    } else {
      std::vector< unsigned long,std::allocator< unsigned long > > * temp = reinterpret_cast< std::vector< unsigned long,std::allocator< unsigned long > > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->setTapDelays(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TapDelay_getTapDelays(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::TapDelay *arg1 = (stk::TapDelay *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  SwigValueWrapper< std::vector< unsigned long,std::allocator< unsigned long > > > result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__TapDelay, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TapDelay_getTapDelays" "', argument " "1"" of type '" "stk::TapDelay const *""'"); 
  }
  arg1 = reinterpret_cast< stk::TapDelay * >(argp1);
  result = ((stk::TapDelay const *)arg1)->getTapDelays();
  resultobj = SWIG_NewPointerObj((new std::vector< unsigned long,std::allocator< unsigned long > >(static_cast< const std::vector< unsigned long,std::allocator< unsigned long > >& >(result))), SWIGTYPE_p_std__vectorT_unsigned_long_std__allocatorT_unsigned_long_t_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TapDelay_lastOut__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::TapDelay *arg1 = (stk::TapDelay *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__TapDelay, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TapDelay_lastOut" "', argument " "1"" of type '" "stk::TapDelay const *""'"); 
  }
  arg1 = reinterpret_cast< stk::TapDelay * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "TapDelay_lastOut" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (stk::StkFloat)((stk::TapDelay const *)arg1)->lastOut(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TapDelay_lastOut__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::TapDelay *arg1 = (stk::TapDelay *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__TapDelay, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TapDelay_lastOut" "', argument " "1"" of type '" "stk::TapDelay const *""'"); 
  }
  arg1 = reinterpret_cast< stk::TapDelay * >(argp1);
  result = (stk::StkFloat)((stk::TapDelay const *)arg1)->lastOut();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TapDelay_lastOut(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "TapDelay_lastOut", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__TapDelay, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_TapDelay_lastOut__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__TapDelay, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_TapDelay_lastOut__SWIG_0(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'TapDelay_lastOut'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::TapDelay::lastOut(unsigned int) const\n"
    "    stk::TapDelay::lastOut() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_TapDelay_tick__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::TapDelay *arg1 = (stk::TapDelay *) 0 ;
  stk::StkFloat arg2 ;
  stk::StkFrames *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__TapDelay, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TapDelay_tick" "', argument " "1"" of type '" "stk::TapDelay *""'"); 
  }
  arg1 = reinterpret_cast< stk::TapDelay * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "TapDelay_tick" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "TapDelay_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TapDelay_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  arg3 = reinterpret_cast< stk::StkFrames * >(argp3);
  result = (stk::StkFrames *) &(arg1)->tick(arg2,*arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TapDelay_tick__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::TapDelay *arg1 = (stk::TapDelay *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__TapDelay, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TapDelay_tick" "', argument " "1"" of type '" "stk::TapDelay *""'"); 
  }
  arg1 = reinterpret_cast< stk::TapDelay * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TapDelay_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TapDelay_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "TapDelay_tick" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TapDelay_tick__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::TapDelay *arg1 = (stk::TapDelay *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__TapDelay, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TapDelay_tick" "', argument " "1"" of type '" "stk::TapDelay *""'"); 
  }
  arg1 = reinterpret_cast< stk::TapDelay * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TapDelay_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TapDelay_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TapDelay_tick__SWIG_3(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::TapDelay *arg1 = (stk::TapDelay *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  stk::StkFrames *arg3 = 0 ;
  unsigned int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__TapDelay, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TapDelay_tick" "', argument " "1"" of type '" "stk::TapDelay *""'"); 
  }
  arg1 = reinterpret_cast< stk::TapDelay * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TapDelay_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TapDelay_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "TapDelay_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TapDelay_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  arg3 = reinterpret_cast< stk::StkFrames * >(argp3);
  ecode4 = SWIG_AsVal_unsigned_SS_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "TapDelay_tick" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,*arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TapDelay_tick__SWIG_4(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::TapDelay *arg1 = (stk::TapDelay *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  stk::StkFrames *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__TapDelay, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TapDelay_tick" "', argument " "1"" of type '" "stk::TapDelay *""'"); 
  }
  arg1 = reinterpret_cast< stk::TapDelay * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TapDelay_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TapDelay_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "TapDelay_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TapDelay_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  arg3 = reinterpret_cast< stk::StkFrames * >(argp3);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,*arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TapDelay_tick(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "TapDelay_tick", 0, 4, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__TapDelay, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_TapDelay_tick__SWIG_2(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__TapDelay, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_TapDelay_tick__SWIG_4(self, argc, argv);
        }
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__TapDelay, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_TapDelay_tick__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__TapDelay, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_TapDelay_tick__SWIG_0(self, argc, argv);
        }
      }
    }
  }
  if (argc == 4) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__TapDelay, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_TapDelay_tick__SWIG_3(self, argc, argv);
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'TapDelay_tick'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::TapDelay::tick(stk::StkFloat,stk::StkFrames &)\n"
    "    stk::TapDelay::tick(stk::StkFrames &,unsigned int)\n"
    "    stk::TapDelay::tick(stk::StkFrames &)\n"
    "    stk::TapDelay::tick(stk::StkFrames &,stk::StkFrames &,unsigned int)\n"
    "    stk::TapDelay::tick(stk::StkFrames &,stk::StkFrames &)\n");
  return 0;
}


SWIGINTERN PyObject *TapDelay_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_stk__TapDelay, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *TapDelay_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_TubeBell(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::TubeBell *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_TubeBell", 0, 0, 0)) SWIG_fail;
  result = (stk::TubeBell *)new stk::TubeBell();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__TubeBell, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_TubeBell(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::TubeBell *arg1 = (stk::TubeBell *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__TubeBell, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_TubeBell" "', argument " "1"" of type '" "stk::TubeBell *""'"); 
  }
  arg1 = reinterpret_cast< stk::TubeBell * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TubeBell_noteOn(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::TubeBell *arg1 = (stk::TubeBell *) 0 ;
  stk::StkFloat arg2 ;
  stk::StkFloat arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "TubeBell_noteOn", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__TubeBell, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TubeBell_noteOn" "', argument " "1"" of type '" "stk::TubeBell *""'"); 
  }
  arg1 = reinterpret_cast< stk::TubeBell * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "TubeBell_noteOn" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "TubeBell_noteOn" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  (arg1)->noteOn(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TubeBell_tick__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::TubeBell *arg1 = (stk::TubeBell *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__TubeBell, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TubeBell_tick" "', argument " "1"" of type '" "stk::TubeBell *""'"); 
  }
  arg1 = reinterpret_cast< stk::TubeBell * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "TubeBell_tick" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (stk::StkFloat)(arg1)->tick(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TubeBell_tick__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::TubeBell *arg1 = (stk::TubeBell *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__TubeBell, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TubeBell_tick" "', argument " "1"" of type '" "stk::TubeBell *""'"); 
  }
  arg1 = reinterpret_cast< stk::TubeBell * >(argp1);
  result = (stk::StkFloat)(arg1)->tick();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TubeBell_tick__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::TubeBell *arg1 = (stk::TubeBell *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__TubeBell, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TubeBell_tick" "', argument " "1"" of type '" "stk::TubeBell *""'"); 
  }
  arg1 = reinterpret_cast< stk::TubeBell * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TubeBell_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TubeBell_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "TubeBell_tick" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TubeBell_tick__SWIG_3(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::TubeBell *arg1 = (stk::TubeBell *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__TubeBell, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TubeBell_tick" "', argument " "1"" of type '" "stk::TubeBell *""'"); 
  }
  arg1 = reinterpret_cast< stk::TubeBell * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TubeBell_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TubeBell_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TubeBell_tick(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "TubeBell_tick", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__TubeBell, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_TubeBell_tick__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__TubeBell, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_TubeBell_tick__SWIG_3(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__TubeBell, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_TubeBell_tick__SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__TubeBell, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_TubeBell_tick__SWIG_2(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'TubeBell_tick'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::TubeBell::tick(unsigned int)\n"
    "    stk::TubeBell::tick()\n"
    "    stk::TubeBell::tick(stk::StkFrames &,unsigned int)\n"
    "    stk::TubeBell::tick(stk::StkFrames &)\n");
  return 0;
}


SWIGINTERN PyObject *TubeBell_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_stk__TubeBell, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *TubeBell_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_Twang__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::StkFloat arg1 ;
  float val1 ;
  int ecode1 = 0 ;
  stk::Twang *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Twang" "', argument " "1"" of type '" "stk::StkFloat""'");
  } 
  arg1 = static_cast< stk::StkFloat >(val1);
  result = (stk::Twang *)new stk::Twang(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__Twang, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Twang__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  stk::Twang *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (stk::Twang *)new stk::Twang();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__Twang, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Twang(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_Twang", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_Twang__SWIG_1(self, argc, argv);
  }
  if (argc == 1) {
    int _v = 0;
    {
      int res = SWIG_AsVal_float(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_Twang__SWIG_0(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_Twang'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::Twang::Twang(stk::StkFloat)\n"
    "    stk::Twang::Twang()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Twang_clear(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Twang *arg1 = (stk::Twang *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Twang, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Twang_clear" "', argument " "1"" of type '" "stk::Twang *""'"); 
  }
  arg1 = reinterpret_cast< stk::Twang * >(argp1);
  (arg1)->clear();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Twang_setLowestFrequency(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Twang *arg1 = (stk::Twang *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Twang_setLowestFrequency", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Twang, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Twang_setLowestFrequency" "', argument " "1"" of type '" "stk::Twang *""'"); 
  }
  arg1 = reinterpret_cast< stk::Twang * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Twang_setLowestFrequency" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setLowestFrequency(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Twang_setFrequency(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Twang *arg1 = (stk::Twang *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Twang_setFrequency", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Twang, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Twang_setFrequency" "', argument " "1"" of type '" "stk::Twang *""'"); 
  }
  arg1 = reinterpret_cast< stk::Twang * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Twang_setFrequency" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setFrequency(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Twang_setPluckPosition(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Twang *arg1 = (stk::Twang *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Twang_setPluckPosition", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Twang, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Twang_setPluckPosition" "', argument " "1"" of type '" "stk::Twang *""'"); 
  }
  arg1 = reinterpret_cast< stk::Twang * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Twang_setPluckPosition" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setPluckPosition(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Twang_setLoopGain(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Twang *arg1 = (stk::Twang *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Twang_setLoopGain", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Twang, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Twang_setLoopGain" "', argument " "1"" of type '" "stk::Twang *""'"); 
  }
  arg1 = reinterpret_cast< stk::Twang * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Twang_setLoopGain" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setLoopGain(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Twang_lastOut(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Twang *arg1 = (stk::Twang *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  stk::StkFloat result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Twang, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Twang_lastOut" "', argument " "1"" of type '" "stk::Twang *""'"); 
  }
  arg1 = reinterpret_cast< stk::Twang * >(argp1);
  result = (stk::StkFloat)(arg1)->lastOut();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Twang_tick__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Twang *arg1 = (stk::Twang *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Twang, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Twang_tick" "', argument " "1"" of type '" "stk::Twang *""'"); 
  }
  arg1 = reinterpret_cast< stk::Twang * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Twang_tick" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  result = (stk::StkFloat)(arg1)->tick(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Twang_tick__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Twang *arg1 = (stk::Twang *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Twang, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Twang_tick" "', argument " "1"" of type '" "stk::Twang *""'"); 
  }
  arg1 = reinterpret_cast< stk::Twang * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Twang_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Twang_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Twang_tick" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Twang_tick__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Twang *arg1 = (stk::Twang *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Twang, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Twang_tick" "', argument " "1"" of type '" "stk::Twang *""'"); 
  }
  arg1 = reinterpret_cast< stk::Twang * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Twang_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Twang_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Twang_tick__SWIG_3(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Twang *arg1 = (stk::Twang *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  stk::StkFrames *arg3 = 0 ;
  unsigned int arg4 ;
  unsigned int arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  unsigned int val5 ;
  int ecode5 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Twang, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Twang_tick" "', argument " "1"" of type '" "stk::Twang *""'"); 
  }
  arg1 = reinterpret_cast< stk::Twang * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Twang_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Twang_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Twang_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Twang_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  arg3 = reinterpret_cast< stk::StkFrames * >(argp3);
  ecode4 = SWIG_AsVal_unsigned_SS_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Twang_tick" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  ecode5 = SWIG_AsVal_unsigned_SS_int(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "Twang_tick" "', argument " "5"" of type '" "unsigned int""'");
  } 
  arg5 = static_cast< unsigned int >(val5);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,*arg3,arg4,arg5);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Twang_tick__SWIG_4(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Twang *arg1 = (stk::Twang *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  stk::StkFrames *arg3 = 0 ;
  unsigned int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Twang, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Twang_tick" "', argument " "1"" of type '" "stk::Twang *""'"); 
  }
  arg1 = reinterpret_cast< stk::Twang * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Twang_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Twang_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Twang_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Twang_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  arg3 = reinterpret_cast< stk::StkFrames * >(argp3);
  ecode4 = SWIG_AsVal_unsigned_SS_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Twang_tick" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,*arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Twang_tick__SWIG_5(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Twang *arg1 = (stk::Twang *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  stk::StkFrames *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Twang, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Twang_tick" "', argument " "1"" of type '" "stk::Twang *""'"); 
  }
  arg1 = reinterpret_cast< stk::Twang * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Twang_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Twang_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Twang_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Twang_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  arg3 = reinterpret_cast< stk::StkFrames * >(argp3);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,*arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Twang_tick(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[6] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Twang_tick", 0, 5, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Twang, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Twang_tick__SWIG_2(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Twang, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Twang_tick__SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Twang, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_Twang_tick__SWIG_5(self, argc, argv);
        }
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Twang, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Twang_tick__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  if (argc == 4) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Twang, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_Twang_tick__SWIG_4(self, argc, argv);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Twang, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_unsigned_SS_int(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_Twang_tick__SWIG_3(self, argc, argv);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Twang_tick'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::Twang::tick(stk::StkFloat)\n"
    "    stk::Twang::tick(stk::StkFrames &,unsigned int)\n"
    "    stk::Twang::tick(stk::StkFrames &)\n"
    "    stk::Twang::tick(stk::StkFrames &,stk::StkFrames &,unsigned int,unsigned int)\n"
    "    stk::Twang::tick(stk::StkFrames &,stk::StkFrames &,unsigned int)\n"
    "    stk::Twang::tick(stk::StkFrames &,stk::StkFrames &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_Twang(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Twang *arg1 = (stk::Twang *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Twang, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Twang" "', argument " "1"" of type '" "stk::Twang *""'"); 
  }
  arg1 = reinterpret_cast< stk::Twang * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Twang_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_stk__Twang, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *Twang_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_TwoPole(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::TwoPole *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_TwoPole", 0, 0, 0)) SWIG_fail;
  result = (stk::TwoPole *)new stk::TwoPole();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__TwoPole, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_TwoPole(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::TwoPole *arg1 = (stk::TwoPole *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__TwoPole, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_TwoPole" "', argument " "1"" of type '" "stk::TwoPole *""'"); 
  }
  arg1 = reinterpret_cast< stk::TwoPole * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TwoPole_ignoreSampleRateChange__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::TwoPole *arg1 = (stk::TwoPole *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__TwoPole, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TwoPole_ignoreSampleRateChange" "', argument " "1"" of type '" "stk::TwoPole *""'"); 
  }
  arg1 = reinterpret_cast< stk::TwoPole * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "TwoPole_ignoreSampleRateChange" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->ignoreSampleRateChange(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TwoPole_ignoreSampleRateChange__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::TwoPole *arg1 = (stk::TwoPole *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__TwoPole, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TwoPole_ignoreSampleRateChange" "', argument " "1"" of type '" "stk::TwoPole *""'"); 
  }
  arg1 = reinterpret_cast< stk::TwoPole * >(argp1);
  (arg1)->ignoreSampleRateChange();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TwoPole_ignoreSampleRateChange(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "TwoPole_ignoreSampleRateChange", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__TwoPole, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_TwoPole_ignoreSampleRateChange__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__TwoPole, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_TwoPole_ignoreSampleRateChange__SWIG_0(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'TwoPole_ignoreSampleRateChange'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::TwoPole::ignoreSampleRateChange(bool)\n"
    "    stk::TwoPole::ignoreSampleRateChange()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_TwoPole_setB0(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::TwoPole *arg1 = (stk::TwoPole *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "TwoPole_setB0", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__TwoPole, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TwoPole_setB0" "', argument " "1"" of type '" "stk::TwoPole *""'"); 
  }
  arg1 = reinterpret_cast< stk::TwoPole * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "TwoPole_setB0" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setB0(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TwoPole_setA1(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::TwoPole *arg1 = (stk::TwoPole *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "TwoPole_setA1", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__TwoPole, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TwoPole_setA1" "', argument " "1"" of type '" "stk::TwoPole *""'"); 
  }
  arg1 = reinterpret_cast< stk::TwoPole * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "TwoPole_setA1" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setA1(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TwoPole_setA2(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::TwoPole *arg1 = (stk::TwoPole *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "TwoPole_setA2", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__TwoPole, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TwoPole_setA2" "', argument " "1"" of type '" "stk::TwoPole *""'"); 
  }
  arg1 = reinterpret_cast< stk::TwoPole * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "TwoPole_setA2" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setA2(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TwoPole_setCoefficients__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::TwoPole *arg1 = (stk::TwoPole *) 0 ;
  stk::StkFloat arg2 ;
  stk::StkFloat arg3 ;
  stk::StkFloat arg4 ;
  bool arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  
  if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__TwoPole, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TwoPole_setCoefficients" "', argument " "1"" of type '" "stk::TwoPole *""'"); 
  }
  arg1 = reinterpret_cast< stk::TwoPole * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "TwoPole_setCoefficients" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "TwoPole_setCoefficients" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "TwoPole_setCoefficients" "', argument " "4"" of type '" "stk::StkFloat""'");
  } 
  arg4 = static_cast< stk::StkFloat >(val4);
  ecode5 = SWIG_AsVal_bool(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "TwoPole_setCoefficients" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  (arg1)->setCoefficients(arg2,arg3,arg4,arg5);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TwoPole_setCoefficients__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::TwoPole *arg1 = (stk::TwoPole *) 0 ;
  stk::StkFloat arg2 ;
  stk::StkFloat arg3 ;
  stk::StkFloat arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__TwoPole, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TwoPole_setCoefficients" "', argument " "1"" of type '" "stk::TwoPole *""'"); 
  }
  arg1 = reinterpret_cast< stk::TwoPole * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "TwoPole_setCoefficients" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "TwoPole_setCoefficients" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "TwoPole_setCoefficients" "', argument " "4"" of type '" "stk::StkFloat""'");
  } 
  arg4 = static_cast< stk::StkFloat >(val4);
  (arg1)->setCoefficients(arg2,arg3,arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TwoPole_setCoefficients(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[6] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "TwoPole_setCoefficients", 0, 5, argv))) SWIG_fail;
  --argc;
  if (argc == 4) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__TwoPole, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_TwoPole_setCoefficients__SWIG_1(self, argc, argv);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__TwoPole, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_TwoPole_setCoefficients__SWIG_0(self, argc, argv);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'TwoPole_setCoefficients'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::TwoPole::setCoefficients(stk::StkFloat,stk::StkFloat,stk::StkFloat,bool)\n"
    "    stk::TwoPole::setCoefficients(stk::StkFloat,stk::StkFloat,stk::StkFloat)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_TwoPole_setResonance__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::TwoPole *arg1 = (stk::TwoPole *) 0 ;
  stk::StkFloat arg2 ;
  stk::StkFloat arg3 ;
  bool arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__TwoPole, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TwoPole_setResonance" "', argument " "1"" of type '" "stk::TwoPole *""'"); 
  }
  arg1 = reinterpret_cast< stk::TwoPole * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "TwoPole_setResonance" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "TwoPole_setResonance" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  ecode4 = SWIG_AsVal_bool(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "TwoPole_setResonance" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  (arg1)->setResonance(arg2,arg3,arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TwoPole_setResonance__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::TwoPole *arg1 = (stk::TwoPole *) 0 ;
  stk::StkFloat arg2 ;
  stk::StkFloat arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__TwoPole, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TwoPole_setResonance" "', argument " "1"" of type '" "stk::TwoPole *""'"); 
  }
  arg1 = reinterpret_cast< stk::TwoPole * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "TwoPole_setResonance" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "TwoPole_setResonance" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  (arg1)->setResonance(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TwoPole_setResonance(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "TwoPole_setResonance", 0, 4, argv))) SWIG_fail;
  --argc;
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__TwoPole, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_TwoPole_setResonance__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  if (argc == 4) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__TwoPole, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_TwoPole_setResonance__SWIG_0(self, argc, argv);
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'TwoPole_setResonance'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::TwoPole::setResonance(stk::StkFloat,stk::StkFloat,bool)\n"
    "    stk::TwoPole::setResonance(stk::StkFloat,stk::StkFloat)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_TwoPole_lastOut(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::TwoPole *arg1 = (stk::TwoPole *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  stk::StkFloat result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__TwoPole, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TwoPole_lastOut" "', argument " "1"" of type '" "stk::TwoPole const *""'"); 
  }
  arg1 = reinterpret_cast< stk::TwoPole * >(argp1);
  result = (stk::StkFloat)((stk::TwoPole const *)arg1)->lastOut();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TwoPole_tick__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::TwoPole *arg1 = (stk::TwoPole *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__TwoPole, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TwoPole_tick" "', argument " "1"" of type '" "stk::TwoPole *""'"); 
  }
  arg1 = reinterpret_cast< stk::TwoPole * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "TwoPole_tick" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  result = (stk::StkFloat)(arg1)->tick(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TwoPole_tick__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::TwoPole *arg1 = (stk::TwoPole *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__TwoPole, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TwoPole_tick" "', argument " "1"" of type '" "stk::TwoPole *""'"); 
  }
  arg1 = reinterpret_cast< stk::TwoPole * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TwoPole_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TwoPole_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "TwoPole_tick" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TwoPole_tick__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::TwoPole *arg1 = (stk::TwoPole *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__TwoPole, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TwoPole_tick" "', argument " "1"" of type '" "stk::TwoPole *""'"); 
  }
  arg1 = reinterpret_cast< stk::TwoPole * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TwoPole_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TwoPole_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TwoPole_tick__SWIG_3(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::TwoPole *arg1 = (stk::TwoPole *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  stk::StkFrames *arg3 = 0 ;
  unsigned int arg4 ;
  unsigned int arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  unsigned int val5 ;
  int ecode5 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__TwoPole, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TwoPole_tick" "', argument " "1"" of type '" "stk::TwoPole *""'"); 
  }
  arg1 = reinterpret_cast< stk::TwoPole * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TwoPole_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TwoPole_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "TwoPole_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TwoPole_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  arg3 = reinterpret_cast< stk::StkFrames * >(argp3);
  ecode4 = SWIG_AsVal_unsigned_SS_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "TwoPole_tick" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  ecode5 = SWIG_AsVal_unsigned_SS_int(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "TwoPole_tick" "', argument " "5"" of type '" "unsigned int""'");
  } 
  arg5 = static_cast< unsigned int >(val5);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,*arg3,arg4,arg5);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TwoPole_tick__SWIG_4(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::TwoPole *arg1 = (stk::TwoPole *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  stk::StkFrames *arg3 = 0 ;
  unsigned int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__TwoPole, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TwoPole_tick" "', argument " "1"" of type '" "stk::TwoPole *""'"); 
  }
  arg1 = reinterpret_cast< stk::TwoPole * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TwoPole_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TwoPole_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "TwoPole_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TwoPole_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  arg3 = reinterpret_cast< stk::StkFrames * >(argp3);
  ecode4 = SWIG_AsVal_unsigned_SS_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "TwoPole_tick" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,*arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TwoPole_tick__SWIG_5(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::TwoPole *arg1 = (stk::TwoPole *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  stk::StkFrames *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__TwoPole, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TwoPole_tick" "', argument " "1"" of type '" "stk::TwoPole *""'"); 
  }
  arg1 = reinterpret_cast< stk::TwoPole * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TwoPole_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TwoPole_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "TwoPole_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TwoPole_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  arg3 = reinterpret_cast< stk::StkFrames * >(argp3);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,*arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TwoPole_tick(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[6] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "TwoPole_tick", 0, 5, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__TwoPole, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_TwoPole_tick__SWIG_2(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__TwoPole, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_TwoPole_tick__SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__TwoPole, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_TwoPole_tick__SWIG_5(self, argc, argv);
        }
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__TwoPole, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_TwoPole_tick__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  if (argc == 4) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__TwoPole, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_TwoPole_tick__SWIG_4(self, argc, argv);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__TwoPole, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_unsigned_SS_int(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_TwoPole_tick__SWIG_3(self, argc, argv);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'TwoPole_tick'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::TwoPole::tick(stk::StkFloat)\n"
    "    stk::TwoPole::tick(stk::StkFrames &,unsigned int)\n"
    "    stk::TwoPole::tick(stk::StkFrames &)\n"
    "    stk::TwoPole::tick(stk::StkFrames &,stk::StkFrames &,unsigned int,unsigned int)\n"
    "    stk::TwoPole::tick(stk::StkFrames &,stk::StkFrames &,unsigned int)\n"
    "    stk::TwoPole::tick(stk::StkFrames &,stk::StkFrames &)\n");
  return 0;
}


SWIGINTERN PyObject *TwoPole_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_stk__TwoPole, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *TwoPole_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_TwoZero(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::TwoZero *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_TwoZero", 0, 0, 0)) SWIG_fail;
  result = (stk::TwoZero *)new stk::TwoZero();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__TwoZero, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_TwoZero(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::TwoZero *arg1 = (stk::TwoZero *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__TwoZero, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_TwoZero" "', argument " "1"" of type '" "stk::TwoZero *""'"); 
  }
  arg1 = reinterpret_cast< stk::TwoZero * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TwoZero_ignoreSampleRateChange__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::TwoZero *arg1 = (stk::TwoZero *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__TwoZero, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TwoZero_ignoreSampleRateChange" "', argument " "1"" of type '" "stk::TwoZero *""'"); 
  }
  arg1 = reinterpret_cast< stk::TwoZero * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "TwoZero_ignoreSampleRateChange" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->ignoreSampleRateChange(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TwoZero_ignoreSampleRateChange__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::TwoZero *arg1 = (stk::TwoZero *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__TwoZero, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TwoZero_ignoreSampleRateChange" "', argument " "1"" of type '" "stk::TwoZero *""'"); 
  }
  arg1 = reinterpret_cast< stk::TwoZero * >(argp1);
  (arg1)->ignoreSampleRateChange();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TwoZero_ignoreSampleRateChange(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "TwoZero_ignoreSampleRateChange", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__TwoZero, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_TwoZero_ignoreSampleRateChange__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__TwoZero, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_TwoZero_ignoreSampleRateChange__SWIG_0(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'TwoZero_ignoreSampleRateChange'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::TwoZero::ignoreSampleRateChange(bool)\n"
    "    stk::TwoZero::ignoreSampleRateChange()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_TwoZero_setB0(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::TwoZero *arg1 = (stk::TwoZero *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "TwoZero_setB0", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__TwoZero, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TwoZero_setB0" "', argument " "1"" of type '" "stk::TwoZero *""'"); 
  }
  arg1 = reinterpret_cast< stk::TwoZero * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "TwoZero_setB0" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setB0(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TwoZero_setB1(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::TwoZero *arg1 = (stk::TwoZero *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "TwoZero_setB1", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__TwoZero, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TwoZero_setB1" "', argument " "1"" of type '" "stk::TwoZero *""'"); 
  }
  arg1 = reinterpret_cast< stk::TwoZero * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "TwoZero_setB1" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setB1(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TwoZero_setB2(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::TwoZero *arg1 = (stk::TwoZero *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "TwoZero_setB2", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__TwoZero, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TwoZero_setB2" "', argument " "1"" of type '" "stk::TwoZero *""'"); 
  }
  arg1 = reinterpret_cast< stk::TwoZero * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "TwoZero_setB2" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setB2(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TwoZero_setCoefficients__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::TwoZero *arg1 = (stk::TwoZero *) 0 ;
  stk::StkFloat arg2 ;
  stk::StkFloat arg3 ;
  stk::StkFloat arg4 ;
  bool arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  
  if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__TwoZero, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TwoZero_setCoefficients" "', argument " "1"" of type '" "stk::TwoZero *""'"); 
  }
  arg1 = reinterpret_cast< stk::TwoZero * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "TwoZero_setCoefficients" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "TwoZero_setCoefficients" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "TwoZero_setCoefficients" "', argument " "4"" of type '" "stk::StkFloat""'");
  } 
  arg4 = static_cast< stk::StkFloat >(val4);
  ecode5 = SWIG_AsVal_bool(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "TwoZero_setCoefficients" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  (arg1)->setCoefficients(arg2,arg3,arg4,arg5);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TwoZero_setCoefficients__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::TwoZero *arg1 = (stk::TwoZero *) 0 ;
  stk::StkFloat arg2 ;
  stk::StkFloat arg3 ;
  stk::StkFloat arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__TwoZero, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TwoZero_setCoefficients" "', argument " "1"" of type '" "stk::TwoZero *""'"); 
  }
  arg1 = reinterpret_cast< stk::TwoZero * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "TwoZero_setCoefficients" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "TwoZero_setCoefficients" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "TwoZero_setCoefficients" "', argument " "4"" of type '" "stk::StkFloat""'");
  } 
  arg4 = static_cast< stk::StkFloat >(val4);
  (arg1)->setCoefficients(arg2,arg3,arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TwoZero_setCoefficients(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[6] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "TwoZero_setCoefficients", 0, 5, argv))) SWIG_fail;
  --argc;
  if (argc == 4) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__TwoZero, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_TwoZero_setCoefficients__SWIG_1(self, argc, argv);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__TwoZero, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_TwoZero_setCoefficients__SWIG_0(self, argc, argv);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'TwoZero_setCoefficients'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::TwoZero::setCoefficients(stk::StkFloat,stk::StkFloat,stk::StkFloat,bool)\n"
    "    stk::TwoZero::setCoefficients(stk::StkFloat,stk::StkFloat,stk::StkFloat)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_TwoZero_setNotch(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::TwoZero *arg1 = (stk::TwoZero *) 0 ;
  stk::StkFloat arg2 ;
  stk::StkFloat arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "TwoZero_setNotch", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__TwoZero, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TwoZero_setNotch" "', argument " "1"" of type '" "stk::TwoZero *""'"); 
  }
  arg1 = reinterpret_cast< stk::TwoZero * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "TwoZero_setNotch" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "TwoZero_setNotch" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  (arg1)->setNotch(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TwoZero_lastOut(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::TwoZero *arg1 = (stk::TwoZero *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  stk::StkFloat result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__TwoZero, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TwoZero_lastOut" "', argument " "1"" of type '" "stk::TwoZero const *""'"); 
  }
  arg1 = reinterpret_cast< stk::TwoZero * >(argp1);
  result = (stk::StkFloat)((stk::TwoZero const *)arg1)->lastOut();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TwoZero_tick__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::TwoZero *arg1 = (stk::TwoZero *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__TwoZero, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TwoZero_tick" "', argument " "1"" of type '" "stk::TwoZero *""'"); 
  }
  arg1 = reinterpret_cast< stk::TwoZero * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "TwoZero_tick" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  result = (stk::StkFloat)(arg1)->tick(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TwoZero_tick__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::TwoZero *arg1 = (stk::TwoZero *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__TwoZero, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TwoZero_tick" "', argument " "1"" of type '" "stk::TwoZero *""'"); 
  }
  arg1 = reinterpret_cast< stk::TwoZero * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TwoZero_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TwoZero_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "TwoZero_tick" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TwoZero_tick__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::TwoZero *arg1 = (stk::TwoZero *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__TwoZero, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TwoZero_tick" "', argument " "1"" of type '" "stk::TwoZero *""'"); 
  }
  arg1 = reinterpret_cast< stk::TwoZero * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TwoZero_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TwoZero_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TwoZero_tick__SWIG_3(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::TwoZero *arg1 = (stk::TwoZero *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  stk::StkFrames *arg3 = 0 ;
  unsigned int arg4 ;
  unsigned int arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  unsigned int val5 ;
  int ecode5 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__TwoZero, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TwoZero_tick" "', argument " "1"" of type '" "stk::TwoZero *""'"); 
  }
  arg1 = reinterpret_cast< stk::TwoZero * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TwoZero_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TwoZero_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "TwoZero_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TwoZero_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  arg3 = reinterpret_cast< stk::StkFrames * >(argp3);
  ecode4 = SWIG_AsVal_unsigned_SS_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "TwoZero_tick" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  ecode5 = SWIG_AsVal_unsigned_SS_int(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "TwoZero_tick" "', argument " "5"" of type '" "unsigned int""'");
  } 
  arg5 = static_cast< unsigned int >(val5);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,*arg3,arg4,arg5);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TwoZero_tick__SWIG_4(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::TwoZero *arg1 = (stk::TwoZero *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  stk::StkFrames *arg3 = 0 ;
  unsigned int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__TwoZero, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TwoZero_tick" "', argument " "1"" of type '" "stk::TwoZero *""'"); 
  }
  arg1 = reinterpret_cast< stk::TwoZero * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TwoZero_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TwoZero_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "TwoZero_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TwoZero_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  arg3 = reinterpret_cast< stk::StkFrames * >(argp3);
  ecode4 = SWIG_AsVal_unsigned_SS_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "TwoZero_tick" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,*arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TwoZero_tick__SWIG_5(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::TwoZero *arg1 = (stk::TwoZero *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  stk::StkFrames *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__TwoZero, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TwoZero_tick" "', argument " "1"" of type '" "stk::TwoZero *""'"); 
  }
  arg1 = reinterpret_cast< stk::TwoZero * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TwoZero_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TwoZero_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "TwoZero_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TwoZero_tick" "', argument " "3"" of type '" "stk::StkFrames &""'"); 
  }
  arg3 = reinterpret_cast< stk::StkFrames * >(argp3);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,*arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TwoZero_tick(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[6] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "TwoZero_tick", 0, 5, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__TwoZero, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_TwoZero_tick__SWIG_2(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__TwoZero, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_TwoZero_tick__SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__TwoZero, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_TwoZero_tick__SWIG_5(self, argc, argv);
        }
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__TwoZero, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_TwoZero_tick__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  if (argc == 4) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__TwoZero, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_TwoZero_tick__SWIG_4(self, argc, argv);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__TwoZero, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_unsigned_SS_int(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_TwoZero_tick__SWIG_3(self, argc, argv);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'TwoZero_tick'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::TwoZero::tick(stk::StkFloat)\n"
    "    stk::TwoZero::tick(stk::StkFrames &,unsigned int)\n"
    "    stk::TwoZero::tick(stk::StkFrames &)\n"
    "    stk::TwoZero::tick(stk::StkFrames &,stk::StkFrames &,unsigned int,unsigned int)\n"
    "    stk::TwoZero::tick(stk::StkFrames &,stk::StkFrames &,unsigned int)\n"
    "    stk::TwoZero::tick(stk::StkFrames &,stk::StkFrames &)\n");
  return 0;
}


SWIGINTERN PyObject *TwoZero_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_stk__TwoZero, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *TwoZero_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_Vector3D__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::StkFloat arg1 ;
  stk::StkFloat arg2 ;
  stk::StkFloat arg3 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  stk::Vector3D *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Vector3D" "', argument " "1"" of type '" "stk::StkFloat""'");
  } 
  arg1 = static_cast< stk::StkFloat >(val1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_Vector3D" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_Vector3D" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  result = (stk::Vector3D *)new stk::Vector3D(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__Vector3D, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Vector3D__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::StkFloat arg1 ;
  stk::StkFloat arg2 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  stk::Vector3D *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Vector3D" "', argument " "1"" of type '" "stk::StkFloat""'");
  } 
  arg1 = static_cast< stk::StkFloat >(val1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_Vector3D" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  result = (stk::Vector3D *)new stk::Vector3D(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__Vector3D, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Vector3D__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::StkFloat arg1 ;
  float val1 ;
  int ecode1 = 0 ;
  stk::Vector3D *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Vector3D" "', argument " "1"" of type '" "stk::StkFloat""'");
  } 
  arg1 = static_cast< stk::StkFloat >(val1);
  result = (stk::Vector3D *)new stk::Vector3D(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__Vector3D, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Vector3D__SWIG_3(PyObject *self, Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  stk::Vector3D *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (stk::Vector3D *)new stk::Vector3D();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__Vector3D, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Vector3D(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_Vector3D", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_Vector3D__SWIG_3(self, argc, argv);
  }
  if (argc == 1) {
    int _v = 0;
    {
      int res = SWIG_AsVal_float(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_Vector3D__SWIG_2(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    {
      int res = SWIG_AsVal_float(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_Vector3D__SWIG_1(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    {
      int res = SWIG_AsVal_float(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_Vector3D__SWIG_0(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_Vector3D'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::Vector3D::Vector3D(stk::StkFloat,stk::StkFloat,stk::StkFloat)\n"
    "    stk::Vector3D::Vector3D(stk::StkFloat,stk::StkFloat)\n"
    "    stk::Vector3D::Vector3D(stk::StkFloat)\n"
    "    stk::Vector3D::Vector3D()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Vector3D_getX(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Vector3D *arg1 = (stk::Vector3D *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  stk::StkFloat result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Vector3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector3D_getX" "', argument " "1"" of type '" "stk::Vector3D *""'"); 
  }
  arg1 = reinterpret_cast< stk::Vector3D * >(argp1);
  result = (stk::StkFloat)(arg1)->getX();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector3D_getY(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Vector3D *arg1 = (stk::Vector3D *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  stk::StkFloat result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Vector3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector3D_getY" "', argument " "1"" of type '" "stk::Vector3D *""'"); 
  }
  arg1 = reinterpret_cast< stk::Vector3D * >(argp1);
  result = (stk::StkFloat)(arg1)->getY();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector3D_getZ(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Vector3D *arg1 = (stk::Vector3D *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  stk::StkFloat result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Vector3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector3D_getZ" "', argument " "1"" of type '" "stk::Vector3D *""'"); 
  }
  arg1 = reinterpret_cast< stk::Vector3D * >(argp1);
  result = (stk::StkFloat)(arg1)->getZ();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector3D_getLength(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Vector3D *arg1 = (stk::Vector3D *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  stk::StkFloat result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Vector3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector3D_getLength" "', argument " "1"" of type '" "stk::Vector3D *""'"); 
  }
  arg1 = reinterpret_cast< stk::Vector3D * >(argp1);
  result = (stk::StkFloat)(arg1)->getLength();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector3D_setXYZ(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Vector3D *arg1 = (stk::Vector3D *) 0 ;
  stk::StkFloat arg2 ;
  stk::StkFloat arg3 ;
  stk::StkFloat arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  PyObject *swig_obj[4] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Vector3D_setXYZ", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Vector3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector3D_setXYZ" "', argument " "1"" of type '" "stk::Vector3D *""'"); 
  }
  arg1 = reinterpret_cast< stk::Vector3D * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Vector3D_setXYZ" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Vector3D_setXYZ" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Vector3D_setXYZ" "', argument " "4"" of type '" "stk::StkFloat""'");
  } 
  arg4 = static_cast< stk::StkFloat >(val4);
  (arg1)->setXYZ(arg2,arg3,arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector3D_setX(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Vector3D *arg1 = (stk::Vector3D *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Vector3D_setX", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Vector3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector3D_setX" "', argument " "1"" of type '" "stk::Vector3D *""'"); 
  }
  arg1 = reinterpret_cast< stk::Vector3D * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Vector3D_setX" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setX(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector3D_setY(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Vector3D *arg1 = (stk::Vector3D *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Vector3D_setY", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Vector3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector3D_setY" "', argument " "1"" of type '" "stk::Vector3D *""'"); 
  }
  arg1 = reinterpret_cast< stk::Vector3D * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Vector3D_setY" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setY(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vector3D_setZ(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Vector3D *arg1 = (stk::Vector3D *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Vector3D_setZ", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Vector3D, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vector3D_setZ" "', argument " "1"" of type '" "stk::Vector3D *""'"); 
  }
  arg1 = reinterpret_cast< stk::Vector3D * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Vector3D_setZ" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setZ(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Vector3D(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Vector3D *arg1 = (stk::Vector3D *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Vector3D, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Vector3D" "', argument " "1"" of type '" "stk::Vector3D *""'"); 
  }
  arg1 = reinterpret_cast< stk::Vector3D * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Vector3D_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_stk__Vector3D, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *Vector3D_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_VoicForm(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::VoicForm *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_VoicForm", 0, 0, 0)) SWIG_fail;
  result = (stk::VoicForm *)new stk::VoicForm();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__VoicForm, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_VoicForm(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::VoicForm *arg1 = (stk::VoicForm *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__VoicForm, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_VoicForm" "', argument " "1"" of type '" "stk::VoicForm *""'"); 
  }
  arg1 = reinterpret_cast< stk::VoicForm * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VoicForm_clear(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::VoicForm *arg1 = (stk::VoicForm *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__VoicForm, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VoicForm_clear" "', argument " "1"" of type '" "stk::VoicForm *""'"); 
  }
  arg1 = reinterpret_cast< stk::VoicForm * >(argp1);
  (arg1)->clear();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VoicForm_setFrequency(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::VoicForm *arg1 = (stk::VoicForm *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "VoicForm_setFrequency", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__VoicForm, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VoicForm_setFrequency" "', argument " "1"" of type '" "stk::VoicForm *""'"); 
  }
  arg1 = reinterpret_cast< stk::VoicForm * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VoicForm_setFrequency" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setFrequency(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VoicForm_setPhoneme(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::VoicForm *arg1 = (stk::VoicForm *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "VoicForm_setPhoneme", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__VoicForm, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VoicForm_setPhoneme" "', argument " "1"" of type '" "stk::VoicForm *""'"); 
  }
  arg1 = reinterpret_cast< stk::VoicForm * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(swig_obj[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VoicForm_setPhoneme" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (bool)(arg1)->setPhoneme((char const *)arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_VoicForm_setVoiced(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::VoicForm *arg1 = (stk::VoicForm *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "VoicForm_setVoiced", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__VoicForm, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VoicForm_setVoiced" "', argument " "1"" of type '" "stk::VoicForm *""'"); 
  }
  arg1 = reinterpret_cast< stk::VoicForm * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VoicForm_setVoiced" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setVoiced(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VoicForm_setUnVoiced(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::VoicForm *arg1 = (stk::VoicForm *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "VoicForm_setUnVoiced", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__VoicForm, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VoicForm_setUnVoiced" "', argument " "1"" of type '" "stk::VoicForm *""'"); 
  }
  arg1 = reinterpret_cast< stk::VoicForm * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VoicForm_setUnVoiced" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setUnVoiced(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VoicForm_setFilterSweepRate(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::VoicForm *arg1 = (stk::VoicForm *) 0 ;
  unsigned int arg2 ;
  stk::StkFloat arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "VoicForm_setFilterSweepRate", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__VoicForm, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VoicForm_setFilterSweepRate" "', argument " "1"" of type '" "stk::VoicForm *""'"); 
  }
  arg1 = reinterpret_cast< stk::VoicForm * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VoicForm_setFilterSweepRate" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "VoicForm_setFilterSweepRate" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  (arg1)->setFilterSweepRate(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VoicForm_setPitchSweepRate(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::VoicForm *arg1 = (stk::VoicForm *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "VoicForm_setPitchSweepRate", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__VoicForm, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VoicForm_setPitchSweepRate" "', argument " "1"" of type '" "stk::VoicForm *""'"); 
  }
  arg1 = reinterpret_cast< stk::VoicForm * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VoicForm_setPitchSweepRate" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setPitchSweepRate(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VoicForm_speak(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::VoicForm *arg1 = (stk::VoicForm *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__VoicForm, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VoicForm_speak" "', argument " "1"" of type '" "stk::VoicForm *""'"); 
  }
  arg1 = reinterpret_cast< stk::VoicForm * >(argp1);
  (arg1)->speak();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VoicForm_quiet(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::VoicForm *arg1 = (stk::VoicForm *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__VoicForm, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VoicForm_quiet" "', argument " "1"" of type '" "stk::VoicForm *""'"); 
  }
  arg1 = reinterpret_cast< stk::VoicForm * >(argp1);
  (arg1)->quiet();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VoicForm_noteOn(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::VoicForm *arg1 = (stk::VoicForm *) 0 ;
  stk::StkFloat arg2 ;
  stk::StkFloat arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "VoicForm_noteOn", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__VoicForm, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VoicForm_noteOn" "', argument " "1"" of type '" "stk::VoicForm *""'"); 
  }
  arg1 = reinterpret_cast< stk::VoicForm * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VoicForm_noteOn" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "VoicForm_noteOn" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  (arg1)->noteOn(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VoicForm_noteOff(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::VoicForm *arg1 = (stk::VoicForm *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "VoicForm_noteOff", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__VoicForm, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VoicForm_noteOff" "', argument " "1"" of type '" "stk::VoicForm *""'"); 
  }
  arg1 = reinterpret_cast< stk::VoicForm * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VoicForm_noteOff" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->noteOff(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VoicForm_controlChange(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::VoicForm *arg1 = (stk::VoicForm *) 0 ;
  int arg2 ;
  stk::StkFloat arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "VoicForm_controlChange", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__VoicForm, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VoicForm_controlChange" "', argument " "1"" of type '" "stk::VoicForm *""'"); 
  }
  arg1 = reinterpret_cast< stk::VoicForm * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VoicForm_controlChange" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "VoicForm_controlChange" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  (arg1)->controlChange(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VoicForm_tick__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::VoicForm *arg1 = (stk::VoicForm *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__VoicForm, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VoicForm_tick" "', argument " "1"" of type '" "stk::VoicForm *""'"); 
  }
  arg1 = reinterpret_cast< stk::VoicForm * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VoicForm_tick" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (stk::StkFloat)(arg1)->tick(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VoicForm_tick__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::VoicForm *arg1 = (stk::VoicForm *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__VoicForm, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VoicForm_tick" "', argument " "1"" of type '" "stk::VoicForm *""'"); 
  }
  arg1 = reinterpret_cast< stk::VoicForm * >(argp1);
  result = (stk::StkFloat)(arg1)->tick();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VoicForm_tick__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::VoicForm *arg1 = (stk::VoicForm *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__VoicForm, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VoicForm_tick" "', argument " "1"" of type '" "stk::VoicForm *""'"); 
  }
  arg1 = reinterpret_cast< stk::VoicForm * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VoicForm_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VoicForm_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "VoicForm_tick" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VoicForm_tick__SWIG_3(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::VoicForm *arg1 = (stk::VoicForm *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__VoicForm, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VoicForm_tick" "', argument " "1"" of type '" "stk::VoicForm *""'"); 
  }
  arg1 = reinterpret_cast< stk::VoicForm * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VoicForm_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VoicForm_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VoicForm_tick(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "VoicForm_tick", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__VoicForm, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_VoicForm_tick__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__VoicForm, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_VoicForm_tick__SWIG_3(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__VoicForm, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_VoicForm_tick__SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__VoicForm, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_VoicForm_tick__SWIG_2(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'VoicForm_tick'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::VoicForm::tick(unsigned int)\n"
    "    stk::VoicForm::tick()\n"
    "    stk::VoicForm::tick(stk::StkFrames &,unsigned int)\n"
    "    stk::VoicForm::tick(stk::StkFrames &)\n");
  return 0;
}


SWIGINTERN PyObject *VoicForm_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_stk__VoicForm, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *VoicForm_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_Voicer__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::StkFloat arg1 ;
  float val1 ;
  int ecode1 = 0 ;
  stk::Voicer *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Voicer" "', argument " "1"" of type '" "stk::StkFloat""'");
  } 
  arg1 = static_cast< stk::StkFloat >(val1);
  result = (stk::Voicer *)new stk::Voicer(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__Voicer, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Voicer__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  stk::Voicer *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (stk::Voicer *)new stk::Voicer();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__Voicer, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Voicer(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_Voicer", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_Voicer__SWIG_1(self, argc, argv);
  }
  if (argc == 1) {
    int _v = 0;
    {
      int res = SWIG_AsVal_float(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_Voicer__SWIG_0(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_Voicer'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::Voicer::Voicer(stk::StkFloat)\n"
    "    stk::Voicer::Voicer()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Voicer_addInstrument__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Voicer *arg1 = (stk::Voicer *) 0 ;
  stk::Instrmnt *arg2 = (stk::Instrmnt *) 0 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Voicer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Voicer_addInstrument" "', argument " "1"" of type '" "stk::Voicer *""'"); 
  }
  arg1 = reinterpret_cast< stk::Voicer * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_stk__Instrmnt, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Voicer_addInstrument" "', argument " "2"" of type '" "stk::Instrmnt *""'"); 
  }
  arg2 = reinterpret_cast< stk::Instrmnt * >(argp2);
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Voicer_addInstrument" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  (arg1)->addInstrument(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Voicer_addInstrument__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Voicer *arg1 = (stk::Voicer *) 0 ;
  stk::Instrmnt *arg2 = (stk::Instrmnt *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Voicer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Voicer_addInstrument" "', argument " "1"" of type '" "stk::Voicer *""'"); 
  }
  arg1 = reinterpret_cast< stk::Voicer * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_stk__Instrmnt, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Voicer_addInstrument" "', argument " "2"" of type '" "stk::Instrmnt *""'"); 
  }
  arg2 = reinterpret_cast< stk::Instrmnt * >(argp2);
  (arg1)->addInstrument(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Voicer_addInstrument(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Voicer_addInstrument", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Voicer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__Instrmnt, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Voicer_addInstrument__SWIG_1(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Voicer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__Instrmnt, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Voicer_addInstrument__SWIG_0(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Voicer_addInstrument'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::Voicer::addInstrument(stk::Instrmnt *,int)\n"
    "    stk::Voicer::addInstrument(stk::Instrmnt *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Voicer_removeInstrument(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Voicer *arg1 = (stk::Voicer *) 0 ;
  stk::Instrmnt *arg2 = (stk::Instrmnt *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Voicer_removeInstrument", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Voicer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Voicer_removeInstrument" "', argument " "1"" of type '" "stk::Voicer *""'"); 
  }
  arg1 = reinterpret_cast< stk::Voicer * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_stk__Instrmnt, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Voicer_removeInstrument" "', argument " "2"" of type '" "stk::Instrmnt *""'"); 
  }
  arg2 = reinterpret_cast< stk::Instrmnt * >(argp2);
  (arg1)->removeInstrument(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Voicer_noteOn__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Voicer *arg1 = (stk::Voicer *) 0 ;
  stk::StkFloat arg2 ;
  stk::StkFloat arg3 ;
  int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  long result;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Voicer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Voicer_noteOn" "', argument " "1"" of type '" "stk::Voicer *""'"); 
  }
  arg1 = reinterpret_cast< stk::Voicer * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Voicer_noteOn" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Voicer_noteOn" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  ecode4 = SWIG_AsVal_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Voicer_noteOn" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  result = (long)(arg1)->noteOn(arg2,arg3,arg4);
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Voicer_noteOn__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Voicer *arg1 = (stk::Voicer *) 0 ;
  stk::StkFloat arg2 ;
  stk::StkFloat arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  long result;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Voicer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Voicer_noteOn" "', argument " "1"" of type '" "stk::Voicer *""'"); 
  }
  arg1 = reinterpret_cast< stk::Voicer * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Voicer_noteOn" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Voicer_noteOn" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  result = (long)(arg1)->noteOn(arg2,arg3);
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Voicer_noteOn(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Voicer_noteOn", 0, 4, argv))) SWIG_fail;
  --argc;
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Voicer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Voicer_noteOn__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  if (argc == 4) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Voicer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_Voicer_noteOn__SWIG_0(self, argc, argv);
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Voicer_noteOn'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::Voicer::noteOn(stk::StkFloat,stk::StkFloat,int)\n"
    "    stk::Voicer::noteOn(stk::StkFloat,stk::StkFloat)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Voicer_noteOff__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Voicer *arg1 = (stk::Voicer *) 0 ;
  stk::StkFloat arg2 ;
  stk::StkFloat arg3 ;
  int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Voicer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Voicer_noteOff" "', argument " "1"" of type '" "stk::Voicer *""'"); 
  }
  arg1 = reinterpret_cast< stk::Voicer * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Voicer_noteOff" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Voicer_noteOff" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  ecode4 = SWIG_AsVal_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Voicer_noteOff" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  (arg1)->noteOff(arg2,arg3,arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Voicer_noteOff__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Voicer *arg1 = (stk::Voicer *) 0 ;
  stk::StkFloat arg2 ;
  stk::StkFloat arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Voicer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Voicer_noteOff" "', argument " "1"" of type '" "stk::Voicer *""'"); 
  }
  arg1 = reinterpret_cast< stk::Voicer * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Voicer_noteOff" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Voicer_noteOff" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  (arg1)->noteOff(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Voicer_noteOff__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Voicer *arg1 = (stk::Voicer *) 0 ;
  long arg2 ;
  stk::StkFloat arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Voicer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Voicer_noteOff" "', argument " "1"" of type '" "stk::Voicer *""'"); 
  }
  arg1 = reinterpret_cast< stk::Voicer * >(argp1);
  ecode2 = SWIG_AsVal_long(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Voicer_noteOff" "', argument " "2"" of type '" "long""'");
  } 
  arg2 = static_cast< long >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Voicer_noteOff" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  (arg1)->noteOff(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Voicer_noteOff(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Voicer_noteOff", 0, 4, argv))) SWIG_fail;
  --argc;
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Voicer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_long(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Voicer_noteOff__SWIG_2(self, argc, argv);
        }
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Voicer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Voicer_noteOff__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  if (argc == 4) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Voicer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_Voicer_noteOff__SWIG_0(self, argc, argv);
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Voicer_noteOff'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::Voicer::noteOff(stk::StkFloat,stk::StkFloat,int)\n"
    "    stk::Voicer::noteOff(stk::StkFloat,stk::StkFloat)\n"
    "    stk::Voicer::noteOff(long,stk::StkFloat)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Voicer_setFrequency__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Voicer *arg1 = (stk::Voicer *) 0 ;
  stk::StkFloat arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Voicer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Voicer_setFrequency" "', argument " "1"" of type '" "stk::Voicer *""'"); 
  }
  arg1 = reinterpret_cast< stk::Voicer * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Voicer_setFrequency" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Voicer_setFrequency" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  (arg1)->setFrequency(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Voicer_setFrequency__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Voicer *arg1 = (stk::Voicer *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Voicer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Voicer_setFrequency" "', argument " "1"" of type '" "stk::Voicer *""'"); 
  }
  arg1 = reinterpret_cast< stk::Voicer * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Voicer_setFrequency" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setFrequency(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Voicer_setFrequency__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Voicer *arg1 = (stk::Voicer *) 0 ;
  long arg2 ;
  stk::StkFloat arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Voicer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Voicer_setFrequency" "', argument " "1"" of type '" "stk::Voicer *""'"); 
  }
  arg1 = reinterpret_cast< stk::Voicer * >(argp1);
  ecode2 = SWIG_AsVal_long(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Voicer_setFrequency" "', argument " "2"" of type '" "long""'");
  } 
  arg2 = static_cast< long >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Voicer_setFrequency" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  (arg1)->setFrequency(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Voicer_setFrequency(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Voicer_setFrequency", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Voicer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Voicer_setFrequency__SWIG_1(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Voicer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_long(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Voicer_setFrequency__SWIG_2(self, argc, argv);
        }
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Voicer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Voicer_setFrequency__SWIG_0(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Voicer_setFrequency'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::Voicer::setFrequency(stk::StkFloat,int)\n"
    "    stk::Voicer::setFrequency(stk::StkFloat)\n"
    "    stk::Voicer::setFrequency(long,stk::StkFloat)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Voicer_pitchBend__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Voicer *arg1 = (stk::Voicer *) 0 ;
  stk::StkFloat arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Voicer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Voicer_pitchBend" "', argument " "1"" of type '" "stk::Voicer *""'"); 
  }
  arg1 = reinterpret_cast< stk::Voicer * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Voicer_pitchBend" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Voicer_pitchBend" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  (arg1)->pitchBend(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Voicer_pitchBend__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Voicer *arg1 = (stk::Voicer *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Voicer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Voicer_pitchBend" "', argument " "1"" of type '" "stk::Voicer *""'"); 
  }
  arg1 = reinterpret_cast< stk::Voicer * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Voicer_pitchBend" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->pitchBend(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Voicer_pitchBend__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Voicer *arg1 = (stk::Voicer *) 0 ;
  long arg2 ;
  stk::StkFloat arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Voicer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Voicer_pitchBend" "', argument " "1"" of type '" "stk::Voicer *""'"); 
  }
  arg1 = reinterpret_cast< stk::Voicer * >(argp1);
  ecode2 = SWIG_AsVal_long(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Voicer_pitchBend" "', argument " "2"" of type '" "long""'");
  } 
  arg2 = static_cast< long >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Voicer_pitchBend" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  (arg1)->pitchBend(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Voicer_pitchBend(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Voicer_pitchBend", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Voicer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Voicer_pitchBend__SWIG_1(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Voicer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_long(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Voicer_pitchBend__SWIG_2(self, argc, argv);
        }
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Voicer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Voicer_pitchBend__SWIG_0(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Voicer_pitchBend'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::Voicer::pitchBend(stk::StkFloat,int)\n"
    "    stk::Voicer::pitchBend(stk::StkFloat)\n"
    "    stk::Voicer::pitchBend(long,stk::StkFloat)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Voicer_controlChange__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Voicer *arg1 = (stk::Voicer *) 0 ;
  int arg2 ;
  stk::StkFloat arg3 ;
  int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Voicer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Voicer_controlChange" "', argument " "1"" of type '" "stk::Voicer *""'"); 
  }
  arg1 = reinterpret_cast< stk::Voicer * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Voicer_controlChange" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Voicer_controlChange" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  ecode4 = SWIG_AsVal_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Voicer_controlChange" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  (arg1)->controlChange(arg2,arg3,arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Voicer_controlChange__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Voicer *arg1 = (stk::Voicer *) 0 ;
  int arg2 ;
  stk::StkFloat arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Voicer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Voicer_controlChange" "', argument " "1"" of type '" "stk::Voicer *""'"); 
  }
  arg1 = reinterpret_cast< stk::Voicer * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Voicer_controlChange" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Voicer_controlChange" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  (arg1)->controlChange(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Voicer_controlChange__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Voicer *arg1 = (stk::Voicer *) 0 ;
  long arg2 ;
  int arg3 ;
  stk::StkFloat arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Voicer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Voicer_controlChange" "', argument " "1"" of type '" "stk::Voicer *""'"); 
  }
  arg1 = reinterpret_cast< stk::Voicer * >(argp1);
  ecode2 = SWIG_AsVal_long(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Voicer_controlChange" "', argument " "2"" of type '" "long""'");
  } 
  arg2 = static_cast< long >(val2);
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Voicer_controlChange" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Voicer_controlChange" "', argument " "4"" of type '" "stk::StkFloat""'");
  } 
  arg4 = static_cast< stk::StkFloat >(val4);
  (arg1)->controlChange(arg2,arg3,arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Voicer_controlChange(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Voicer_controlChange", 0, 4, argv))) SWIG_fail;
  --argc;
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Voicer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Voicer_controlChange__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  if (argc == 4) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Voicer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_Voicer_controlChange__SWIG_0(self, argc, argv);
          }
        }
      }
    }
  }
  if (argc == 4) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Voicer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_long(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_Voicer_controlChange__SWIG_2(self, argc, argv);
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Voicer_controlChange'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::Voicer::controlChange(int,stk::StkFloat,int)\n"
    "    stk::Voicer::controlChange(int,stk::StkFloat)\n"
    "    stk::Voicer::controlChange(long,int,stk::StkFloat)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Voicer_silence(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Voicer *arg1 = (stk::Voicer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Voicer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Voicer_silence" "', argument " "1"" of type '" "stk::Voicer *""'"); 
  }
  arg1 = reinterpret_cast< stk::Voicer * >(argp1);
  (arg1)->silence();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Voicer_channelsOut(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Voicer *arg1 = (stk::Voicer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Voicer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Voicer_channelsOut" "', argument " "1"" of type '" "stk::Voicer const *""'"); 
  }
  arg1 = reinterpret_cast< stk::Voicer * >(argp1);
  result = (unsigned int)((stk::Voicer const *)arg1)->channelsOut();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Voicer_lastFrame(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Voicer *arg1 = (stk::Voicer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  stk::StkFrames *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Voicer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Voicer_lastFrame" "', argument " "1"" of type '" "stk::Voicer const *""'"); 
  }
  arg1 = reinterpret_cast< stk::Voicer * >(argp1);
  result = (stk::StkFrames *) &((stk::Voicer const *)arg1)->lastFrame();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Voicer_lastOut__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Voicer *arg1 = (stk::Voicer *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Voicer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Voicer_lastOut" "', argument " "1"" of type '" "stk::Voicer *""'"); 
  }
  arg1 = reinterpret_cast< stk::Voicer * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Voicer_lastOut" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (stk::StkFloat)(arg1)->lastOut(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Voicer_lastOut__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Voicer *arg1 = (stk::Voicer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Voicer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Voicer_lastOut" "', argument " "1"" of type '" "stk::Voicer *""'"); 
  }
  arg1 = reinterpret_cast< stk::Voicer * >(argp1);
  result = (stk::StkFloat)(arg1)->lastOut();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Voicer_lastOut(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Voicer_lastOut", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Voicer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Voicer_lastOut__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Voicer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Voicer_lastOut__SWIG_0(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Voicer_lastOut'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::Voicer::lastOut(unsigned int)\n"
    "    stk::Voicer::lastOut()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Voicer_tick__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Voicer *arg1 = (stk::Voicer *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Voicer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Voicer_tick" "', argument " "1"" of type '" "stk::Voicer *""'"); 
  }
  arg1 = reinterpret_cast< stk::Voicer * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Voicer_tick" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (stk::StkFloat)(arg1)->tick(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Voicer_tick__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Voicer *arg1 = (stk::Voicer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Voicer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Voicer_tick" "', argument " "1"" of type '" "stk::Voicer *""'"); 
  }
  arg1 = reinterpret_cast< stk::Voicer * >(argp1);
  result = (stk::StkFloat)(arg1)->tick();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Voicer_tick__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Voicer *arg1 = (stk::Voicer *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Voicer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Voicer_tick" "', argument " "1"" of type '" "stk::Voicer *""'"); 
  }
  arg1 = reinterpret_cast< stk::Voicer * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Voicer_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Voicer_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Voicer_tick" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Voicer_tick__SWIG_3(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Voicer *arg1 = (stk::Voicer *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Voicer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Voicer_tick" "', argument " "1"" of type '" "stk::Voicer *""'"); 
  }
  arg1 = reinterpret_cast< stk::Voicer * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Voicer_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Voicer_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Voicer_tick(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Voicer_tick", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Voicer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Voicer_tick__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Voicer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Voicer_tick__SWIG_3(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Voicer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Voicer_tick__SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Voicer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Voicer_tick__SWIG_2(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Voicer_tick'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::Voicer::tick(unsigned int)\n"
    "    stk::Voicer::tick()\n"
    "    stk::Voicer::tick(stk::StkFrames &,unsigned int)\n"
    "    stk::Voicer::tick(stk::StkFrames &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_Voicer(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Voicer *arg1 = (stk::Voicer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Voicer, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Voicer" "', argument " "1"" of type '" "stk::Voicer *""'"); 
  }
  arg1 = reinterpret_cast< stk::Voicer * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Voicer_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_stk__Voicer, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *Voicer_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_Whistle(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Whistle *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_Whistle", 0, 0, 0)) SWIG_fail;
  result = (stk::Whistle *)new stk::Whistle();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__Whistle, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Whistle(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Whistle *arg1 = (stk::Whistle *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Whistle, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Whistle" "', argument " "1"" of type '" "stk::Whistle *""'"); 
  }
  arg1 = reinterpret_cast< stk::Whistle * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Whistle_clear(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Whistle *arg1 = (stk::Whistle *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Whistle, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Whistle_clear" "', argument " "1"" of type '" "stk::Whistle *""'"); 
  }
  arg1 = reinterpret_cast< stk::Whistle * >(argp1);
  (arg1)->clear();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Whistle_setFrequency(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Whistle *arg1 = (stk::Whistle *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Whistle_setFrequency", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Whistle, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Whistle_setFrequency" "', argument " "1"" of type '" "stk::Whistle *""'"); 
  }
  arg1 = reinterpret_cast< stk::Whistle * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Whistle_setFrequency" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setFrequency(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Whistle_startBlowing(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Whistle *arg1 = (stk::Whistle *) 0 ;
  stk::StkFloat arg2 ;
  stk::StkFloat arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Whistle_startBlowing", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Whistle, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Whistle_startBlowing" "', argument " "1"" of type '" "stk::Whistle *""'"); 
  }
  arg1 = reinterpret_cast< stk::Whistle * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Whistle_startBlowing" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Whistle_startBlowing" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  (arg1)->startBlowing(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Whistle_stopBlowing(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Whistle *arg1 = (stk::Whistle *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Whistle_stopBlowing", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Whistle, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Whistle_stopBlowing" "', argument " "1"" of type '" "stk::Whistle *""'"); 
  }
  arg1 = reinterpret_cast< stk::Whistle * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Whistle_stopBlowing" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->stopBlowing(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Whistle_noteOn(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Whistle *arg1 = (stk::Whistle *) 0 ;
  stk::StkFloat arg2 ;
  stk::StkFloat arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Whistle_noteOn", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Whistle, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Whistle_noteOn" "', argument " "1"" of type '" "stk::Whistle *""'"); 
  }
  arg1 = reinterpret_cast< stk::Whistle * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Whistle_noteOn" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Whistle_noteOn" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  (arg1)->noteOn(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Whistle_noteOff(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Whistle *arg1 = (stk::Whistle *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Whistle_noteOff", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Whistle, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Whistle_noteOff" "', argument " "1"" of type '" "stk::Whistle *""'"); 
  }
  arg1 = reinterpret_cast< stk::Whistle * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Whistle_noteOff" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->noteOff(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Whistle_controlChange(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Whistle *arg1 = (stk::Whistle *) 0 ;
  int arg2 ;
  stk::StkFloat arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Whistle_controlChange", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Whistle, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Whistle_controlChange" "', argument " "1"" of type '" "stk::Whistle *""'"); 
  }
  arg1 = reinterpret_cast< stk::Whistle * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Whistle_controlChange" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Whistle_controlChange" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  (arg1)->controlChange(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Whistle_tick__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Whistle *arg1 = (stk::Whistle *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Whistle, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Whistle_tick" "', argument " "1"" of type '" "stk::Whistle *""'"); 
  }
  arg1 = reinterpret_cast< stk::Whistle * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Whistle_tick" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (stk::StkFloat)(arg1)->tick(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Whistle_tick__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Whistle *arg1 = (stk::Whistle *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Whistle, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Whistle_tick" "', argument " "1"" of type '" "stk::Whistle *""'"); 
  }
  arg1 = reinterpret_cast< stk::Whistle * >(argp1);
  result = (stk::StkFloat)(arg1)->tick();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Whistle_tick__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Whistle *arg1 = (stk::Whistle *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Whistle, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Whistle_tick" "', argument " "1"" of type '" "stk::Whistle *""'"); 
  }
  arg1 = reinterpret_cast< stk::Whistle * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Whistle_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Whistle_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Whistle_tick" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Whistle_tick__SWIG_3(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Whistle *arg1 = (stk::Whistle *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Whistle, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Whistle_tick" "', argument " "1"" of type '" "stk::Whistle *""'"); 
  }
  arg1 = reinterpret_cast< stk::Whistle * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Whistle_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Whistle_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Whistle_tick(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Whistle_tick", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Whistle, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Whistle_tick__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Whistle, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Whistle_tick__SWIG_3(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Whistle, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Whistle_tick__SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Whistle, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Whistle_tick__SWIG_2(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Whistle_tick'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::Whistle::tick(unsigned int)\n"
    "    stk::Whistle::tick()\n"
    "    stk::Whistle::tick(stk::StkFrames &,unsigned int)\n"
    "    stk::Whistle::tick(stk::StkFrames &)\n");
  return 0;
}


SWIGINTERN PyObject *Whistle_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_stk__Whistle, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *Whistle_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_Wurley(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Wurley *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_Wurley", 0, 0, 0)) SWIG_fail;
  result = (stk::Wurley *)new stk::Wurley();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__Wurley, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Wurley(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Wurley *arg1 = (stk::Wurley *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Wurley, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Wurley" "', argument " "1"" of type '" "stk::Wurley *""'"); 
  }
  arg1 = reinterpret_cast< stk::Wurley * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Wurley_setFrequency(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Wurley *arg1 = (stk::Wurley *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Wurley_setFrequency", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Wurley, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Wurley_setFrequency" "', argument " "1"" of type '" "stk::Wurley *""'"); 
  }
  arg1 = reinterpret_cast< stk::Wurley * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Wurley_setFrequency" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setFrequency(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Wurley_noteOn(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Wurley *arg1 = (stk::Wurley *) 0 ;
  stk::StkFloat arg2 ;
  stk::StkFloat arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Wurley_noteOn", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Wurley, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Wurley_noteOn" "', argument " "1"" of type '" "stk::Wurley *""'"); 
  }
  arg1 = reinterpret_cast< stk::Wurley * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Wurley_noteOn" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Wurley_noteOn" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  (arg1)->noteOn(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Wurley_tick__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Wurley *arg1 = (stk::Wurley *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Wurley, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Wurley_tick" "', argument " "1"" of type '" "stk::Wurley *""'"); 
  }
  arg1 = reinterpret_cast< stk::Wurley * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Wurley_tick" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (stk::StkFloat)(arg1)->tick(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Wurley_tick__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Wurley *arg1 = (stk::Wurley *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Wurley, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Wurley_tick" "', argument " "1"" of type '" "stk::Wurley *""'"); 
  }
  arg1 = reinterpret_cast< stk::Wurley * >(argp1);
  result = (stk::StkFloat)(arg1)->tick();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Wurley_tick__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Wurley *arg1 = (stk::Wurley *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Wurley, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Wurley_tick" "', argument " "1"" of type '" "stk::Wurley *""'"); 
  }
  arg1 = reinterpret_cast< stk::Wurley * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Wurley_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Wurley_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Wurley_tick" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Wurley_tick__SWIG_3(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Wurley *arg1 = (stk::Wurley *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Wurley, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Wurley_tick" "', argument " "1"" of type '" "stk::Wurley *""'"); 
  }
  arg1 = reinterpret_cast< stk::Wurley * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Wurley_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Wurley_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Wurley_tick(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Wurley_tick", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Wurley, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Wurley_tick__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Wurley, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Wurley_tick__SWIG_3(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Wurley, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Wurley_tick__SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Wurley, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Wurley_tick__SWIG_2(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Wurley_tick'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::Wurley::tick(unsigned int)\n"
    "    stk::Wurley::tick()\n"
    "    stk::Wurley::tick(stk::StkFrames &,unsigned int)\n"
    "    stk::Wurley::tick(stk::StkFrames &)\n");
  return 0;
}


SWIGINTERN PyObject *Wurley_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_stk__Wurley, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *Wurley_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_delete_Socket(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Socket *arg1 = (stk::Socket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Socket, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Socket" "', argument " "1"" of type '" "stk::Socket *""'"); 
  }
  arg1 = reinterpret_cast< stk::Socket * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Socket_close(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  ecode1 = SWIG_AsVal_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Socket_close" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  stk::Socket::close(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Socket_id(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Socket *arg1 = (stk::Socket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Socket, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Socket_id" "', argument " "1"" of type '" "stk::Socket const *""'"); 
  }
  arg1 = reinterpret_cast< stk::Socket * >(argp1);
  result = (int)((stk::Socket const *)arg1)->id();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Socket_port(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Socket *arg1 = (stk::Socket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Socket, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Socket_port" "', argument " "1"" of type '" "stk::Socket const *""'"); 
  }
  arg1 = reinterpret_cast< stk::Socket * >(argp1);
  result = (int)((stk::Socket const *)arg1)->port();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Socket_isValid(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  ecode1 = SWIG_AsVal_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Socket_isValid" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  result = (bool)stk::Socket::isValid(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Socket_setBlocking(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  bool arg2 ;
  int val1 ;
  int ecode1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Socket_setBlocking", 2, 2, swig_obj)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Socket_setBlocking" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  ecode2 = SWIG_AsVal_bool(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Socket_setBlocking" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  stk::Socket::setBlocking(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Socket_writeBuffer__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Socket *arg1 = (stk::Socket *) 0 ;
  void *arg2 = (void *) 0 ;
  long arg3 ;
  int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  long val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  int result;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Socket, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Socket_writeBuffer" "', argument " "1"" of type '" "stk::Socket *""'"); 
  }
  arg1 = reinterpret_cast< stk::Socket * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1],SWIG_as_voidptrptr(&arg2), 0, 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Socket_writeBuffer" "', argument " "2"" of type '" "void const *""'"); 
  }
  ecode3 = SWIG_AsVal_long(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Socket_writeBuffer" "', argument " "3"" of type '" "long""'");
  } 
  arg3 = static_cast< long >(val3);
  ecode4 = SWIG_AsVal_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Socket_writeBuffer" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  result = (int)(arg1)->writeBuffer((void const *)arg2,arg3,arg4);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Socket_writeBuffer__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Socket *arg1 = (stk::Socket *) 0 ;
  void *arg2 = (void *) 0 ;
  long arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  long val3 ;
  int ecode3 = 0 ;
  int result;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Socket, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Socket_writeBuffer" "', argument " "1"" of type '" "stk::Socket *""'"); 
  }
  arg1 = reinterpret_cast< stk::Socket * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1],SWIG_as_voidptrptr(&arg2), 0, 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Socket_writeBuffer" "', argument " "2"" of type '" "void const *""'"); 
  }
  ecode3 = SWIG_AsVal_long(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Socket_writeBuffer" "', argument " "3"" of type '" "long""'");
  } 
  arg3 = static_cast< long >(val3);
  result = (int)(arg1)->writeBuffer((void const *)arg2,arg3);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Socket_readBuffer__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Socket *arg1 = (stk::Socket *) 0 ;
  void *arg2 = (void *) 0 ;
  long arg3 ;
  int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  long val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  int result;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Socket, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Socket_readBuffer" "', argument " "1"" of type '" "stk::Socket *""'"); 
  }
  arg1 = reinterpret_cast< stk::Socket * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1],SWIG_as_voidptrptr(&arg2), 0, 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Socket_readBuffer" "', argument " "2"" of type '" "void *""'"); 
  }
  ecode3 = SWIG_AsVal_long(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Socket_readBuffer" "', argument " "3"" of type '" "long""'");
  } 
  arg3 = static_cast< long >(val3);
  ecode4 = SWIG_AsVal_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Socket_readBuffer" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  result = (int)(arg1)->readBuffer(arg2,arg3,arg4);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Socket_readBuffer__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Socket *arg1 = (stk::Socket *) 0 ;
  void *arg2 = (void *) 0 ;
  long arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  long val3 ;
  int ecode3 = 0 ;
  int result;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Socket, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Socket_readBuffer" "', argument " "1"" of type '" "stk::Socket *""'"); 
  }
  arg1 = reinterpret_cast< stk::Socket * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1],SWIG_as_voidptrptr(&arg2), 0, 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Socket_readBuffer" "', argument " "2"" of type '" "void *""'"); 
  }
  ecode3 = SWIG_AsVal_long(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Socket_readBuffer" "', argument " "3"" of type '" "long""'");
  } 
  arg3 = static_cast< long >(val3);
  result = (int)(arg1)->readBuffer(arg2,arg3);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Socket_writeBuffer__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  int arg1 ;
  void *arg2 = (void *) 0 ;
  long arg3 ;
  int arg4 ;
  int val1 ;
  int ecode1 = 0 ;
  int res2 ;
  long val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  int result;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Socket_writeBuffer" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  res2 = SWIG_ConvertPtr(swig_obj[1],SWIG_as_voidptrptr(&arg2), 0, 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Socket_writeBuffer" "', argument " "2"" of type '" "void const *""'"); 
  }
  ecode3 = SWIG_AsVal_long(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Socket_writeBuffer" "', argument " "3"" of type '" "long""'");
  } 
  arg3 = static_cast< long >(val3);
  ecode4 = SWIG_AsVal_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Socket_writeBuffer" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  result = (int)stk::Socket::writeBuffer(arg1,(void const *)arg2,arg3,arg4);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Socket_writeBuffer(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Socket_writeBuffer", 0, 4, argv))) SWIG_fail;
  --argc;
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Socket, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *ptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &ptr, 0, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_long(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Socket_writeBuffer__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  if (argc == 4) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Socket, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *ptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &ptr, 0, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_long(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_Socket_writeBuffer__SWIG_0(self, argc, argv);
          }
        }
      }
    }
  }
  if (argc == 4) {
    int _v = 0;
    {
      int res = SWIG_AsVal_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      void *ptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &ptr, 0, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_long(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_Socket_writeBuffer__SWIG_2(self, argc, argv);
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Socket_writeBuffer'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::Socket::writeBuffer(void const *,long,int)\n"
    "    stk::Socket::writeBuffer(void const *,long)\n"
    "    stk::Socket::writeBuffer(int,void const *,long,int)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Socket_readBuffer__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  int arg1 ;
  void *arg2 = (void *) 0 ;
  long arg3 ;
  int arg4 ;
  int val1 ;
  int ecode1 = 0 ;
  int res2 ;
  long val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  int result;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Socket_readBuffer" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  res2 = SWIG_ConvertPtr(swig_obj[1],SWIG_as_voidptrptr(&arg2), 0, 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Socket_readBuffer" "', argument " "2"" of type '" "void *""'"); 
  }
  ecode3 = SWIG_AsVal_long(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Socket_readBuffer" "', argument " "3"" of type '" "long""'");
  } 
  arg3 = static_cast< long >(val3);
  ecode4 = SWIG_AsVal_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Socket_readBuffer" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  result = (int)stk::Socket::readBuffer(arg1,arg2,arg3,arg4);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Socket_readBuffer(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Socket_readBuffer", 0, 4, argv))) SWIG_fail;
  --argc;
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Socket, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *ptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &ptr, 0, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_long(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Socket_readBuffer__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  if (argc == 4) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Socket, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *ptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &ptr, 0, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_long(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_Socket_readBuffer__SWIG_0(self, argc, argv);
          }
        }
      }
    }
  }
  if (argc == 4) {
    int _v = 0;
    {
      int res = SWIG_AsVal_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      void *ptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &ptr, 0, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_long(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_Socket_readBuffer__SWIG_2(self, argc, argv);
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Socket_readBuffer'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::Socket::readBuffer(void *,long,int)\n"
    "    stk::Socket::readBuffer(void *,long)\n"
    "    stk::Socket::readBuffer(int,void *,long,int)\n");
  return 0;
}


SWIGINTERN PyObject *Socket_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_stk__Socket, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_TcpClient__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  int arg1 ;
  std::string arg2 ;
  int val1 ;
  int ecode1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  stk::TcpClient *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_TcpClient" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  {
    res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__string,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_TcpClient" "', argument " "2"" of type '" "std::string""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_TcpClient" "', argument " "2"" of type '" "std::string""'");
    } else {
      std::string * temp = reinterpret_cast< std::string * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (stk::TcpClient *)new stk::TcpClient(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__TcpClient, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_TcpClient__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  int arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  stk::TcpClient *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_TcpClient" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  result = (stk::TcpClient *)new stk::TcpClient(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__TcpClient, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_TcpClient(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_TcpClient", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    {
      int res = SWIG_AsVal_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_TcpClient__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    {
      int res = SWIG_AsVal_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__string, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_TcpClient__SWIG_0(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_TcpClient'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::TcpClient::TcpClient(int,std::string)\n"
    "    stk::TcpClient::TcpClient(int)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_TcpClient(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::TcpClient *arg1 = (stk::TcpClient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__TcpClient, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_TcpClient" "', argument " "1"" of type '" "stk::TcpClient *""'"); 
  }
  arg1 = reinterpret_cast< stk::TcpClient * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TcpClient_connect__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::TcpClient *arg1 = (stk::TcpClient *) 0 ;
  int arg2 ;
  std::string arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  int result;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__TcpClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TcpClient_connect" "', argument " "1"" of type '" "stk::TcpClient *""'"); 
  }
  arg1 = reinterpret_cast< stk::TcpClient * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "TcpClient_connect" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_std__string,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "TcpClient_connect" "', argument " "3"" of type '" "std::string""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TcpClient_connect" "', argument " "3"" of type '" "std::string""'");
    } else {
      std::string * temp = reinterpret_cast< std::string * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  result = (int)(arg1)->connect(arg2,arg3);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TcpClient_connect__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::TcpClient *arg1 = (stk::TcpClient *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__TcpClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TcpClient_connect" "', argument " "1"" of type '" "stk::TcpClient *""'"); 
  }
  arg1 = reinterpret_cast< stk::TcpClient * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "TcpClient_connect" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  result = (int)(arg1)->connect(arg2);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TcpClient_connect(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "TcpClient_connect", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__TcpClient, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_TcpClient_connect__SWIG_1(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__TcpClient, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_std__string, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_TcpClient_connect__SWIG_0(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'TcpClient_connect'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::TcpClient::connect(int,std::string)\n"
    "    stk::TcpClient::connect(int)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_TcpClient_writeBuffer__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::TcpClient *arg1 = (stk::TcpClient *) 0 ;
  void *arg2 = (void *) 0 ;
  long arg3 ;
  int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  long val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  int result;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__TcpClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TcpClient_writeBuffer" "', argument " "1"" of type '" "stk::TcpClient *""'"); 
  }
  arg1 = reinterpret_cast< stk::TcpClient * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1],SWIG_as_voidptrptr(&arg2), 0, 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TcpClient_writeBuffer" "', argument " "2"" of type '" "void const *""'"); 
  }
  ecode3 = SWIG_AsVal_long(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "TcpClient_writeBuffer" "', argument " "3"" of type '" "long""'");
  } 
  arg3 = static_cast< long >(val3);
  ecode4 = SWIG_AsVal_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "TcpClient_writeBuffer" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  result = (int)(arg1)->writeBuffer((void const *)arg2,arg3,arg4);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TcpClient_writeBuffer__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::TcpClient *arg1 = (stk::TcpClient *) 0 ;
  void *arg2 = (void *) 0 ;
  long arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  long val3 ;
  int ecode3 = 0 ;
  int result;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__TcpClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TcpClient_writeBuffer" "', argument " "1"" of type '" "stk::TcpClient *""'"); 
  }
  arg1 = reinterpret_cast< stk::TcpClient * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1],SWIG_as_voidptrptr(&arg2), 0, 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TcpClient_writeBuffer" "', argument " "2"" of type '" "void const *""'"); 
  }
  ecode3 = SWIG_AsVal_long(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "TcpClient_writeBuffer" "', argument " "3"" of type '" "long""'");
  } 
  arg3 = static_cast< long >(val3);
  result = (int)(arg1)->writeBuffer((void const *)arg2,arg3);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TcpClient_writeBuffer(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "TcpClient_writeBuffer", 0, 4, argv))) SWIG_fail;
  --argc;
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__TcpClient, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *ptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &ptr, 0, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_long(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_TcpClient_writeBuffer__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  if (argc == 4) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__TcpClient, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *ptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &ptr, 0, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_long(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_TcpClient_writeBuffer__SWIG_0(self, argc, argv);
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'TcpClient_writeBuffer'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::TcpClient::writeBuffer(void const *,long,int)\n"
    "    stk::TcpClient::writeBuffer(void const *,long)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_TcpClient_readBuffer__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::TcpClient *arg1 = (stk::TcpClient *) 0 ;
  void *arg2 = (void *) 0 ;
  long arg3 ;
  int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  long val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  int result;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__TcpClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TcpClient_readBuffer" "', argument " "1"" of type '" "stk::TcpClient *""'"); 
  }
  arg1 = reinterpret_cast< stk::TcpClient * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1],SWIG_as_voidptrptr(&arg2), 0, 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TcpClient_readBuffer" "', argument " "2"" of type '" "void *""'"); 
  }
  ecode3 = SWIG_AsVal_long(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "TcpClient_readBuffer" "', argument " "3"" of type '" "long""'");
  } 
  arg3 = static_cast< long >(val3);
  ecode4 = SWIG_AsVal_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "TcpClient_readBuffer" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  result = (int)(arg1)->readBuffer(arg2,arg3,arg4);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TcpClient_readBuffer__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::TcpClient *arg1 = (stk::TcpClient *) 0 ;
  void *arg2 = (void *) 0 ;
  long arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  long val3 ;
  int ecode3 = 0 ;
  int result;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__TcpClient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TcpClient_readBuffer" "', argument " "1"" of type '" "stk::TcpClient *""'"); 
  }
  arg1 = reinterpret_cast< stk::TcpClient * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1],SWIG_as_voidptrptr(&arg2), 0, 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TcpClient_readBuffer" "', argument " "2"" of type '" "void *""'"); 
  }
  ecode3 = SWIG_AsVal_long(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "TcpClient_readBuffer" "', argument " "3"" of type '" "long""'");
  } 
  arg3 = static_cast< long >(val3);
  result = (int)(arg1)->readBuffer(arg2,arg3);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TcpClient_readBuffer(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "TcpClient_readBuffer", 0, 4, argv))) SWIG_fail;
  --argc;
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__TcpClient, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *ptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &ptr, 0, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_long(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_TcpClient_readBuffer__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  if (argc == 4) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__TcpClient, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *ptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &ptr, 0, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_long(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_TcpClient_readBuffer__SWIG_0(self, argc, argv);
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'TcpClient_readBuffer'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::TcpClient::readBuffer(void *,long,int)\n"
    "    stk::TcpClient::readBuffer(void *,long)\n");
  return 0;
}


SWIGINTERN PyObject *TcpClient_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_stk__TcpClient, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *TcpClient_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_TcpServer__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  int arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  stk::TcpServer *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_TcpServer" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  result = (stk::TcpServer *)new stk::TcpServer(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__TcpServer, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_TcpServer__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  stk::TcpServer *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (stk::TcpServer *)new stk::TcpServer();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__TcpServer, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_TcpServer(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_TcpServer", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_TcpServer__SWIG_1(self, argc, argv);
  }
  if (argc == 1) {
    int _v = 0;
    {
      int res = SWIG_AsVal_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_TcpServer__SWIG_0(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_TcpServer'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::TcpServer::TcpServer(int)\n"
    "    stk::TcpServer::TcpServer()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_TcpServer(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::TcpServer *arg1 = (stk::TcpServer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__TcpServer, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_TcpServer" "', argument " "1"" of type '" "stk::TcpServer *""'"); 
  }
  arg1 = reinterpret_cast< stk::TcpServer * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TcpServer_accept(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::TcpServer *arg1 = (stk::TcpServer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__TcpServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TcpServer_accept" "', argument " "1"" of type '" "stk::TcpServer *""'"); 
  }
  arg1 = reinterpret_cast< stk::TcpServer * >(argp1);
  result = (int)(arg1)->accept();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TcpServer_writeBuffer__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::TcpServer *arg1 = (stk::TcpServer *) 0 ;
  void *arg2 = (void *) 0 ;
  long arg3 ;
  int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  long val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  int result;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__TcpServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TcpServer_writeBuffer" "', argument " "1"" of type '" "stk::TcpServer *""'"); 
  }
  arg1 = reinterpret_cast< stk::TcpServer * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1],SWIG_as_voidptrptr(&arg2), 0, 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TcpServer_writeBuffer" "', argument " "2"" of type '" "void const *""'"); 
  }
  ecode3 = SWIG_AsVal_long(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "TcpServer_writeBuffer" "', argument " "3"" of type '" "long""'");
  } 
  arg3 = static_cast< long >(val3);
  ecode4 = SWIG_AsVal_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "TcpServer_writeBuffer" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  result = (int)(arg1)->writeBuffer((void const *)arg2,arg3,arg4);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TcpServer_writeBuffer__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::TcpServer *arg1 = (stk::TcpServer *) 0 ;
  void *arg2 = (void *) 0 ;
  long arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  long val3 ;
  int ecode3 = 0 ;
  int result;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__TcpServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TcpServer_writeBuffer" "', argument " "1"" of type '" "stk::TcpServer *""'"); 
  }
  arg1 = reinterpret_cast< stk::TcpServer * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1],SWIG_as_voidptrptr(&arg2), 0, 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TcpServer_writeBuffer" "', argument " "2"" of type '" "void const *""'"); 
  }
  ecode3 = SWIG_AsVal_long(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "TcpServer_writeBuffer" "', argument " "3"" of type '" "long""'");
  } 
  arg3 = static_cast< long >(val3);
  result = (int)(arg1)->writeBuffer((void const *)arg2,arg3);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TcpServer_writeBuffer(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "TcpServer_writeBuffer", 0, 4, argv))) SWIG_fail;
  --argc;
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__TcpServer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *ptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &ptr, 0, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_long(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_TcpServer_writeBuffer__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  if (argc == 4) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__TcpServer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *ptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &ptr, 0, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_long(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_TcpServer_writeBuffer__SWIG_0(self, argc, argv);
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'TcpServer_writeBuffer'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::TcpServer::writeBuffer(void const *,long,int)\n"
    "    stk::TcpServer::writeBuffer(void const *,long)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_TcpServer_readBuffer__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::TcpServer *arg1 = (stk::TcpServer *) 0 ;
  void *arg2 = (void *) 0 ;
  long arg3 ;
  int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  long val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  int result;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__TcpServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TcpServer_readBuffer" "', argument " "1"" of type '" "stk::TcpServer *""'"); 
  }
  arg1 = reinterpret_cast< stk::TcpServer * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1],SWIG_as_voidptrptr(&arg2), 0, 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TcpServer_readBuffer" "', argument " "2"" of type '" "void *""'"); 
  }
  ecode3 = SWIG_AsVal_long(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "TcpServer_readBuffer" "', argument " "3"" of type '" "long""'");
  } 
  arg3 = static_cast< long >(val3);
  ecode4 = SWIG_AsVal_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "TcpServer_readBuffer" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  result = (int)(arg1)->readBuffer(arg2,arg3,arg4);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TcpServer_readBuffer__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::TcpServer *arg1 = (stk::TcpServer *) 0 ;
  void *arg2 = (void *) 0 ;
  long arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  long val3 ;
  int ecode3 = 0 ;
  int result;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__TcpServer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TcpServer_readBuffer" "', argument " "1"" of type '" "stk::TcpServer *""'"); 
  }
  arg1 = reinterpret_cast< stk::TcpServer * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1],SWIG_as_voidptrptr(&arg2), 0, 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TcpServer_readBuffer" "', argument " "2"" of type '" "void *""'"); 
  }
  ecode3 = SWIG_AsVal_long(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "TcpServer_readBuffer" "', argument " "3"" of type '" "long""'");
  } 
  arg3 = static_cast< long >(val3);
  result = (int)(arg1)->readBuffer(arg2,arg3);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TcpServer_readBuffer(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "TcpServer_readBuffer", 0, 4, argv))) SWIG_fail;
  --argc;
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__TcpServer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *ptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &ptr, 0, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_long(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_TcpServer_readBuffer__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  if (argc == 4) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__TcpServer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *ptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &ptr, 0, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_long(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_TcpServer_readBuffer__SWIG_0(self, argc, argv);
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'TcpServer_readBuffer'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::TcpServer::readBuffer(void *,long,int)\n"
    "    stk::TcpServer::readBuffer(void *,long)\n");
  return 0;
}


SWIGINTERN PyObject *TcpServer_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_stk__TcpServer, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *TcpServer_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_UdpSocket__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  int arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  stk::UdpSocket *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_UdpSocket" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  result = (stk::UdpSocket *)new stk::UdpSocket(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__UdpSocket, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_UdpSocket__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  stk::UdpSocket *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (stk::UdpSocket *)new stk::UdpSocket();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__UdpSocket, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_UdpSocket(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_UdpSocket", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_UdpSocket__SWIG_1(self, argc, argv);
  }
  if (argc == 1) {
    int _v = 0;
    {
      int res = SWIG_AsVal_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_UdpSocket__SWIG_0(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_UdpSocket'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::UdpSocket::UdpSocket(int)\n"
    "    stk::UdpSocket::UdpSocket()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_UdpSocket(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::UdpSocket *arg1 = (stk::UdpSocket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__UdpSocket, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_UdpSocket" "', argument " "1"" of type '" "stk::UdpSocket *""'"); 
  }
  arg1 = reinterpret_cast< stk::UdpSocket * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_UdpSocket_setDestination__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::UdpSocket *arg1 = (stk::UdpSocket *) 0 ;
  int arg2 ;
  std::string arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__UdpSocket, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "UdpSocket_setDestination" "', argument " "1"" of type '" "stk::UdpSocket *""'"); 
  }
  arg1 = reinterpret_cast< stk::UdpSocket * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "UdpSocket_setDestination" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_std__string,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "UdpSocket_setDestination" "', argument " "3"" of type '" "std::string""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "UdpSocket_setDestination" "', argument " "3"" of type '" "std::string""'");
    } else {
      std::string * temp = reinterpret_cast< std::string * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  (arg1)->setDestination(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_UdpSocket_setDestination__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::UdpSocket *arg1 = (stk::UdpSocket *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__UdpSocket, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "UdpSocket_setDestination" "', argument " "1"" of type '" "stk::UdpSocket *""'"); 
  }
  arg1 = reinterpret_cast< stk::UdpSocket * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "UdpSocket_setDestination" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->setDestination(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_UdpSocket_setDestination__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::UdpSocket *arg1 = (stk::UdpSocket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__UdpSocket, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "UdpSocket_setDestination" "', argument " "1"" of type '" "stk::UdpSocket *""'"); 
  }
  arg1 = reinterpret_cast< stk::UdpSocket * >(argp1);
  (arg1)->setDestination();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_UdpSocket_setDestination(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "UdpSocket_setDestination", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__UdpSocket, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_UdpSocket_setDestination__SWIG_2(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__UdpSocket, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_UdpSocket_setDestination__SWIG_1(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__UdpSocket, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_std__string, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_UdpSocket_setDestination__SWIG_0(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'UdpSocket_setDestination'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::UdpSocket::setDestination(int,std::string)\n"
    "    stk::UdpSocket::setDestination(int)\n"
    "    stk::UdpSocket::setDestination()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_UdpSocket_writeBuffer__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::UdpSocket *arg1 = (stk::UdpSocket *) 0 ;
  void *arg2 = (void *) 0 ;
  long arg3 ;
  int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  long val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  int result;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__UdpSocket, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "UdpSocket_writeBuffer" "', argument " "1"" of type '" "stk::UdpSocket *""'"); 
  }
  arg1 = reinterpret_cast< stk::UdpSocket * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1],SWIG_as_voidptrptr(&arg2), 0, 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "UdpSocket_writeBuffer" "', argument " "2"" of type '" "void const *""'"); 
  }
  ecode3 = SWIG_AsVal_long(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "UdpSocket_writeBuffer" "', argument " "3"" of type '" "long""'");
  } 
  arg3 = static_cast< long >(val3);
  ecode4 = SWIG_AsVal_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "UdpSocket_writeBuffer" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  result = (int)(arg1)->writeBuffer((void const *)arg2,arg3,arg4);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_UdpSocket_writeBuffer__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::UdpSocket *arg1 = (stk::UdpSocket *) 0 ;
  void *arg2 = (void *) 0 ;
  long arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  long val3 ;
  int ecode3 = 0 ;
  int result;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__UdpSocket, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "UdpSocket_writeBuffer" "', argument " "1"" of type '" "stk::UdpSocket *""'"); 
  }
  arg1 = reinterpret_cast< stk::UdpSocket * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1],SWIG_as_voidptrptr(&arg2), 0, 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "UdpSocket_writeBuffer" "', argument " "2"" of type '" "void const *""'"); 
  }
  ecode3 = SWIG_AsVal_long(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "UdpSocket_writeBuffer" "', argument " "3"" of type '" "long""'");
  } 
  arg3 = static_cast< long >(val3);
  result = (int)(arg1)->writeBuffer((void const *)arg2,arg3);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_UdpSocket_writeBuffer(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "UdpSocket_writeBuffer", 0, 4, argv))) SWIG_fail;
  --argc;
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__UdpSocket, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *ptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &ptr, 0, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_long(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_UdpSocket_writeBuffer__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  if (argc == 4) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__UdpSocket, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *ptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &ptr, 0, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_long(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_UdpSocket_writeBuffer__SWIG_0(self, argc, argv);
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'UdpSocket_writeBuffer'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::UdpSocket::writeBuffer(void const *,long,int)\n"
    "    stk::UdpSocket::writeBuffer(void const *,long)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_UdpSocket_readBuffer__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::UdpSocket *arg1 = (stk::UdpSocket *) 0 ;
  void *arg2 = (void *) 0 ;
  long arg3 ;
  int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  long val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  int result;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__UdpSocket, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "UdpSocket_readBuffer" "', argument " "1"" of type '" "stk::UdpSocket *""'"); 
  }
  arg1 = reinterpret_cast< stk::UdpSocket * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1],SWIG_as_voidptrptr(&arg2), 0, 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "UdpSocket_readBuffer" "', argument " "2"" of type '" "void *""'"); 
  }
  ecode3 = SWIG_AsVal_long(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "UdpSocket_readBuffer" "', argument " "3"" of type '" "long""'");
  } 
  arg3 = static_cast< long >(val3);
  ecode4 = SWIG_AsVal_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "UdpSocket_readBuffer" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  result = (int)(arg1)->readBuffer(arg2,arg3,arg4);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_UdpSocket_readBuffer__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::UdpSocket *arg1 = (stk::UdpSocket *) 0 ;
  void *arg2 = (void *) 0 ;
  long arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  long val3 ;
  int ecode3 = 0 ;
  int result;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__UdpSocket, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "UdpSocket_readBuffer" "', argument " "1"" of type '" "stk::UdpSocket *""'"); 
  }
  arg1 = reinterpret_cast< stk::UdpSocket * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1],SWIG_as_voidptrptr(&arg2), 0, 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "UdpSocket_readBuffer" "', argument " "2"" of type '" "void *""'"); 
  }
  ecode3 = SWIG_AsVal_long(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "UdpSocket_readBuffer" "', argument " "3"" of type '" "long""'");
  } 
  arg3 = static_cast< long >(val3);
  result = (int)(arg1)->readBuffer(arg2,arg3);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_UdpSocket_readBuffer(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "UdpSocket_readBuffer", 0, 4, argv))) SWIG_fail;
  --argc;
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__UdpSocket, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *ptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &ptr, 0, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_long(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_UdpSocket_readBuffer__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  if (argc == 4) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__UdpSocket, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *ptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &ptr, 0, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_long(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_UdpSocket_readBuffer__SWIG_0(self, argc, argv);
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'UdpSocket_readBuffer'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::UdpSocket::readBuffer(void *,long,int)\n"
    "    stk::UdpSocket::readBuffer(void *,long)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_UdpSocket_writeBufferTo__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::UdpSocket *arg1 = (stk::UdpSocket *) 0 ;
  void *arg2 = (void *) 0 ;
  long arg3 ;
  int arg4 ;
  std::string arg5 ;
  int arg6 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  long val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  void *argp5 ;
  int res5 = 0 ;
  int val6 ;
  int ecode6 = 0 ;
  int result;
  
  if ((nobjs < 6) || (nobjs > 6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__UdpSocket, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "UdpSocket_writeBufferTo" "', argument " "1"" of type '" "stk::UdpSocket *""'"); 
  }
  arg1 = reinterpret_cast< stk::UdpSocket * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1],SWIG_as_voidptrptr(&arg2), 0, 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "UdpSocket_writeBufferTo" "', argument " "2"" of type '" "void const *""'"); 
  }
  ecode3 = SWIG_AsVal_long(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "UdpSocket_writeBufferTo" "', argument " "3"" of type '" "long""'");
  } 
  arg3 = static_cast< long >(val3);
  ecode4 = SWIG_AsVal_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "UdpSocket_writeBufferTo" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  {
    res5 = SWIG_ConvertPtr(swig_obj[4], &argp5, SWIGTYPE_p_std__string,  0  | 0);
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "UdpSocket_writeBufferTo" "', argument " "5"" of type '" "std::string""'"); 
    }  
    if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "UdpSocket_writeBufferTo" "', argument " "5"" of type '" "std::string""'");
    } else {
      std::string * temp = reinterpret_cast< std::string * >(argp5);
      arg5 = *temp;
      if (SWIG_IsNewObj(res5)) delete temp;
    }
  }
  ecode6 = SWIG_AsVal_int(swig_obj[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "UdpSocket_writeBufferTo" "', argument " "6"" of type '" "int""'");
  } 
  arg6 = static_cast< int >(val6);
  result = (int)(arg1)->writeBufferTo((void const *)arg2,arg3,arg4,arg5,arg6);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_UdpSocket_writeBufferTo__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::UdpSocket *arg1 = (stk::UdpSocket *) 0 ;
  void *arg2 = (void *) 0 ;
  long arg3 ;
  int arg4 ;
  std::string arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  long val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  void *argp5 ;
  int res5 = 0 ;
  int result;
  
  if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__UdpSocket, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "UdpSocket_writeBufferTo" "', argument " "1"" of type '" "stk::UdpSocket *""'"); 
  }
  arg1 = reinterpret_cast< stk::UdpSocket * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1],SWIG_as_voidptrptr(&arg2), 0, 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "UdpSocket_writeBufferTo" "', argument " "2"" of type '" "void const *""'"); 
  }
  ecode3 = SWIG_AsVal_long(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "UdpSocket_writeBufferTo" "', argument " "3"" of type '" "long""'");
  } 
  arg3 = static_cast< long >(val3);
  ecode4 = SWIG_AsVal_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "UdpSocket_writeBufferTo" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  {
    res5 = SWIG_ConvertPtr(swig_obj[4], &argp5, SWIGTYPE_p_std__string,  0  | 0);
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "UdpSocket_writeBufferTo" "', argument " "5"" of type '" "std::string""'"); 
    }  
    if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "UdpSocket_writeBufferTo" "', argument " "5"" of type '" "std::string""'");
    } else {
      std::string * temp = reinterpret_cast< std::string * >(argp5);
      arg5 = *temp;
      if (SWIG_IsNewObj(res5)) delete temp;
    }
  }
  result = (int)(arg1)->writeBufferTo((void const *)arg2,arg3,arg4,arg5);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_UdpSocket_writeBufferTo__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::UdpSocket *arg1 = (stk::UdpSocket *) 0 ;
  void *arg2 = (void *) 0 ;
  long arg3 ;
  int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  long val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  int result;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__UdpSocket, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "UdpSocket_writeBufferTo" "', argument " "1"" of type '" "stk::UdpSocket *""'"); 
  }
  arg1 = reinterpret_cast< stk::UdpSocket * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1],SWIG_as_voidptrptr(&arg2), 0, 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "UdpSocket_writeBufferTo" "', argument " "2"" of type '" "void const *""'"); 
  }
  ecode3 = SWIG_AsVal_long(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "UdpSocket_writeBufferTo" "', argument " "3"" of type '" "long""'");
  } 
  arg3 = static_cast< long >(val3);
  ecode4 = SWIG_AsVal_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "UdpSocket_writeBufferTo" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  result = (int)(arg1)->writeBufferTo((void const *)arg2,arg3,arg4);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_UdpSocket_writeBufferTo(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[7] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "UdpSocket_writeBufferTo", 0, 6, argv))) SWIG_fail;
  --argc;
  if (argc == 4) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__UdpSocket, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *ptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &ptr, 0, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_long(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_UdpSocket_writeBufferTo__SWIG_2(self, argc, argv);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__UdpSocket, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *ptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &ptr, 0, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_long(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            int res = SWIG_ConvertPtr(argv[4], 0, SWIGTYPE_p_std__string, SWIG_POINTER_NO_NULL | 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_UdpSocket_writeBufferTo__SWIG_1(self, argc, argv);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__UdpSocket, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *ptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &ptr, 0, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_long(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            int res = SWIG_ConvertPtr(argv[4], 0, SWIGTYPE_p_std__string, SWIG_POINTER_NO_NULL | 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              {
                int res = SWIG_AsVal_int(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                return _wrap_UdpSocket_writeBufferTo__SWIG_0(self, argc, argv);
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'UdpSocket_writeBufferTo'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::UdpSocket::writeBufferTo(void const *,long,int,std::string,int)\n"
    "    stk::UdpSocket::writeBufferTo(void const *,long,int,std::string)\n"
    "    stk::UdpSocket::writeBufferTo(void const *,long,int)\n");
  return 0;
}


SWIGINTERN PyObject *UdpSocket_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_stk__UdpSocket, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *UdpSocket_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_Mutex(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Mutex *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_Mutex", 0, 0, 0)) SWIG_fail;
  result = (stk::Mutex *)new stk::Mutex();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__Mutex, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Mutex(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Mutex *arg1 = (stk::Mutex *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Mutex, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Mutex" "', argument " "1"" of type '" "stk::Mutex *""'"); 
  }
  arg1 = reinterpret_cast< stk::Mutex * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Mutex_lock(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Mutex *arg1 = (stk::Mutex *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Mutex, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Mutex_lock" "', argument " "1"" of type '" "stk::Mutex *""'"); 
  }
  arg1 = reinterpret_cast< stk::Mutex * >(argp1);
  (arg1)->lock();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Mutex_unlock(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Mutex *arg1 = (stk::Mutex *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Mutex, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Mutex_unlock" "', argument " "1"" of type '" "stk::Mutex *""'"); 
  }
  arg1 = reinterpret_cast< stk::Mutex * >(argp1);
  (arg1)->unlock();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Mutex_wait(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Mutex *arg1 = (stk::Mutex *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Mutex, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Mutex_wait" "', argument " "1"" of type '" "stk::Mutex *""'"); 
  }
  arg1 = reinterpret_cast< stk::Mutex * >(argp1);
  (arg1)->wait();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Mutex_signal(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Mutex *arg1 = (stk::Mutex *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Mutex, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Mutex_signal" "', argument " "1"" of type '" "stk::Mutex *""'"); 
  }
  arg1 = reinterpret_cast< stk::Mutex * >(argp1);
  (arg1)->signal();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Mutex_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_stk__Mutex, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *Mutex_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_Thread(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Thread *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_Thread", 0, 0, 0)) SWIG_fail;
  result = (stk::Thread *)new stk::Thread();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__Thread, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Thread(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Thread *arg1 = (stk::Thread *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Thread, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Thread" "', argument " "1"" of type '" "stk::Thread *""'"); 
  }
  arg1 = reinterpret_cast< stk::Thread * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Thread_start__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Thread *arg1 = (stk::Thread *) 0 ;
  THREAD_FUNCTION arg2 ;
  void *arg3 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  int res3 ;
  bool result;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Thread, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Thread_start" "', argument " "1"" of type '" "stk::Thread *""'"); 
  }
  arg1 = reinterpret_cast< stk::Thread * >(argp1);
  {
    res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_THREAD_FUNCTION,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Thread_start" "', argument " "2"" of type '" "THREAD_FUNCTION""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Thread_start" "', argument " "2"" of type '" "THREAD_FUNCTION""'");
    } else {
      THREAD_FUNCTION * temp = reinterpret_cast< THREAD_FUNCTION * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(swig_obj[2],SWIG_as_voidptrptr(&arg3), 0, 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Thread_start" "', argument " "3"" of type '" "void *""'"); 
  }
  result = (bool)(arg1)->start(arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Thread_start__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Thread *arg1 = (stk::Thread *) 0 ;
  THREAD_FUNCTION arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  bool result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Thread, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Thread_start" "', argument " "1"" of type '" "stk::Thread *""'"); 
  }
  arg1 = reinterpret_cast< stk::Thread * >(argp1);
  {
    res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_THREAD_FUNCTION,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Thread_start" "', argument " "2"" of type '" "THREAD_FUNCTION""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Thread_start" "', argument " "2"" of type '" "THREAD_FUNCTION""'");
    } else {
      THREAD_FUNCTION * temp = reinterpret_cast< THREAD_FUNCTION * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (bool)(arg1)->start(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Thread_start(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Thread_start", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Thread, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_THREAD_FUNCTION, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Thread_start__SWIG_1(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Thread, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_THREAD_FUNCTION, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *ptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &ptr, 0, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_Thread_start__SWIG_0(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Thread_start'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::Thread::start(THREAD_FUNCTION,void *)\n"
    "    stk::Thread::start(THREAD_FUNCTION)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Thread_cancel(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Thread *arg1 = (stk::Thread *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Thread, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Thread_cancel" "', argument " "1"" of type '" "stk::Thread *""'"); 
  }
  arg1 = reinterpret_cast< stk::Thread * >(argp1);
  result = (bool)(arg1)->cancel();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Thread_wait(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Thread *arg1 = (stk::Thread *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Thread, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Thread_wait" "', argument " "1"" of type '" "stk::Thread *""'"); 
  }
  arg1 = reinterpret_cast< stk::Thread * >(argp1);
  result = (bool)(arg1)->wait();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Thread_testCancel(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Thread *arg1 = (stk::Thread *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Thread, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Thread_testCancel" "', argument " "1"" of type '" "stk::Thread *""'"); 
  }
  arg1 = reinterpret_cast< stk::Thread * >(argp1);
  (arg1)->testCancel();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Thread_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_stk__Thread, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *Thread_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_InetWvIn__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  unsigned long arg1 ;
  unsigned int arg2 ;
  unsigned long val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  stk::InetWvIn *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_InetWvIn" "', argument " "1"" of type '" "unsigned long""'");
  } 
  arg1 = static_cast< unsigned long >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_InetWvIn" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (stk::InetWvIn *)new stk::InetWvIn(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__InetWvIn, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_InetWvIn__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  unsigned long arg1 ;
  unsigned long val1 ;
  int ecode1 = 0 ;
  stk::InetWvIn *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_InetWvIn" "', argument " "1"" of type '" "unsigned long""'");
  } 
  arg1 = static_cast< unsigned long >(val1);
  result = (stk::InetWvIn *)new stk::InetWvIn(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__InetWvIn, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_InetWvIn__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  stk::InetWvIn *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (stk::InetWvIn *)new stk::InetWvIn();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__InetWvIn, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_InetWvIn(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_InetWvIn", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_InetWvIn__SWIG_2(self, argc, argv);
  }
  if (argc == 1) {
    int _v = 0;
    {
      int res = SWIG_AsVal_unsigned_SS_long(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_InetWvIn__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    {
      int res = SWIG_AsVal_unsigned_SS_long(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_InetWvIn__SWIG_0(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_InetWvIn'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::InetWvIn::InetWvIn(unsigned long,unsigned int)\n"
    "    stk::InetWvIn::InetWvIn(unsigned long)\n"
    "    stk::InetWvIn::InetWvIn()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_InetWvIn(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::InetWvIn *arg1 = (stk::InetWvIn *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__InetWvIn, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_InetWvIn" "', argument " "1"" of type '" "stk::InetWvIn *""'"); 
  }
  arg1 = reinterpret_cast< stk::InetWvIn * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_InetWvIn_listen__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::InetWvIn *arg1 = (stk::InetWvIn *) 0 ;
  int arg2 ;
  unsigned int arg3 ;
  stk::Stk::StkFormat arg4 ;
  stk::Socket::ProtocolType arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  unsigned long val4 ;
  int ecode4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  
  if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__InetWvIn, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "InetWvIn_listen" "', argument " "1"" of type '" "stk::InetWvIn *""'"); 
  }
  arg1 = reinterpret_cast< stk::InetWvIn * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "InetWvIn_listen" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "InetWvIn_listen" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  ecode4 = SWIG_AsVal_unsigned_SS_long(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "InetWvIn_listen" "', argument " "4"" of type '" "stk::Stk::StkFormat""'");
  } 
  arg4 = static_cast< stk::Stk::StkFormat >(val4);
  ecode5 = SWIG_AsVal_int(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "InetWvIn_listen" "', argument " "5"" of type '" "stk::Socket::ProtocolType""'");
  } 
  arg5 = static_cast< stk::Socket::ProtocolType >(val5);
  (arg1)->listen(arg2,arg3,arg4,arg5);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_InetWvIn_listen__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::InetWvIn *arg1 = (stk::InetWvIn *) 0 ;
  int arg2 ;
  unsigned int arg3 ;
  stk::Stk::StkFormat arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  unsigned long val4 ;
  int ecode4 = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__InetWvIn, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "InetWvIn_listen" "', argument " "1"" of type '" "stk::InetWvIn *""'"); 
  }
  arg1 = reinterpret_cast< stk::InetWvIn * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "InetWvIn_listen" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "InetWvIn_listen" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  ecode4 = SWIG_AsVal_unsigned_SS_long(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "InetWvIn_listen" "', argument " "4"" of type '" "stk::Stk::StkFormat""'");
  } 
  arg4 = static_cast< stk::Stk::StkFormat >(val4);
  (arg1)->listen(arg2,arg3,arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_InetWvIn_listen__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::InetWvIn *arg1 = (stk::InetWvIn *) 0 ;
  int arg2 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__InetWvIn, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "InetWvIn_listen" "', argument " "1"" of type '" "stk::InetWvIn *""'"); 
  }
  arg1 = reinterpret_cast< stk::InetWvIn * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "InetWvIn_listen" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "InetWvIn_listen" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  (arg1)->listen(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_InetWvIn_listen__SWIG_3(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::InetWvIn *arg1 = (stk::InetWvIn *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__InetWvIn, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "InetWvIn_listen" "', argument " "1"" of type '" "stk::InetWvIn *""'"); 
  }
  arg1 = reinterpret_cast< stk::InetWvIn * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "InetWvIn_listen" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->listen(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_InetWvIn_listen__SWIG_4(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::InetWvIn *arg1 = (stk::InetWvIn *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__InetWvIn, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "InetWvIn_listen" "', argument " "1"" of type '" "stk::InetWvIn *""'"); 
  }
  arg1 = reinterpret_cast< stk::InetWvIn * >(argp1);
  (arg1)->listen();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_InetWvIn_listen(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[6] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "InetWvIn_listen", 0, 5, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__InetWvIn, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_InetWvIn_listen__SWIG_4(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__InetWvIn, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_InetWvIn_listen__SWIG_3(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__InetWvIn, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_InetWvIn_listen__SWIG_2(self, argc, argv);
        }
      }
    }
  }
  if (argc == 4) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__InetWvIn, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_unsigned_SS_long(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_InetWvIn_listen__SWIG_1(self, argc, argv);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__InetWvIn, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_unsigned_SS_long(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_int(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_InetWvIn_listen__SWIG_0(self, argc, argv);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'InetWvIn_listen'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::InetWvIn::listen(int,unsigned int,stk::Stk::StkFormat,stk::Socket::ProtocolType)\n"
    "    stk::InetWvIn::listen(int,unsigned int,stk::Stk::StkFormat)\n"
    "    stk::InetWvIn::listen(int,unsigned int)\n"
    "    stk::InetWvIn::listen(int)\n"
    "    stk::InetWvIn::listen()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_InetWvIn_isConnected(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::InetWvIn *arg1 = (stk::InetWvIn *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__InetWvIn, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "InetWvIn_isConnected" "', argument " "1"" of type '" "stk::InetWvIn *""'"); 
  }
  arg1 = reinterpret_cast< stk::InetWvIn * >(argp1);
  result = (bool)(arg1)->isConnected();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_InetWvIn_lastOut__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::InetWvIn *arg1 = (stk::InetWvIn *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__InetWvIn, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "InetWvIn_lastOut" "', argument " "1"" of type '" "stk::InetWvIn *""'"); 
  }
  arg1 = reinterpret_cast< stk::InetWvIn * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "InetWvIn_lastOut" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (stk::StkFloat)(arg1)->lastOut(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_InetWvIn_lastOut__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::InetWvIn *arg1 = (stk::InetWvIn *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__InetWvIn, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "InetWvIn_lastOut" "', argument " "1"" of type '" "stk::InetWvIn *""'"); 
  }
  arg1 = reinterpret_cast< stk::InetWvIn * >(argp1);
  result = (stk::StkFloat)(arg1)->lastOut();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_InetWvIn_lastOut(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "InetWvIn_lastOut", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__InetWvIn, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_InetWvIn_lastOut__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__InetWvIn, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_InetWvIn_lastOut__SWIG_0(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'InetWvIn_lastOut'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::InetWvIn::lastOut(unsigned int)\n"
    "    stk::InetWvIn::lastOut()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_InetWvIn_tick__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::InetWvIn *arg1 = (stk::InetWvIn *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__InetWvIn, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "InetWvIn_tick" "', argument " "1"" of type '" "stk::InetWvIn *""'"); 
  }
  arg1 = reinterpret_cast< stk::InetWvIn * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "InetWvIn_tick" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (stk::StkFloat)(arg1)->tick(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_InetWvIn_tick__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::InetWvIn *arg1 = (stk::InetWvIn *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__InetWvIn, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "InetWvIn_tick" "', argument " "1"" of type '" "stk::InetWvIn *""'"); 
  }
  arg1 = reinterpret_cast< stk::InetWvIn * >(argp1);
  result = (stk::StkFloat)(arg1)->tick();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_InetWvIn_tick__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::InetWvIn *arg1 = (stk::InetWvIn *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__InetWvIn, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "InetWvIn_tick" "', argument " "1"" of type '" "stk::InetWvIn *""'"); 
  }
  arg1 = reinterpret_cast< stk::InetWvIn * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "InetWvIn_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "InetWvIn_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "InetWvIn_tick" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_InetWvIn_tick__SWIG_3(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::InetWvIn *arg1 = (stk::InetWvIn *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__InetWvIn, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "InetWvIn_tick" "', argument " "1"" of type '" "stk::InetWvIn *""'"); 
  }
  arg1 = reinterpret_cast< stk::InetWvIn * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "InetWvIn_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "InetWvIn_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_InetWvIn_tick(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "InetWvIn_tick", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__InetWvIn, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_InetWvIn_tick__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__InetWvIn, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_InetWvIn_tick__SWIG_3(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__InetWvIn, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_InetWvIn_tick__SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__InetWvIn, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_InetWvIn_tick__SWIG_2(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'InetWvIn_tick'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::InetWvIn::tick(unsigned int)\n"
    "    stk::InetWvIn::tick()\n"
    "    stk::InetWvIn::tick(stk::StkFrames &,unsigned int)\n"
    "    stk::InetWvIn::tick(stk::StkFrames &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_InetWvIn_receive(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::InetWvIn *arg1 = (stk::InetWvIn *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__InetWvIn, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "InetWvIn_receive" "', argument " "1"" of type '" "stk::InetWvIn *""'"); 
  }
  arg1 = reinterpret_cast< stk::InetWvIn * >(argp1);
  (arg1)->receive();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *InetWvIn_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_stk__InetWvIn, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *InetWvIn_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_InetWvOut__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  unsigned long arg1 ;
  unsigned long val1 ;
  int ecode1 = 0 ;
  stk::InetWvOut *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_InetWvOut" "', argument " "1"" of type '" "unsigned long""'");
  } 
  arg1 = static_cast< unsigned long >(val1);
  result = (stk::InetWvOut *)new stk::InetWvOut(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__InetWvOut, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_InetWvOut__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  stk::InetWvOut *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (stk::InetWvOut *)new stk::InetWvOut();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__InetWvOut, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_InetWvOut__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  int arg1 ;
  stk::Socket::ProtocolType arg2 ;
  std::string arg3 ;
  unsigned int arg4 ;
  stk::Stk::StkFormat arg5 ;
  unsigned long arg6 ;
  int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  unsigned long val5 ;
  int ecode5 = 0 ;
  unsigned long val6 ;
  int ecode6 = 0 ;
  stk::InetWvOut *result = 0 ;
  
  if ((nobjs < 6) || (nobjs > 6)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_InetWvOut" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_InetWvOut" "', argument " "2"" of type '" "stk::Socket::ProtocolType""'");
  } 
  arg2 = static_cast< stk::Socket::ProtocolType >(val2);
  {
    res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_std__string,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_InetWvOut" "', argument " "3"" of type '" "std::string""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_InetWvOut" "', argument " "3"" of type '" "std::string""'");
    } else {
      std::string * temp = reinterpret_cast< std::string * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  ecode4 = SWIG_AsVal_unsigned_SS_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_InetWvOut" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  ecode5 = SWIG_AsVal_unsigned_SS_long(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_InetWvOut" "', argument " "5"" of type '" "stk::Stk::StkFormat""'");
  } 
  arg5 = static_cast< stk::Stk::StkFormat >(val5);
  ecode6 = SWIG_AsVal_unsigned_SS_long(swig_obj[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_InetWvOut" "', argument " "6"" of type '" "unsigned long""'");
  } 
  arg6 = static_cast< unsigned long >(val6);
  result = (stk::InetWvOut *)new stk::InetWvOut(arg1,arg2,arg3,arg4,arg5,arg6);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__InetWvOut, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_InetWvOut__SWIG_3(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  int arg1 ;
  stk::Socket::ProtocolType arg2 ;
  std::string arg3 ;
  unsigned int arg4 ;
  stk::Stk::StkFormat arg5 ;
  int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  unsigned long val5 ;
  int ecode5 = 0 ;
  stk::InetWvOut *result = 0 ;
  
  if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_InetWvOut" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_InetWvOut" "', argument " "2"" of type '" "stk::Socket::ProtocolType""'");
  } 
  arg2 = static_cast< stk::Socket::ProtocolType >(val2);
  {
    res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_std__string,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_InetWvOut" "', argument " "3"" of type '" "std::string""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_InetWvOut" "', argument " "3"" of type '" "std::string""'");
    } else {
      std::string * temp = reinterpret_cast< std::string * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  ecode4 = SWIG_AsVal_unsigned_SS_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_InetWvOut" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  ecode5 = SWIG_AsVal_unsigned_SS_long(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_InetWvOut" "', argument " "5"" of type '" "stk::Stk::StkFormat""'");
  } 
  arg5 = static_cast< stk::Stk::StkFormat >(val5);
  result = (stk::InetWvOut *)new stk::InetWvOut(arg1,arg2,arg3,arg4,arg5);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__InetWvOut, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_InetWvOut__SWIG_4(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  int arg1 ;
  stk::Socket::ProtocolType arg2 ;
  std::string arg3 ;
  unsigned int arg4 ;
  int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  stk::InetWvOut *result = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_InetWvOut" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_InetWvOut" "', argument " "2"" of type '" "stk::Socket::ProtocolType""'");
  } 
  arg2 = static_cast< stk::Socket::ProtocolType >(val2);
  {
    res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_std__string,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_InetWvOut" "', argument " "3"" of type '" "std::string""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_InetWvOut" "', argument " "3"" of type '" "std::string""'");
    } else {
      std::string * temp = reinterpret_cast< std::string * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  ecode4 = SWIG_AsVal_unsigned_SS_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_InetWvOut" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  result = (stk::InetWvOut *)new stk::InetWvOut(arg1,arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__InetWvOut, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_InetWvOut__SWIG_5(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  int arg1 ;
  stk::Socket::ProtocolType arg2 ;
  std::string arg3 ;
  int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  stk::InetWvOut *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_InetWvOut" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_InetWvOut" "', argument " "2"" of type '" "stk::Socket::ProtocolType""'");
  } 
  arg2 = static_cast< stk::Socket::ProtocolType >(val2);
  {
    res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_std__string,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_InetWvOut" "', argument " "3"" of type '" "std::string""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_InetWvOut" "', argument " "3"" of type '" "std::string""'");
    } else {
      std::string * temp = reinterpret_cast< std::string * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  result = (stk::InetWvOut *)new stk::InetWvOut(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__InetWvOut, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_InetWvOut__SWIG_6(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  int arg1 ;
  stk::Socket::ProtocolType arg2 ;
  int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  stk::InetWvOut *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_InetWvOut" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_InetWvOut" "', argument " "2"" of type '" "stk::Socket::ProtocolType""'");
  } 
  arg2 = static_cast< stk::Socket::ProtocolType >(val2);
  result = (stk::InetWvOut *)new stk::InetWvOut(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__InetWvOut, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_InetWvOut__SWIG_7(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  int arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  stk::InetWvOut *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_InetWvOut" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  result = (stk::InetWvOut *)new stk::InetWvOut(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__InetWvOut, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_InetWvOut(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[7] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_InetWvOut", 0, 6, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_InetWvOut__SWIG_1(self, argc, argv);
  }
  if (argc == 1) {
    int _v = 0;
    {
      int res = SWIG_AsVal_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_InetWvOut__SWIG_7(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v = 0;
    {
      int res = SWIG_AsVal_unsigned_SS_long(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_InetWvOut__SWIG_0(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    {
      int res = SWIG_AsVal_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_InetWvOut__SWIG_6(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    {
      int res = SWIG_AsVal_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_std__string, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_InetWvOut__SWIG_5(self, argc, argv);
        }
      }
    }
  }
  if (argc == 4) {
    int _v = 0;
    {
      int res = SWIG_AsVal_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_std__string, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_new_InetWvOut__SWIG_4(self, argc, argv);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v = 0;
    {
      int res = SWIG_AsVal_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_std__string, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_unsigned_SS_long(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_new_InetWvOut__SWIG_3(self, argc, argv);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v = 0;
    {
      int res = SWIG_AsVal_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_std__string, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_unsigned_SS_long(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_unsigned_SS_long(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                return _wrap_new_InetWvOut__SWIG_2(self, argc, argv);
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_InetWvOut'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::InetWvOut::InetWvOut(unsigned long)\n"
    "    stk::InetWvOut::InetWvOut()\n"
    "    stk::InetWvOut::InetWvOut(int,stk::Socket::ProtocolType,std::string,unsigned int,stk::Stk::StkFormat,unsigned long)\n"
    "    stk::InetWvOut::InetWvOut(int,stk::Socket::ProtocolType,std::string,unsigned int,stk::Stk::StkFormat)\n"
    "    stk::InetWvOut::InetWvOut(int,stk::Socket::ProtocolType,std::string,unsigned int)\n"
    "    stk::InetWvOut::InetWvOut(int,stk::Socket::ProtocolType,std::string)\n"
    "    stk::InetWvOut::InetWvOut(int,stk::Socket::ProtocolType)\n"
    "    stk::InetWvOut::InetWvOut(int)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_InetWvOut(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::InetWvOut *arg1 = (stk::InetWvOut *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__InetWvOut, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_InetWvOut" "', argument " "1"" of type '" "stk::InetWvOut *""'"); 
  }
  arg1 = reinterpret_cast< stk::InetWvOut * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_InetWvOut_connect__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::InetWvOut *arg1 = (stk::InetWvOut *) 0 ;
  int arg2 ;
  stk::Socket::ProtocolType arg3 ;
  std::string arg4 ;
  unsigned int arg5 ;
  stk::Stk::StkFormat arg6 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  void *argp4 ;
  int res4 = 0 ;
  unsigned int val5 ;
  int ecode5 = 0 ;
  unsigned long val6 ;
  int ecode6 = 0 ;
  
  if ((nobjs < 6) || (nobjs > 6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__InetWvOut, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "InetWvOut_connect" "', argument " "1"" of type '" "stk::InetWvOut *""'"); 
  }
  arg1 = reinterpret_cast< stk::InetWvOut * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "InetWvOut_connect" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "InetWvOut_connect" "', argument " "3"" of type '" "stk::Socket::ProtocolType""'");
  } 
  arg3 = static_cast< stk::Socket::ProtocolType >(val3);
  {
    res4 = SWIG_ConvertPtr(swig_obj[3], &argp4, SWIGTYPE_p_std__string,  0  | 0);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "InetWvOut_connect" "', argument " "4"" of type '" "std::string""'"); 
    }  
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "InetWvOut_connect" "', argument " "4"" of type '" "std::string""'");
    } else {
      std::string * temp = reinterpret_cast< std::string * >(argp4);
      arg4 = *temp;
      if (SWIG_IsNewObj(res4)) delete temp;
    }
  }
  ecode5 = SWIG_AsVal_unsigned_SS_int(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "InetWvOut_connect" "', argument " "5"" of type '" "unsigned int""'");
  } 
  arg5 = static_cast< unsigned int >(val5);
  ecode6 = SWIG_AsVal_unsigned_SS_long(swig_obj[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "InetWvOut_connect" "', argument " "6"" of type '" "stk::Stk::StkFormat""'");
  } 
  arg6 = static_cast< stk::Stk::StkFormat >(val6);
  (arg1)->connect(arg2,arg3,arg4,arg5,arg6);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_InetWvOut_connect__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::InetWvOut *arg1 = (stk::InetWvOut *) 0 ;
  int arg2 ;
  stk::Socket::ProtocolType arg3 ;
  std::string arg4 ;
  unsigned int arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  void *argp4 ;
  int res4 = 0 ;
  unsigned int val5 ;
  int ecode5 = 0 ;
  
  if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__InetWvOut, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "InetWvOut_connect" "', argument " "1"" of type '" "stk::InetWvOut *""'"); 
  }
  arg1 = reinterpret_cast< stk::InetWvOut * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "InetWvOut_connect" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "InetWvOut_connect" "', argument " "3"" of type '" "stk::Socket::ProtocolType""'");
  } 
  arg3 = static_cast< stk::Socket::ProtocolType >(val3);
  {
    res4 = SWIG_ConvertPtr(swig_obj[3], &argp4, SWIGTYPE_p_std__string,  0  | 0);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "InetWvOut_connect" "', argument " "4"" of type '" "std::string""'"); 
    }  
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "InetWvOut_connect" "', argument " "4"" of type '" "std::string""'");
    } else {
      std::string * temp = reinterpret_cast< std::string * >(argp4);
      arg4 = *temp;
      if (SWIG_IsNewObj(res4)) delete temp;
    }
  }
  ecode5 = SWIG_AsVal_unsigned_SS_int(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "InetWvOut_connect" "', argument " "5"" of type '" "unsigned int""'");
  } 
  arg5 = static_cast< unsigned int >(val5);
  (arg1)->connect(arg2,arg3,arg4,arg5);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_InetWvOut_connect__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::InetWvOut *arg1 = (stk::InetWvOut *) 0 ;
  int arg2 ;
  stk::Socket::ProtocolType arg3 ;
  std::string arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  void *argp4 ;
  int res4 = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__InetWvOut, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "InetWvOut_connect" "', argument " "1"" of type '" "stk::InetWvOut *""'"); 
  }
  arg1 = reinterpret_cast< stk::InetWvOut * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "InetWvOut_connect" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "InetWvOut_connect" "', argument " "3"" of type '" "stk::Socket::ProtocolType""'");
  } 
  arg3 = static_cast< stk::Socket::ProtocolType >(val3);
  {
    res4 = SWIG_ConvertPtr(swig_obj[3], &argp4, SWIGTYPE_p_std__string,  0  | 0);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "InetWvOut_connect" "', argument " "4"" of type '" "std::string""'"); 
    }  
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "InetWvOut_connect" "', argument " "4"" of type '" "std::string""'");
    } else {
      std::string * temp = reinterpret_cast< std::string * >(argp4);
      arg4 = *temp;
      if (SWIG_IsNewObj(res4)) delete temp;
    }
  }
  (arg1)->connect(arg2,arg3,arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_InetWvOut_connect__SWIG_3(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::InetWvOut *arg1 = (stk::InetWvOut *) 0 ;
  int arg2 ;
  stk::Socket::ProtocolType arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__InetWvOut, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "InetWvOut_connect" "', argument " "1"" of type '" "stk::InetWvOut *""'"); 
  }
  arg1 = reinterpret_cast< stk::InetWvOut * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "InetWvOut_connect" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "InetWvOut_connect" "', argument " "3"" of type '" "stk::Socket::ProtocolType""'");
  } 
  arg3 = static_cast< stk::Socket::ProtocolType >(val3);
  (arg1)->connect(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_InetWvOut_connect__SWIG_4(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::InetWvOut *arg1 = (stk::InetWvOut *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__InetWvOut, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "InetWvOut_connect" "', argument " "1"" of type '" "stk::InetWvOut *""'"); 
  }
  arg1 = reinterpret_cast< stk::InetWvOut * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "InetWvOut_connect" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->connect(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_InetWvOut_connect(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[7] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "InetWvOut_connect", 0, 6, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__InetWvOut, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_InetWvOut_connect__SWIG_4(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__InetWvOut, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_InetWvOut_connect__SWIG_3(self, argc, argv);
        }
      }
    }
  }
  if (argc == 4) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__InetWvOut, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_std__string, SWIG_POINTER_NO_NULL | 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_InetWvOut_connect__SWIG_2(self, argc, argv);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__InetWvOut, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_std__string, SWIG_POINTER_NO_NULL | 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_unsigned_SS_int(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_InetWvOut_connect__SWIG_1(self, argc, argv);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__InetWvOut, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_std__string, SWIG_POINTER_NO_NULL | 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_unsigned_SS_int(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_unsigned_SS_long(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                return _wrap_InetWvOut_connect__SWIG_0(self, argc, argv);
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'InetWvOut_connect'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::InetWvOut::connect(int,stk::Socket::ProtocolType,std::string,unsigned int,stk::Stk::StkFormat)\n"
    "    stk::InetWvOut::connect(int,stk::Socket::ProtocolType,std::string,unsigned int)\n"
    "    stk::InetWvOut::connect(int,stk::Socket::ProtocolType,std::string)\n"
    "    stk::InetWvOut::connect(int,stk::Socket::ProtocolType)\n"
    "    stk::InetWvOut::connect(int)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_InetWvOut_disconnect(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::InetWvOut *arg1 = (stk::InetWvOut *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__InetWvOut, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "InetWvOut_disconnect" "', argument " "1"" of type '" "stk::InetWvOut *""'"); 
  }
  arg1 = reinterpret_cast< stk::InetWvOut * >(argp1);
  (arg1)->disconnect();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_InetWvOut_tick__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::InetWvOut *arg1 = (stk::InetWvOut *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__InetWvOut, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "InetWvOut_tick" "', argument " "1"" of type '" "stk::InetWvOut *""'"); 
  }
  arg1 = reinterpret_cast< stk::InetWvOut * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "InetWvOut_tick" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->tick(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_InetWvOut_tick__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::InetWvOut *arg1 = (stk::InetWvOut *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__InetWvOut, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "InetWvOut_tick" "', argument " "1"" of type '" "stk::InetWvOut *""'"); 
  }
  arg1 = reinterpret_cast< stk::InetWvOut * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "InetWvOut_tick" "', argument " "2"" of type '" "stk::StkFrames const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "InetWvOut_tick" "', argument " "2"" of type '" "stk::StkFrames const &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  (arg1)->tick((stk::StkFrames const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_InetWvOut_tick(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "InetWvOut_tick", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__InetWvOut, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_InetWvOut_tick__SWIG_1(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__InetWvOut, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_InetWvOut_tick__SWIG_0(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'InetWvOut_tick'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::InetWvOut::tick(stk::StkFloat const)\n"
    "    stk::InetWvOut::tick(stk::StkFrames const &)\n");
  return 0;
}


SWIGINTERN PyObject *InetWvOut_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_stk__InetWvOut, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *InetWvOut_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_RtWvIn__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  stk::StkFloat arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  stk::RtWvIn *result = 0 ;
  
  if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_RtWvIn" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_RtWvIn" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_RtWvIn" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  ecode4 = SWIG_AsVal_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_RtWvIn" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  ecode5 = SWIG_AsVal_int(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_RtWvIn" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = static_cast< int >(val5);
  result = (stk::RtWvIn *)new stk::RtWvIn(arg1,arg2,arg3,arg4,arg5);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__RtWvIn, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_RtWvIn__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  stk::StkFloat arg2 ;
  int arg3 ;
  int arg4 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  stk::RtWvIn *result = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_RtWvIn" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_RtWvIn" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_RtWvIn" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  ecode4 = SWIG_AsVal_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_RtWvIn" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  result = (stk::RtWvIn *)new stk::RtWvIn(arg1,arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__RtWvIn, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_RtWvIn__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  stk::StkFloat arg2 ;
  int arg3 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  stk::RtWvIn *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_RtWvIn" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_RtWvIn" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_RtWvIn" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  result = (stk::RtWvIn *)new stk::RtWvIn(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__RtWvIn, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_RtWvIn__SWIG_3(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  stk::StkFloat arg2 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  stk::RtWvIn *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_RtWvIn" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_RtWvIn" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  result = (stk::RtWvIn *)new stk::RtWvIn(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__RtWvIn, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_RtWvIn__SWIG_4(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  stk::RtWvIn *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_RtWvIn" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  result = (stk::RtWvIn *)new stk::RtWvIn(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__RtWvIn, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_RtWvIn__SWIG_5(PyObject *self, Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  stk::RtWvIn *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (stk::RtWvIn *)new stk::RtWvIn();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__RtWvIn, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_RtWvIn(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[6] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_RtWvIn", 0, 5, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_RtWvIn__SWIG_5(self, argc, argv);
  }
  if (argc == 1) {
    int _v = 0;
    {
      int res = SWIG_AsVal_unsigned_SS_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_RtWvIn__SWIG_4(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    {
      int res = SWIG_AsVal_unsigned_SS_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_RtWvIn__SWIG_3(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    {
      int res = SWIG_AsVal_unsigned_SS_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_RtWvIn__SWIG_2(self, argc, argv);
        }
      }
    }
  }
  if (argc == 4) {
    int _v = 0;
    {
      int res = SWIG_AsVal_unsigned_SS_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_new_RtWvIn__SWIG_1(self, argc, argv);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v = 0;
    {
      int res = SWIG_AsVal_unsigned_SS_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_int(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_new_RtWvIn__SWIG_0(self, argc, argv);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_RtWvIn'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::RtWvIn::RtWvIn(unsigned int,stk::StkFloat,int,int,int)\n"
    "    stk::RtWvIn::RtWvIn(unsigned int,stk::StkFloat,int,int)\n"
    "    stk::RtWvIn::RtWvIn(unsigned int,stk::StkFloat,int)\n"
    "    stk::RtWvIn::RtWvIn(unsigned int,stk::StkFloat)\n"
    "    stk::RtWvIn::RtWvIn(unsigned int)\n"
    "    stk::RtWvIn::RtWvIn()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_RtWvIn(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::RtWvIn *arg1 = (stk::RtWvIn *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__RtWvIn, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_RtWvIn" "', argument " "1"" of type '" "stk::RtWvIn *""'"); 
  }
  arg1 = reinterpret_cast< stk::RtWvIn * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RtWvIn_start(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::RtWvIn *arg1 = (stk::RtWvIn *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__RtWvIn, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RtWvIn_start" "', argument " "1"" of type '" "stk::RtWvIn *""'"); 
  }
  arg1 = reinterpret_cast< stk::RtWvIn * >(argp1);
  (arg1)->start();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RtWvIn_stop(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::RtWvIn *arg1 = (stk::RtWvIn *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__RtWvIn, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RtWvIn_stop" "', argument " "1"" of type '" "stk::RtWvIn *""'"); 
  }
  arg1 = reinterpret_cast< stk::RtWvIn * >(argp1);
  (arg1)->stop();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RtWvIn_lastOut__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::RtWvIn *arg1 = (stk::RtWvIn *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__RtWvIn, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RtWvIn_lastOut" "', argument " "1"" of type '" "stk::RtWvIn *""'"); 
  }
  arg1 = reinterpret_cast< stk::RtWvIn * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "RtWvIn_lastOut" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (stk::StkFloat)(arg1)->lastOut(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RtWvIn_lastOut__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::RtWvIn *arg1 = (stk::RtWvIn *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__RtWvIn, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RtWvIn_lastOut" "', argument " "1"" of type '" "stk::RtWvIn *""'"); 
  }
  arg1 = reinterpret_cast< stk::RtWvIn * >(argp1);
  result = (stk::StkFloat)(arg1)->lastOut();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RtWvIn_lastOut(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "RtWvIn_lastOut", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__RtWvIn, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_RtWvIn_lastOut__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__RtWvIn, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_RtWvIn_lastOut__SWIG_0(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'RtWvIn_lastOut'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::RtWvIn::lastOut(unsigned int)\n"
    "    stk::RtWvIn::lastOut()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_RtWvIn_tick__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::RtWvIn *arg1 = (stk::RtWvIn *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__RtWvIn, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RtWvIn_tick" "', argument " "1"" of type '" "stk::RtWvIn *""'"); 
  }
  arg1 = reinterpret_cast< stk::RtWvIn * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "RtWvIn_tick" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (stk::StkFloat)(arg1)->tick(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RtWvIn_tick__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::RtWvIn *arg1 = (stk::RtWvIn *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__RtWvIn, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RtWvIn_tick" "', argument " "1"" of type '" "stk::RtWvIn *""'"); 
  }
  arg1 = reinterpret_cast< stk::RtWvIn * >(argp1);
  result = (stk::StkFloat)(arg1)->tick();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RtWvIn_tick__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::RtWvIn *arg1 = (stk::RtWvIn *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__RtWvIn, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RtWvIn_tick" "', argument " "1"" of type '" "stk::RtWvIn *""'"); 
  }
  arg1 = reinterpret_cast< stk::RtWvIn * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "RtWvIn_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "RtWvIn_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "RtWvIn_tick" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RtWvIn_tick__SWIG_3(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::RtWvIn *arg1 = (stk::RtWvIn *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__RtWvIn, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RtWvIn_tick" "', argument " "1"" of type '" "stk::RtWvIn *""'"); 
  }
  arg1 = reinterpret_cast< stk::RtWvIn * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "RtWvIn_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "RtWvIn_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RtWvIn_tick(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "RtWvIn_tick", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__RtWvIn, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_RtWvIn_tick__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__RtWvIn, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_RtWvIn_tick__SWIG_3(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__RtWvIn, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_RtWvIn_tick__SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__RtWvIn, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_RtWvIn_tick__SWIG_2(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'RtWvIn_tick'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::RtWvIn::tick(unsigned int)\n"
    "    stk::RtWvIn::tick()\n"
    "    stk::RtWvIn::tick(stk::StkFrames &,unsigned int)\n"
    "    stk::RtWvIn::tick(stk::StkFrames &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_RtWvIn_fillBuffer(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::RtWvIn *arg1 = (stk::RtWvIn *) 0 ;
  void *arg2 = (void *) 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "RtWvIn_fillBuffer", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__RtWvIn, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RtWvIn_fillBuffer" "', argument " "1"" of type '" "stk::RtWvIn *""'"); 
  }
  arg1 = reinterpret_cast< stk::RtWvIn * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1],SWIG_as_voidptrptr(&arg2), 0, 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "RtWvIn_fillBuffer" "', argument " "2"" of type '" "void *""'"); 
  }
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "RtWvIn_fillBuffer" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  (arg1)->fillBuffer(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *RtWvIn_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_stk__RtWvIn, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *RtWvIn_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_RtWvOut__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  stk::StkFloat arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  stk::RtWvOut *result = 0 ;
  
  if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_RtWvOut" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_RtWvOut" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_RtWvOut" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  ecode4 = SWIG_AsVal_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_RtWvOut" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  ecode5 = SWIG_AsVal_int(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_RtWvOut" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = static_cast< int >(val5);
  result = (stk::RtWvOut *)new stk::RtWvOut(arg1,arg2,arg3,arg4,arg5);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__RtWvOut, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_RtWvOut__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  stk::StkFloat arg2 ;
  int arg3 ;
  int arg4 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  stk::RtWvOut *result = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_RtWvOut" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_RtWvOut" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_RtWvOut" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  ecode4 = SWIG_AsVal_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_RtWvOut" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  result = (stk::RtWvOut *)new stk::RtWvOut(arg1,arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__RtWvOut, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_RtWvOut__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  stk::StkFloat arg2 ;
  int arg3 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  stk::RtWvOut *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_RtWvOut" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_RtWvOut" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_RtWvOut" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  result = (stk::RtWvOut *)new stk::RtWvOut(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__RtWvOut, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_RtWvOut__SWIG_3(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  stk::StkFloat arg2 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  stk::RtWvOut *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_RtWvOut" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_RtWvOut" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  result = (stk::RtWvOut *)new stk::RtWvOut(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__RtWvOut, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_RtWvOut__SWIG_4(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  stk::RtWvOut *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_RtWvOut" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  result = (stk::RtWvOut *)new stk::RtWvOut(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__RtWvOut, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_RtWvOut__SWIG_5(PyObject *self, Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  stk::RtWvOut *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (stk::RtWvOut *)new stk::RtWvOut();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__RtWvOut, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_RtWvOut(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[6] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_RtWvOut", 0, 5, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_RtWvOut__SWIG_5(self, argc, argv);
  }
  if (argc == 1) {
    int _v = 0;
    {
      int res = SWIG_AsVal_unsigned_SS_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_RtWvOut__SWIG_4(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    {
      int res = SWIG_AsVal_unsigned_SS_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_RtWvOut__SWIG_3(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    {
      int res = SWIG_AsVal_unsigned_SS_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_RtWvOut__SWIG_2(self, argc, argv);
        }
      }
    }
  }
  if (argc == 4) {
    int _v = 0;
    {
      int res = SWIG_AsVal_unsigned_SS_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_new_RtWvOut__SWIG_1(self, argc, argv);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v = 0;
    {
      int res = SWIG_AsVal_unsigned_SS_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_int(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_new_RtWvOut__SWIG_0(self, argc, argv);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_RtWvOut'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::RtWvOut::RtWvOut(unsigned int,stk::StkFloat,int,int,int)\n"
    "    stk::RtWvOut::RtWvOut(unsigned int,stk::StkFloat,int,int)\n"
    "    stk::RtWvOut::RtWvOut(unsigned int,stk::StkFloat,int)\n"
    "    stk::RtWvOut::RtWvOut(unsigned int,stk::StkFloat)\n"
    "    stk::RtWvOut::RtWvOut(unsigned int)\n"
    "    stk::RtWvOut::RtWvOut()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_RtWvOut(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::RtWvOut *arg1 = (stk::RtWvOut *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__RtWvOut, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_RtWvOut" "', argument " "1"" of type '" "stk::RtWvOut *""'"); 
  }
  arg1 = reinterpret_cast< stk::RtWvOut * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RtWvOut_start(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::RtWvOut *arg1 = (stk::RtWvOut *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__RtWvOut, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RtWvOut_start" "', argument " "1"" of type '" "stk::RtWvOut *""'"); 
  }
  arg1 = reinterpret_cast< stk::RtWvOut * >(argp1);
  (arg1)->start();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RtWvOut_stop(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::RtWvOut *arg1 = (stk::RtWvOut *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__RtWvOut, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RtWvOut_stop" "', argument " "1"" of type '" "stk::RtWvOut *""'"); 
  }
  arg1 = reinterpret_cast< stk::RtWvOut * >(argp1);
  (arg1)->stop();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RtWvOut_tick__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::RtWvOut *arg1 = (stk::RtWvOut *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__RtWvOut, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RtWvOut_tick" "', argument " "1"" of type '" "stk::RtWvOut *""'"); 
  }
  arg1 = reinterpret_cast< stk::RtWvOut * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "RtWvOut_tick" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->tick(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RtWvOut_tick__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::RtWvOut *arg1 = (stk::RtWvOut *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__RtWvOut, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RtWvOut_tick" "', argument " "1"" of type '" "stk::RtWvOut *""'"); 
  }
  arg1 = reinterpret_cast< stk::RtWvOut * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "RtWvOut_tick" "', argument " "2"" of type '" "stk::StkFrames const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "RtWvOut_tick" "', argument " "2"" of type '" "stk::StkFrames const &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  (arg1)->tick((stk::StkFrames const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RtWvOut_tick(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "RtWvOut_tick", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__RtWvOut, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_RtWvOut_tick__SWIG_1(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__RtWvOut, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_RtWvOut_tick__SWIG_0(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'RtWvOut_tick'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::RtWvOut::tick(stk::StkFloat const)\n"
    "    stk::RtWvOut::tick(stk::StkFrames const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_RtWvOut_readBuffer(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::RtWvOut *arg1 = (stk::RtWvOut *) 0 ;
  void *arg2 = (void *) 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "RtWvOut_readBuffer", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__RtWvOut, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RtWvOut_readBuffer" "', argument " "1"" of type '" "stk::RtWvOut *""'"); 
  }
  arg1 = reinterpret_cast< stk::RtWvOut * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1],SWIG_as_voidptrptr(&arg2), 0, 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "RtWvOut_readBuffer" "', argument " "2"" of type '" "void *""'"); 
  }
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "RtWvOut_readBuffer" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  result = (int)(arg1)->readBuffer(arg2,arg3);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *RtWvOut_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_stk__RtWvOut, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *RtWvOut_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_delete_Sampler(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Sampler *arg1 = (stk::Sampler *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Sampler, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Sampler" "', argument " "1"" of type '" "stk::Sampler *""'"); 
  }
  arg1 = reinterpret_cast< stk::Sampler * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Sampler_setFrequency(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Sampler *arg1 = (stk::Sampler *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Sampler_setFrequency", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Sampler, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Sampler_setFrequency" "', argument " "1"" of type '" "stk::Sampler *""'"); 
  }
  arg1 = reinterpret_cast< stk::Sampler * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Sampler_setFrequency" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->setFrequency(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Sampler_keyOn(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Sampler *arg1 = (stk::Sampler *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Sampler, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Sampler_keyOn" "', argument " "1"" of type '" "stk::Sampler *""'"); 
  }
  arg1 = reinterpret_cast< stk::Sampler * >(argp1);
  (arg1)->keyOn();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Sampler_keyOff(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Sampler *arg1 = (stk::Sampler *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Sampler, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Sampler_keyOff" "', argument " "1"" of type '" "stk::Sampler *""'"); 
  }
  arg1 = reinterpret_cast< stk::Sampler * >(argp1);
  (arg1)->keyOff();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Sampler_noteOff(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Sampler *arg1 = (stk::Sampler *) 0 ;
  stk::StkFloat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Sampler_noteOff", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Sampler, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Sampler_noteOff" "', argument " "1"" of type '" "stk::Sampler *""'"); 
  }
  arg1 = reinterpret_cast< stk::Sampler * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Sampler_noteOff" "', argument " "2"" of type '" "stk::StkFloat""'");
  } 
  arg2 = static_cast< stk::StkFloat >(val2);
  (arg1)->noteOff(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Sampler_controlChange(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  stk::Sampler *arg1 = (stk::Sampler *) 0 ;
  int arg2 ;
  stk::StkFloat arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Sampler_controlChange", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Sampler, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Sampler_controlChange" "', argument " "1"" of type '" "stk::Sampler *""'"); 
  }
  arg1 = reinterpret_cast< stk::Sampler * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Sampler_controlChange" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Sampler_controlChange" "', argument " "3"" of type '" "stk::StkFloat""'");
  } 
  arg3 = static_cast< stk::StkFloat >(val3);
  (arg1)->controlChange(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Sampler_tick__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Sampler *arg1 = (stk::Sampler *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Sampler, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Sampler_tick" "', argument " "1"" of type '" "stk::Sampler *""'"); 
  }
  arg1 = reinterpret_cast< stk::Sampler * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Sampler_tick" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (stk::StkFloat)(arg1)->tick(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Sampler_tick__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Sampler *arg1 = (stk::Sampler *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  stk::StkFloat result;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Sampler, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Sampler_tick" "', argument " "1"" of type '" "stk::Sampler *""'"); 
  }
  arg1 = reinterpret_cast< stk::Sampler * >(argp1);
  result = (stk::StkFloat)(arg1)->tick();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Sampler_tick__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Sampler *arg1 = (stk::Sampler *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Sampler, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Sampler_tick" "', argument " "1"" of type '" "stk::Sampler *""'"); 
  }
  arg1 = reinterpret_cast< stk::Sampler * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Sampler_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Sampler_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Sampler_tick" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Sampler_tick__SWIG_3(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  stk::Sampler *arg1 = (stk::Sampler *) 0 ;
  stk::StkFrames *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  stk::StkFrames *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_stk__Sampler, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Sampler_tick" "', argument " "1"" of type '" "stk::Sampler *""'"); 
  }
  arg1 = reinterpret_cast< stk::Sampler * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_stk__StkFrames,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Sampler_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Sampler_tick" "', argument " "2"" of type '" "stk::StkFrames &""'"); 
  }
  arg2 = reinterpret_cast< stk::StkFrames * >(argp2);
  result = (stk::StkFrames *) &(arg1)->tick(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_stk__StkFrames, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Sampler_tick(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Sampler_tick", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Sampler, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Sampler_tick__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Sampler, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Sampler_tick__SWIG_3(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Sampler, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Sampler_tick__SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_stk__Sampler, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_stk__StkFrames, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Sampler_tick__SWIG_2(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Sampler_tick'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    stk::Sampler::tick(unsigned int)\n"
    "    stk::Sampler::tick()\n"
    "    stk::Sampler::tick(stk::StkFrames &,unsigned int)\n"
    "    stk::Sampler::tick(stk::StkFrames &)\n");
  return 0;
}


SWIGINTERN PyObject *Sampler_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_stk__Sampler, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

static PyMethodDef SwigMethods[] = {
	 { "delete_SwigPyIterator", _wrap_delete_SwigPyIterator, METH_O, NULL},
	 { "SwigPyIterator_value", _wrap_SwigPyIterator_value, METH_O, NULL},
	 { "SwigPyIterator_incr", _wrap_SwigPyIterator_incr, METH_VARARGS, NULL},
	 { "SwigPyIterator_decr", _wrap_SwigPyIterator_decr, METH_VARARGS, NULL},
	 { "SwigPyIterator_distance", _wrap_SwigPyIterator_distance, METH_VARARGS, NULL},
	 { "SwigPyIterator_equal", _wrap_SwigPyIterator_equal, METH_VARARGS, NULL},
	 { "SwigPyIterator_copy", _wrap_SwigPyIterator_copy, METH_O, NULL},
	 { "SwigPyIterator_next", _wrap_SwigPyIterator_next, METH_O, NULL},
	 { "SwigPyIterator___next__", _wrap_SwigPyIterator___next__, METH_O, NULL},
	 { "SwigPyIterator_previous", _wrap_SwigPyIterator_previous, METH_O, NULL},
	 { "SwigPyIterator_advance", _wrap_SwigPyIterator_advance, METH_VARARGS, NULL},
	 { "SwigPyIterator___eq__", _wrap_SwigPyIterator___eq__, METH_VARARGS, NULL},
	 { "SwigPyIterator___ne__", _wrap_SwigPyIterator___ne__, METH_VARARGS, NULL},
	 { "SwigPyIterator___iadd__", _wrap_SwigPyIterator___iadd__, METH_VARARGS, NULL},
	 { "SwigPyIterator___isub__", _wrap_SwigPyIterator___isub__, METH_VARARGS, NULL},
	 { "SwigPyIterator___add__", _wrap_SwigPyIterator___add__, METH_VARARGS, NULL},
	 { "SwigPyIterator___sub__", _wrap_SwigPyIterator___sub__, METH_VARARGS, NULL},
	 { "SwigPyIterator_swigregister", SwigPyIterator_swigregister, METH_O, NULL},
	 { "new_StkError", _wrap_new_StkError, METH_VARARGS, NULL},
	 { "delete_StkError", _wrap_delete_StkError, METH_O, NULL},
	 { "StkError_printMessage", _wrap_StkError_printMessage, METH_O, NULL},
	 { "StkError_getType", _wrap_StkError_getType, METH_O, NULL},
	 { "StkError_getMessage", _wrap_StkError_getMessage, METH_O, NULL},
	 { "StkError_getMessageCString", _wrap_StkError_getMessageCString, METH_O, NULL},
	 { "StkError_what", _wrap_StkError_what, METH_O, NULL},
	 { "StkError_swigregister", StkError_swigregister, METH_O, NULL},
	 { "StkError_swiginit", StkError_swiginit, METH_VARARGS, NULL},
	 { "delete_StkFrames", _wrap_delete_StkFrames, METH_O, NULL},
	 { "new_StkFrames", _wrap_new_StkFrames, METH_VARARGS, NULL},
	 { "StkFrames___getitem__", _wrap_StkFrames___getitem__, METH_VARARGS, NULL},
	 { "StkFrames___setitem__", _wrap_StkFrames___setitem__, METH_VARARGS, NULL},
	 { "StkFrames___add__", _wrap_StkFrames___add__, METH_VARARGS, NULL},
	 { "StkFrames___iadd__", _wrap_StkFrames___iadd__, METH_VARARGS, NULL},
	 { "StkFrames___mul__", _wrap_StkFrames___mul__, METH_VARARGS, NULL},
	 { "StkFrames___imul__", _wrap_StkFrames___imul__, METH_VARARGS, NULL},
	 { "StkFrames_get", _wrap_StkFrames_get, METH_VARARGS, NULL},
	 { "StkFrames_interpolate", _wrap_StkFrames_interpolate, METH_VARARGS, NULL},
	 { "StkFrames_size", _wrap_StkFrames_size, METH_O, NULL},
	 { "StkFrames_empty", _wrap_StkFrames_empty, METH_O, NULL},
	 { "StkFrames_resize", _wrap_StkFrames_resize, METH_VARARGS, NULL},
	 { "StkFrames_getChannel", _wrap_StkFrames_getChannel, METH_VARARGS, NULL},
	 { "StkFrames_setChannel", _wrap_StkFrames_setChannel, METH_VARARGS, NULL},
	 { "StkFrames_channels", _wrap_StkFrames_channels, METH_O, NULL},
	 { "StkFrames_frames", _wrap_StkFrames_frames, METH_O, NULL},
	 { "StkFrames_setDataRate", _wrap_StkFrames_setDataRate, METH_VARARGS, NULL},
	 { "StkFrames_dataRate", _wrap_StkFrames_dataRate, METH_O, NULL},
	 { "StkFrames_swigregister", StkFrames_swigregister, METH_O, NULL},
	 { "StkFrames_swiginit", StkFrames_swiginit, METH_VARARGS, NULL},
	 { "Effect_channelsOut", _wrap_Effect_channelsOut, METH_O, NULL},
	 { "Effect_lastFrame", _wrap_Effect_lastFrame, METH_O, NULL},
	 { "Effect_clear", _wrap_Effect_clear, METH_O, NULL},
	 { "Effect_setEffectMix", _wrap_Effect_setEffectMix, METH_VARARGS, NULL},
	 { "delete_Effect", _wrap_delete_Effect, METH_O, NULL},
	 { "Effect_swigregister", Effect_swigregister, METH_O, NULL},
	 { "Filter_channelsIn", _wrap_Filter_channelsIn, METH_O, NULL},
	 { "Filter_channelsOut", _wrap_Filter_channelsOut, METH_O, NULL},
	 { "Filter_clear", _wrap_Filter_clear, METH_O, NULL},
	 { "Filter_setGain", _wrap_Filter_setGain, METH_VARARGS, NULL},
	 { "Filter_getGain", _wrap_Filter_getGain, METH_O, NULL},
	 { "Filter_phaseDelay", _wrap_Filter_phaseDelay, METH_VARARGS, NULL},
	 { "Filter_lastFrame", _wrap_Filter_lastFrame, METH_O, NULL},
	 { "Filter_tick", _wrap_Filter_tick, METH_VARARGS, NULL},
	 { "delete_Filter", _wrap_delete_Filter, METH_O, NULL},
	 { "Filter_swigregister", Filter_swigregister, METH_O, NULL},
	 { "Generator_channelsOut", _wrap_Generator_channelsOut, METH_O, NULL},
	 { "Generator_lastFrame", _wrap_Generator_lastFrame, METH_O, NULL},
	 { "Generator_tick", _wrap_Generator_tick, METH_VARARGS, NULL},
	 { "delete_Generator", _wrap_delete_Generator, METH_O, NULL},
	 { "Generator_swigregister", Generator_swigregister, METH_O, NULL},
	 { "Instrmnt_clear", _wrap_Instrmnt_clear, METH_O, NULL},
	 { "Instrmnt_noteOn", _wrap_Instrmnt_noteOn, METH_VARARGS, NULL},
	 { "Instrmnt_noteOff", _wrap_Instrmnt_noteOff, METH_VARARGS, NULL},
	 { "Instrmnt_setFrequency", _wrap_Instrmnt_setFrequency, METH_VARARGS, NULL},
	 { "Instrmnt_controlChange", _wrap_Instrmnt_controlChange, METH_VARARGS, NULL},
	 { "Instrmnt_channelsOut", _wrap_Instrmnt_channelsOut, METH_O, NULL},
	 { "Instrmnt_lastFrame", _wrap_Instrmnt_lastFrame, METH_O, NULL},
	 { "Instrmnt_lastOut", _wrap_Instrmnt_lastOut, METH_VARARGS, NULL},
	 { "Instrmnt_tick", _wrap_Instrmnt_tick, METH_VARARGS, NULL},
	 { "delete_Instrmnt", _wrap_delete_Instrmnt, METH_O, NULL},
	 { "Instrmnt_swigregister", Instrmnt_swigregister, METH_O, NULL},
	 { "Function_lastOut", _wrap_Function_lastOut, METH_O, NULL},
	 { "Function_tick", _wrap_Function_tick, METH_VARARGS, NULL},
	 { "delete_Function", _wrap_delete_Function, METH_O, NULL},
	 { "Function_swigregister", Function_swigregister, METH_O, NULL},
	 { "delete_FM", _wrap_delete_FM, METH_O, NULL},
	 { "FM_loadWaves", _wrap_FM_loadWaves, METH_VARARGS, NULL},
	 { "FM_setFrequency", _wrap_FM_setFrequency, METH_VARARGS, NULL},
	 { "FM_setRatio", _wrap_FM_setRatio, METH_VARARGS, NULL},
	 { "FM_setGain", _wrap_FM_setGain, METH_VARARGS, NULL},
	 { "FM_setModulationSpeed", _wrap_FM_setModulationSpeed, METH_VARARGS, NULL},
	 { "FM_setModulationDepth", _wrap_FM_setModulationDepth, METH_VARARGS, NULL},
	 { "FM_setControl1", _wrap_FM_setControl1, METH_VARARGS, NULL},
	 { "FM_setControl2", _wrap_FM_setControl2, METH_VARARGS, NULL},
	 { "FM_keyOn", _wrap_FM_keyOn, METH_O, NULL},
	 { "FM_keyOff", _wrap_FM_keyOff, METH_O, NULL},
	 { "FM_noteOff", _wrap_FM_noteOff, METH_VARARGS, NULL},
	 { "FM_controlChange", _wrap_FM_controlChange, METH_VARARGS, NULL},
	 { "FM_tick", _wrap_FM_tick, METH_VARARGS, NULL},
	 { "FM_swigregister", FM_swigregister, METH_O, NULL},
	 { "new_ADSR", _wrap_new_ADSR, METH_NOARGS, NULL},
	 { "delete_ADSR", _wrap_delete_ADSR, METH_O, NULL},
	 { "ADSR_keyOn", _wrap_ADSR_keyOn, METH_O, NULL},
	 { "ADSR_keyOff", _wrap_ADSR_keyOff, METH_O, NULL},
	 { "ADSR_setAttackRate", _wrap_ADSR_setAttackRate, METH_VARARGS, NULL},
	 { "ADSR_setAttackTarget", _wrap_ADSR_setAttackTarget, METH_VARARGS, NULL},
	 { "ADSR_setDecayRate", _wrap_ADSR_setDecayRate, METH_VARARGS, NULL},
	 { "ADSR_setSustainLevel", _wrap_ADSR_setSustainLevel, METH_VARARGS, NULL},
	 { "ADSR_setReleaseRate", _wrap_ADSR_setReleaseRate, METH_VARARGS, NULL},
	 { "ADSR_setAttackTime", _wrap_ADSR_setAttackTime, METH_VARARGS, NULL},
	 { "ADSR_setDecayTime", _wrap_ADSR_setDecayTime, METH_VARARGS, NULL},
	 { "ADSR_setReleaseTime", _wrap_ADSR_setReleaseTime, METH_VARARGS, NULL},
	 { "ADSR_setAllTimes", _wrap_ADSR_setAllTimes, METH_VARARGS, NULL},
	 { "ADSR_setTarget", _wrap_ADSR_setTarget, METH_VARARGS, NULL},
	 { "ADSR_getState", _wrap_ADSR_getState, METH_O, NULL},
	 { "ADSR_setValue", _wrap_ADSR_setValue, METH_VARARGS, NULL},
	 { "ADSR_lastOut", _wrap_ADSR_lastOut, METH_O, NULL},
	 { "ADSR_tick", _wrap_ADSR_tick, METH_VARARGS, NULL},
	 { "ADSR_swigregister", ADSR_swigregister, METH_O, NULL},
	 { "ADSR_swiginit", ADSR_swiginit, METH_VARARGS, NULL},
	 { "new_Asymp", _wrap_new_Asymp, METH_NOARGS, NULL},
	 { "delete_Asymp", _wrap_delete_Asymp, METH_O, NULL},
	 { "Asymp_keyOn", _wrap_Asymp_keyOn, METH_O, NULL},
	 { "Asymp_keyOff", _wrap_Asymp_keyOff, METH_O, NULL},
	 { "Asymp_setTau", _wrap_Asymp_setTau, METH_VARARGS, NULL},
	 { "Asymp_setTime", _wrap_Asymp_setTime, METH_VARARGS, NULL},
	 { "Asymp_setT60", _wrap_Asymp_setT60, METH_VARARGS, NULL},
	 { "Asymp_setTarget", _wrap_Asymp_setTarget, METH_VARARGS, NULL},
	 { "Asymp_setValue", _wrap_Asymp_setValue, METH_VARARGS, NULL},
	 { "Asymp_getState", _wrap_Asymp_getState, METH_O, NULL},
	 { "Asymp_lastOut", _wrap_Asymp_lastOut, METH_O, NULL},
	 { "Asymp_tick", _wrap_Asymp_tick, METH_VARARGS, NULL},
	 { "Asymp_swigregister", Asymp_swigregister, METH_O, NULL},
	 { "Asymp_swiginit", Asymp_swiginit, METH_VARARGS, NULL},
	 { "new_BandedWG", _wrap_new_BandedWG, METH_NOARGS, NULL},
	 { "delete_BandedWG", _wrap_delete_BandedWG, METH_O, NULL},
	 { "BandedWG_clear", _wrap_BandedWG_clear, METH_O, NULL},
	 { "BandedWG_setStrikePosition", _wrap_BandedWG_setStrikePosition, METH_VARARGS, NULL},
	 { "BandedWG_setPreset", _wrap_BandedWG_setPreset, METH_VARARGS, NULL},
	 { "BandedWG_setFrequency", _wrap_BandedWG_setFrequency, METH_VARARGS, NULL},
	 { "BandedWG_startBowing", _wrap_BandedWG_startBowing, METH_VARARGS, NULL},
	 { "BandedWG_stopBowing", _wrap_BandedWG_stopBowing, METH_VARARGS, NULL},
	 { "BandedWG_pluck", _wrap_BandedWG_pluck, METH_VARARGS, NULL},
	 { "BandedWG_noteOn", _wrap_BandedWG_noteOn, METH_VARARGS, NULL},
	 { "BandedWG_noteOff", _wrap_BandedWG_noteOff, METH_VARARGS, NULL},
	 { "BandedWG_controlChange", _wrap_BandedWG_controlChange, METH_VARARGS, NULL},
	 { "BandedWG_tick", _wrap_BandedWG_tick, METH_VARARGS, NULL},
	 { "BandedWG_swigregister", BandedWG_swigregister, METH_O, NULL},
	 { "BandedWG_swiginit", BandedWG_swiginit, METH_VARARGS, NULL},
	 { "new_BeeThree", _wrap_new_BeeThree, METH_NOARGS, NULL},
	 { "delete_BeeThree", _wrap_delete_BeeThree, METH_O, NULL},
	 { "BeeThree_noteOn", _wrap_BeeThree_noteOn, METH_VARARGS, NULL},
	 { "BeeThree_tick", _wrap_BeeThree_tick, METH_VARARGS, NULL},
	 { "BeeThree_swigregister", BeeThree_swigregister, METH_O, NULL},
	 { "BeeThree_swiginit", BeeThree_swiginit, METH_VARARGS, NULL},
	 { "new_BiQuad", _wrap_new_BiQuad, METH_NOARGS, NULL},
	 { "delete_BiQuad", _wrap_delete_BiQuad, METH_O, NULL},
	 { "BiQuad_ignoreSampleRateChange", _wrap_BiQuad_ignoreSampleRateChange, METH_VARARGS, NULL},
	 { "BiQuad_setCoefficients", _wrap_BiQuad_setCoefficients, METH_VARARGS, NULL},
	 { "BiQuad_setB0", _wrap_BiQuad_setB0, METH_VARARGS, NULL},
	 { "BiQuad_setB1", _wrap_BiQuad_setB1, METH_VARARGS, NULL},
	 { "BiQuad_setB2", _wrap_BiQuad_setB2, METH_VARARGS, NULL},
	 { "BiQuad_setA1", _wrap_BiQuad_setA1, METH_VARARGS, NULL},
	 { "BiQuad_setA2", _wrap_BiQuad_setA2, METH_VARARGS, NULL},
	 { "BiQuad_setResonance", _wrap_BiQuad_setResonance, METH_VARARGS, NULL},
	 { "BiQuad_setNotch", _wrap_BiQuad_setNotch, METH_VARARGS, NULL},
	 { "BiQuad_setEqualGainZeroes", _wrap_BiQuad_setEqualGainZeroes, METH_O, NULL},
	 { "BiQuad_lastOut", _wrap_BiQuad_lastOut, METH_O, NULL},
	 { "BiQuad_tick", _wrap_BiQuad_tick, METH_VARARGS, NULL},
	 { "BiQuad_swigregister", BiQuad_swigregister, METH_O, NULL},
	 { "BiQuad_swiginit", BiQuad_swiginit, METH_VARARGS, NULL},
	 { "new_Blit", _wrap_new_Blit, METH_VARARGS, NULL},
	 { "delete_Blit", _wrap_delete_Blit, METH_O, NULL},
	 { "Blit_reset", _wrap_Blit_reset, METH_O, NULL},
	 { "Blit_setPhase", _wrap_Blit_setPhase, METH_VARARGS, NULL},
	 { "Blit_getPhase", _wrap_Blit_getPhase, METH_O, NULL},
	 { "Blit_setFrequency", _wrap_Blit_setFrequency, METH_VARARGS, NULL},
	 { "Blit_setHarmonics", _wrap_Blit_setHarmonics, METH_VARARGS, NULL},
	 { "Blit_lastOut", _wrap_Blit_lastOut, METH_O, NULL},
	 { "Blit_tick", _wrap_Blit_tick, METH_VARARGS, NULL},
	 { "Blit_swigregister", Blit_swigregister, METH_O, NULL},
	 { "Blit_swiginit", Blit_swiginit, METH_VARARGS, NULL},
	 { "new_BlitSaw", _wrap_new_BlitSaw, METH_VARARGS, NULL},
	 { "delete_BlitSaw", _wrap_delete_BlitSaw, METH_O, NULL},
	 { "BlitSaw_reset", _wrap_BlitSaw_reset, METH_O, NULL},
	 { "BlitSaw_setFrequency", _wrap_BlitSaw_setFrequency, METH_VARARGS, NULL},
	 { "BlitSaw_setHarmonics", _wrap_BlitSaw_setHarmonics, METH_VARARGS, NULL},
	 { "BlitSaw_lastOut", _wrap_BlitSaw_lastOut, METH_O, NULL},
	 { "BlitSaw_tick", _wrap_BlitSaw_tick, METH_VARARGS, NULL},
	 { "BlitSaw_swigregister", BlitSaw_swigregister, METH_O, NULL},
	 { "BlitSaw_swiginit", BlitSaw_swiginit, METH_VARARGS, NULL},
	 { "new_BlitSquare", _wrap_new_BlitSquare, METH_VARARGS, NULL},
	 { "delete_BlitSquare", _wrap_delete_BlitSquare, METH_O, NULL},
	 { "BlitSquare_reset", _wrap_BlitSquare_reset, METH_O, NULL},
	 { "BlitSquare_setPhase", _wrap_BlitSquare_setPhase, METH_VARARGS, NULL},
	 { "BlitSquare_getPhase", _wrap_BlitSquare_getPhase, METH_O, NULL},
	 { "BlitSquare_setFrequency", _wrap_BlitSquare_setFrequency, METH_VARARGS, NULL},
	 { "BlitSquare_setHarmonics", _wrap_BlitSquare_setHarmonics, METH_VARARGS, NULL},
	 { "BlitSquare_lastOut", _wrap_BlitSquare_lastOut, METH_O, NULL},
	 { "BlitSquare_tick", _wrap_BlitSquare_tick, METH_VARARGS, NULL},
	 { "BlitSquare_swigregister", BlitSquare_swigregister, METH_O, NULL},
	 { "BlitSquare_swiginit", BlitSquare_swiginit, METH_VARARGS, NULL},
	 { "new_BlowBotl", _wrap_new_BlowBotl, METH_NOARGS, NULL},
	 { "delete_BlowBotl", _wrap_delete_BlowBotl, METH_O, NULL},
	 { "BlowBotl_clear", _wrap_BlowBotl_clear, METH_O, NULL},
	 { "BlowBotl_setFrequency", _wrap_BlowBotl_setFrequency, METH_VARARGS, NULL},
	 { "BlowBotl_startBlowing", _wrap_BlowBotl_startBlowing, METH_VARARGS, NULL},
	 { "BlowBotl_stopBlowing", _wrap_BlowBotl_stopBlowing, METH_VARARGS, NULL},
	 { "BlowBotl_noteOn", _wrap_BlowBotl_noteOn, METH_VARARGS, NULL},
	 { "BlowBotl_noteOff", _wrap_BlowBotl_noteOff, METH_VARARGS, NULL},
	 { "BlowBotl_controlChange", _wrap_BlowBotl_controlChange, METH_VARARGS, NULL},
	 { "BlowBotl_tick", _wrap_BlowBotl_tick, METH_VARARGS, NULL},
	 { "BlowBotl_swigregister", BlowBotl_swigregister, METH_O, NULL},
	 { "BlowBotl_swiginit", BlowBotl_swiginit, METH_VARARGS, NULL},
	 { "new_BlowHole", _wrap_new_BlowHole, METH_O, NULL},
	 { "delete_BlowHole", _wrap_delete_BlowHole, METH_O, NULL},
	 { "BlowHole_clear", _wrap_BlowHole_clear, METH_O, NULL},
	 { "BlowHole_setFrequency", _wrap_BlowHole_setFrequency, METH_VARARGS, NULL},
	 { "BlowHole_setTonehole", _wrap_BlowHole_setTonehole, METH_VARARGS, NULL},
	 { "BlowHole_setVent", _wrap_BlowHole_setVent, METH_VARARGS, NULL},
	 { "BlowHole_startBlowing", _wrap_BlowHole_startBlowing, METH_VARARGS, NULL},
	 { "BlowHole_stopBlowing", _wrap_BlowHole_stopBlowing, METH_VARARGS, NULL},
	 { "BlowHole_noteOn", _wrap_BlowHole_noteOn, METH_VARARGS, NULL},
	 { "BlowHole_noteOff", _wrap_BlowHole_noteOff, METH_VARARGS, NULL},
	 { "BlowHole_controlChange", _wrap_BlowHole_controlChange, METH_VARARGS, NULL},
	 { "BlowHole_tick", _wrap_BlowHole_tick, METH_VARARGS, NULL},
	 { "BlowHole_swigregister", BlowHole_swigregister, METH_O, NULL},
	 { "BlowHole_swiginit", BlowHole_swiginit, METH_VARARGS, NULL},
	 { "new_BowTable", _wrap_new_BowTable, METH_NOARGS, NULL},
	 { "BowTable_setOffset", _wrap_BowTable_setOffset, METH_VARARGS, NULL},
	 { "BowTable_setSlope", _wrap_BowTable_setSlope, METH_VARARGS, NULL},
	 { "BowTable_setMinOutput", _wrap_BowTable_setMinOutput, METH_VARARGS, NULL},
	 { "BowTable_setMaxOutput", _wrap_BowTable_setMaxOutput, METH_VARARGS, NULL},
	 { "BowTable_tick", _wrap_BowTable_tick, METH_VARARGS, NULL},
	 { "delete_BowTable", _wrap_delete_BowTable, METH_O, NULL},
	 { "BowTable_swigregister", BowTable_swigregister, METH_O, NULL},
	 { "BowTable_swiginit", BowTable_swiginit, METH_VARARGS, NULL},
	 { "delete_Bowed", _wrap_delete_Bowed, METH_O, NULL},
	 { "Bowed_clear", _wrap_Bowed_clear, METH_O, NULL},
	 { "Bowed_setFrequency", _wrap_Bowed_setFrequency, METH_VARARGS, NULL},
	 { "Bowed_setVibrato", _wrap_Bowed_setVibrato, METH_VARARGS, NULL},
	 { "Bowed_startBowing", _wrap_Bowed_startBowing, METH_VARARGS, NULL},
	 { "Bowed_stopBowing", _wrap_Bowed_stopBowing, METH_VARARGS, NULL},
	 { "Bowed_noteOn", _wrap_Bowed_noteOn, METH_VARARGS, NULL},
	 { "Bowed_noteOff", _wrap_Bowed_noteOff, METH_VARARGS, NULL},
	 { "Bowed_controlChange", _wrap_Bowed_controlChange, METH_VARARGS, NULL},
	 { "Bowed_tick", _wrap_Bowed_tick, METH_VARARGS, NULL},
	 { "Bowed_swigregister", Bowed_swigregister, METH_O, NULL},
	 { "new_Brass", _wrap_new_Brass, METH_VARARGS, NULL},
	 { "delete_Brass", _wrap_delete_Brass, METH_O, NULL},
	 { "Brass_clear", _wrap_Brass_clear, METH_O, NULL},
	 { "Brass_setFrequency", _wrap_Brass_setFrequency, METH_VARARGS, NULL},
	 { "Brass_setLip", _wrap_Brass_setLip, METH_VARARGS, NULL},
	 { "Brass_startBlowing", _wrap_Brass_startBlowing, METH_VARARGS, NULL},
	 { "Brass_stopBlowing", _wrap_Brass_stopBlowing, METH_VARARGS, NULL},
	 { "Brass_noteOn", _wrap_Brass_noteOn, METH_VARARGS, NULL},
	 { "Brass_noteOff", _wrap_Brass_noteOff, METH_VARARGS, NULL},
	 { "Brass_controlChange", _wrap_Brass_controlChange, METH_VARARGS, NULL},
	 { "Brass_tick", _wrap_Brass_tick, METH_VARARGS, NULL},
	 { "Brass_swigregister", Brass_swigregister, METH_O, NULL},
	 { "Brass_swiginit", Brass_swiginit, METH_VARARGS, NULL},
	 { "new_Chorus", _wrap_new_Chorus, METH_VARARGS, NULL},
	 { "Chorus_clear", _wrap_Chorus_clear, METH_O, NULL},
	 { "Chorus_setModDepth", _wrap_Chorus_setModDepth, METH_VARARGS, NULL},
	 { "Chorus_setModFrequency", _wrap_Chorus_setModFrequency, METH_VARARGS, NULL},
	 { "Chorus_lastOut", _wrap_Chorus_lastOut, METH_VARARGS, NULL},
	 { "Chorus_tick", _wrap_Chorus_tick, METH_VARARGS, NULL},
	 { "delete_Chorus", _wrap_delete_Chorus, METH_O, NULL},
	 { "Chorus_swigregister", Chorus_swigregister, METH_O, NULL},
	 { "Chorus_swiginit", Chorus_swiginit, METH_VARARGS, NULL},
	 { "new_Clarinet", _wrap_new_Clarinet, METH_VARARGS, NULL},
	 { "delete_Clarinet", _wrap_delete_Clarinet, METH_O, NULL},
	 { "Clarinet_clear", _wrap_Clarinet_clear, METH_O, NULL},
	 { "Clarinet_setFrequency", _wrap_Clarinet_setFrequency, METH_VARARGS, NULL},
	 { "Clarinet_startBlowing", _wrap_Clarinet_startBlowing, METH_VARARGS, NULL},
	 { "Clarinet_stopBlowing", _wrap_Clarinet_stopBlowing, METH_VARARGS, NULL},
	 { "Clarinet_noteOn", _wrap_Clarinet_noteOn, METH_VARARGS, NULL},
	 { "Clarinet_noteOff", _wrap_Clarinet_noteOff, METH_VARARGS, NULL},
	 { "Clarinet_controlChange", _wrap_Clarinet_controlChange, METH_VARARGS, NULL},
	 { "Clarinet_tick", _wrap_Clarinet_tick, METH_VARARGS, NULL},
	 { "Clarinet_swigregister", Clarinet_swigregister, METH_O, NULL},
	 { "Clarinet_swiginit", Clarinet_swiginit, METH_VARARGS, NULL},
	 { "new_Cubic", _wrap_new_Cubic, METH_NOARGS, NULL},
	 { "Cubic_setA1", _wrap_Cubic_setA1, METH_VARARGS, NULL},
	 { "Cubic_setA2", _wrap_Cubic_setA2, METH_VARARGS, NULL},
	 { "Cubic_setA3", _wrap_Cubic_setA3, METH_VARARGS, NULL},
	 { "Cubic_setGain", _wrap_Cubic_setGain, METH_VARARGS, NULL},
	 { "Cubic_setThreshold", _wrap_Cubic_setThreshold, METH_VARARGS, NULL},
	 { "Cubic_tick", _wrap_Cubic_tick, METH_VARARGS, NULL},
	 { "delete_Cubic", _wrap_delete_Cubic, METH_O, NULL},
	 { "Cubic_swigregister", Cubic_swigregister, METH_O, NULL},
	 { "Cubic_swiginit", Cubic_swiginit, METH_VARARGS, NULL},
	 { "new_Delay", _wrap_new_Delay, METH_VARARGS, NULL},
	 { "delete_Delay", _wrap_delete_Delay, METH_O, NULL},
	 { "Delay_getMaximumDelay", _wrap_Delay_getMaximumDelay, METH_O, NULL},
	 { "Delay_setMaximumDelay", _wrap_Delay_setMaximumDelay, METH_VARARGS, NULL},
	 { "Delay_setDelay", _wrap_Delay_setDelay, METH_VARARGS, NULL},
	 { "Delay_getDelay", _wrap_Delay_getDelay, METH_O, NULL},
	 { "Delay_tapOut", _wrap_Delay_tapOut, METH_VARARGS, NULL},
	 { "Delay_tapIn", _wrap_Delay_tapIn, METH_VARARGS, NULL},
	 { "Delay_addTo", _wrap_Delay_addTo, METH_VARARGS, NULL},
	 { "Delay_lastOut", _wrap_Delay_lastOut, METH_O, NULL},
	 { "Delay_nextOut", _wrap_Delay_nextOut, METH_O, NULL},
	 { "Delay_energy", _wrap_Delay_energy, METH_O, NULL},
	 { "Delay_tick", _wrap_Delay_tick, METH_VARARGS, NULL},
	 { "Delay_swigregister", Delay_swigregister, METH_O, NULL},
	 { "Delay_swiginit", Delay_swiginit, METH_VARARGS, NULL},
	 { "new_DelayA", _wrap_new_DelayA, METH_VARARGS, NULL},
	 { "delete_DelayA", _wrap_delete_DelayA, METH_O, NULL},
	 { "DelayA_clear", _wrap_DelayA_clear, METH_O, NULL},
	 { "DelayA_getMaximumDelay", _wrap_DelayA_getMaximumDelay, METH_O, NULL},
	 { "DelayA_setMaximumDelay", _wrap_DelayA_setMaximumDelay, METH_VARARGS, NULL},
	 { "DelayA_setDelay", _wrap_DelayA_setDelay, METH_VARARGS, NULL},
	 { "DelayA_getDelay", _wrap_DelayA_getDelay, METH_O, NULL},
	 { "DelayA_tapOut", _wrap_DelayA_tapOut, METH_VARARGS, NULL},
	 { "DelayA_lastOut", _wrap_DelayA_lastOut, METH_O, NULL},
	 { "DelayA_nextOut", _wrap_DelayA_nextOut, METH_O, NULL},
	 { "DelayA_tick", _wrap_DelayA_tick, METH_VARARGS, NULL},
	 { "DelayA_swigregister", DelayA_swigregister, METH_O, NULL},
	 { "DelayA_swiginit", DelayA_swiginit, METH_VARARGS, NULL},
	 { "new_DelayL", _wrap_new_DelayL, METH_VARARGS, NULL},
	 { "delete_DelayL", _wrap_delete_DelayL, METH_O, NULL},
	 { "DelayL_getMaximumDelay", _wrap_DelayL_getMaximumDelay, METH_O, NULL},
	 { "DelayL_setMaximumDelay", _wrap_DelayL_setMaximumDelay, METH_VARARGS, NULL},
	 { "DelayL_setDelay", _wrap_DelayL_setDelay, METH_VARARGS, NULL},
	 { "DelayL_getDelay", _wrap_DelayL_getDelay, METH_O, NULL},
	 { "DelayL_tapOut", _wrap_DelayL_tapOut, METH_VARARGS, NULL},
	 { "DelayL_tapIn", _wrap_DelayL_tapIn, METH_VARARGS, NULL},
	 { "DelayL_lastOut", _wrap_DelayL_lastOut, METH_O, NULL},
	 { "DelayL_nextOut", _wrap_DelayL_nextOut, METH_O, NULL},
	 { "DelayL_tick", _wrap_DelayL_tick, METH_VARARGS, NULL},
	 { "DelayL_swigregister", DelayL_swigregister, METH_O, NULL},
	 { "DelayL_swiginit", DelayL_swiginit, METH_VARARGS, NULL},
	 { "new_Drummer", _wrap_new_Drummer, METH_NOARGS, NULL},
	 { "delete_Drummer", _wrap_delete_Drummer, METH_O, NULL},
	 { "Drummer_noteOn", _wrap_Drummer_noteOn, METH_VARARGS, NULL},
	 { "Drummer_noteOff", _wrap_Drummer_noteOff, METH_VARARGS, NULL},
	 { "Drummer_tick", _wrap_Drummer_tick, METH_VARARGS, NULL},
	 { "Drummer_swigregister", Drummer_swigregister, METH_O, NULL},
	 { "Drummer_swiginit", Drummer_swiginit, METH_VARARGS, NULL},
	 { "new_Echo", _wrap_new_Echo, METH_VARARGS, NULL},
	 { "Echo_clear", _wrap_Echo_clear, METH_O, NULL},
	 { "Echo_setMaximumDelay", _wrap_Echo_setMaximumDelay, METH_VARARGS, NULL},
	 { "Echo_setDelay", _wrap_Echo_setDelay, METH_VARARGS, NULL},
	 { "Echo_lastOut", _wrap_Echo_lastOut, METH_O, NULL},
	 { "Echo_tick", _wrap_Echo_tick, METH_VARARGS, NULL},
	 { "delete_Echo", _wrap_delete_Echo, METH_O, NULL},
	 { "Echo_swigregister", Echo_swigregister, METH_O, NULL},
	 { "Echo_swiginit", Echo_swiginit, METH_VARARGS, NULL},
	 { "new_Envelope", _wrap_new_Envelope, METH_NOARGS, NULL},
	 { "delete_Envelope", _wrap_delete_Envelope, METH_O, NULL},
	 { "Envelope_keyOn", _wrap_Envelope_keyOn, METH_VARARGS, NULL},
	 { "Envelope_keyOff", _wrap_Envelope_keyOff, METH_VARARGS, NULL},
	 { "Envelope_setRate", _wrap_Envelope_setRate, METH_VARARGS, NULL},
	 { "Envelope_setTime", _wrap_Envelope_setTime, METH_VARARGS, NULL},
	 { "Envelope_setTarget", _wrap_Envelope_setTarget, METH_VARARGS, NULL},
	 { "Envelope_setValue", _wrap_Envelope_setValue, METH_VARARGS, NULL},
	 { "Envelope_getState", _wrap_Envelope_getState, METH_O, NULL},
	 { "Envelope_lastOut", _wrap_Envelope_lastOut, METH_O, NULL},
	 { "Envelope_tick", _wrap_Envelope_tick, METH_VARARGS, NULL},
	 { "Envelope_swigregister", Envelope_swigregister, METH_O, NULL},
	 { "Envelope_swiginit", Envelope_swiginit, METH_VARARGS, NULL},
	 { "new_FMVoices", _wrap_new_FMVoices, METH_NOARGS, NULL},
	 { "delete_FMVoices", _wrap_delete_FMVoices, METH_O, NULL},
	 { "FMVoices_setFrequency", _wrap_FMVoices_setFrequency, METH_VARARGS, NULL},
	 { "FMVoices_noteOn", _wrap_FMVoices_noteOn, METH_VARARGS, NULL},
	 { "FMVoices_controlChange", _wrap_FMVoices_controlChange, METH_VARARGS, NULL},
	 { "FMVoices_tick", _wrap_FMVoices_tick, METH_VARARGS, NULL},
	 { "FMVoices_swigregister", FMVoices_swigregister, METH_O, NULL},
	 { "FMVoices_swiginit", FMVoices_swiginit, METH_VARARGS, NULL},
	 { "new_FileRead", _wrap_new_FileRead, METH_VARARGS, NULL},
	 { "delete_FileRead", _wrap_delete_FileRead, METH_O, NULL},
	 { "FileRead_open", _wrap_FileRead_open, METH_VARARGS, NULL},
	 { "FileRead_close", _wrap_FileRead_close, METH_O, NULL},
	 { "FileRead_isOpen", _wrap_FileRead_isOpen, METH_O, NULL},
	 { "FileRead_fileSize", _wrap_FileRead_fileSize, METH_O, NULL},
	 { "FileRead_channels", _wrap_FileRead_channels, METH_O, NULL},
	 { "FileRead_format", _wrap_FileRead_format, METH_O, NULL},
	 { "FileRead_fileRate", _wrap_FileRead_fileRate, METH_O, NULL},
	 { "FileRead_read", _wrap_FileRead_read, METH_VARARGS, NULL},
	 { "FileRead_swigregister", FileRead_swigregister, METH_O, NULL},
	 { "FileRead_swiginit", FileRead_swiginit, METH_VARARGS, NULL},
	 { "new_FileWrite", _wrap_new_FileWrite, METH_VARARGS, NULL},
	 { "delete_FileWrite", _wrap_delete_FileWrite, METH_O, NULL},
	 { "FileWrite_open", _wrap_FileWrite_open, METH_VARARGS, NULL},
	 { "FileWrite_close", _wrap_FileWrite_close, METH_O, NULL},
	 { "FileWrite_isOpen", _wrap_FileWrite_isOpen, METH_O, NULL},
	 { "FileWrite_write", _wrap_FileWrite_write, METH_VARARGS, NULL},
	 { "FileWrite_swigregister", FileWrite_swigregister, METH_O, NULL},
	 { "FileWrite_swiginit", FileWrite_swiginit, METH_VARARGS, NULL},
	 { "new_FileWvIn", _wrap_new_FileWvIn, METH_VARARGS, NULL},
	 { "delete_FileWvIn", _wrap_delete_FileWvIn, METH_O, NULL},
	 { "FileWvIn_openFile", _wrap_FileWvIn_openFile, METH_VARARGS, NULL},
	 { "FileWvIn_closeFile", _wrap_FileWvIn_closeFile, METH_O, NULL},
	 { "FileWvIn_reset", _wrap_FileWvIn_reset, METH_O, NULL},
	 { "FileWvIn_normalize", _wrap_FileWvIn_normalize, METH_VARARGS, NULL},
	 { "FileWvIn_getSize", _wrap_FileWvIn_getSize, METH_O, NULL},
	 { "FileWvIn_getFileRate", _wrap_FileWvIn_getFileRate, METH_O, NULL},
	 { "FileWvIn_isOpen", _wrap_FileWvIn_isOpen, METH_O, NULL},
	 { "FileWvIn_isFinished", _wrap_FileWvIn_isFinished, METH_O, NULL},
	 { "FileWvIn_setRate", _wrap_FileWvIn_setRate, METH_VARARGS, NULL},
	 { "FileWvIn_addTime", _wrap_FileWvIn_addTime, METH_VARARGS, NULL},
	 { "FileWvIn_setInterpolate", _wrap_FileWvIn_setInterpolate, METH_VARARGS, NULL},
	 { "FileWvIn_lastOut", _wrap_FileWvIn_lastOut, METH_VARARGS, NULL},
	 { "FileWvIn_tick", _wrap_FileWvIn_tick, METH_VARARGS, NULL},
	 { "FileWvIn_swigregister", FileWvIn_swigregister, METH_O, NULL},
	 { "FileWvIn_swiginit", FileWvIn_swiginit, METH_VARARGS, NULL},
	 { "new_FileWvOut", _wrap_new_FileWvOut, METH_VARARGS, NULL},
	 { "delete_FileWvOut", _wrap_delete_FileWvOut, METH_O, NULL},
	 { "FileWvOut_openFile", _wrap_FileWvOut_openFile, METH_VARARGS, NULL},
	 { "FileWvOut_closeFile", _wrap_FileWvOut_closeFile, METH_O, NULL},
	 { "FileWvOut_tick", _wrap_FileWvOut_tick, METH_VARARGS, NULL},
	 { "FileWvOut_swigregister", FileWvOut_swigregister, METH_O, NULL},
	 { "FileWvOut_swiginit", FileWvOut_swiginit, METH_VARARGS, NULL},
	 { "new_FileLoop", _wrap_new_FileLoop, METH_VARARGS, NULL},
	 { "delete_FileLoop", _wrap_delete_FileLoop, METH_O, NULL},
	 { "FileLoop_openFile", _wrap_FileLoop_openFile, METH_VARARGS, NULL},
	 { "FileLoop_closeFile", _wrap_FileLoop_closeFile, METH_O, NULL},
	 { "FileLoop_reset", _wrap_FileLoop_reset, METH_O, NULL},
	 { "FileLoop_channelsOut", _wrap_FileLoop_channelsOut, METH_O, NULL},
	 { "FileLoop_normalize", _wrap_FileLoop_normalize, METH_VARARGS, NULL},
	 { "FileLoop_getSize", _wrap_FileLoop_getSize, METH_O, NULL},
	 { "FileLoop_getFileRate", _wrap_FileLoop_getFileRate, METH_O, NULL},
	 { "FileLoop_setRate", _wrap_FileLoop_setRate, METH_VARARGS, NULL},
	 { "FileLoop_setFrequency", _wrap_FileLoop_setFrequency, METH_VARARGS, NULL},
	 { "FileLoop_addTime", _wrap_FileLoop_addTime, METH_VARARGS, NULL},
	 { "FileLoop_addPhase", _wrap_FileLoop_addPhase, METH_VARARGS, NULL},
	 { "FileLoop_addPhaseOffset", _wrap_FileLoop_addPhaseOffset, METH_VARARGS, NULL},
	 { "FileLoop_lastOut", _wrap_FileLoop_lastOut, METH_VARARGS, NULL},
	 { "FileLoop_tick", _wrap_FileLoop_tick, METH_VARARGS, NULL},
	 { "FileLoop_swigregister", FileLoop_swigregister, METH_O, NULL},
	 { "FileLoop_swiginit", FileLoop_swiginit, METH_VARARGS, NULL},
	 { "new_Fir", _wrap_new_Fir, METH_VARARGS, NULL},
	 { "delete_Fir", _wrap_delete_Fir, METH_O, NULL},
	 { "Fir_setCoefficients", _wrap_Fir_setCoefficients, METH_VARARGS, NULL},
	 { "Fir_lastOut", _wrap_Fir_lastOut, METH_O, NULL},
	 { "Fir_tick", _wrap_Fir_tick, METH_VARARGS, NULL},
	 { "Fir_swigregister", Fir_swigregister, METH_O, NULL},
	 { "Fir_swiginit", Fir_swiginit, METH_VARARGS, NULL},
	 { "new_Flute", _wrap_new_Flute, METH_O, NULL},
	 { "delete_Flute", _wrap_delete_Flute, METH_O, NULL},
	 { "Flute_clear", _wrap_Flute_clear, METH_O, NULL},
	 { "Flute_setFrequency", _wrap_Flute_setFrequency, METH_VARARGS, NULL},
	 { "Flute_setJetReflection", _wrap_Flute_setJetReflection, METH_VARARGS, NULL},
	 { "Flute_setEndReflection", _wrap_Flute_setEndReflection, METH_VARARGS, NULL},
	 { "Flute_setJetDelay", _wrap_Flute_setJetDelay, METH_VARARGS, NULL},
	 { "Flute_startBlowing", _wrap_Flute_startBlowing, METH_VARARGS, NULL},
	 { "Flute_stopBlowing", _wrap_Flute_stopBlowing, METH_VARARGS, NULL},
	 { "Flute_noteOn", _wrap_Flute_noteOn, METH_VARARGS, NULL},
	 { "Flute_noteOff", _wrap_Flute_noteOff, METH_VARARGS, NULL},
	 { "Flute_controlChange", _wrap_Flute_controlChange, METH_VARARGS, NULL},
	 { "Flute_tick", _wrap_Flute_tick, METH_VARARGS, NULL},
	 { "Flute_swigregister", Flute_swigregister, METH_O, NULL},
	 { "Flute_swiginit", Flute_swiginit, METH_VARARGS, NULL},
	 { "new_FormSwep", _wrap_new_FormSwep, METH_NOARGS, NULL},
	 { "delete_FormSwep", _wrap_delete_FormSwep, METH_O, NULL},
	 { "FormSwep_ignoreSampleRateChange", _wrap_FormSwep_ignoreSampleRateChange, METH_VARARGS, NULL},
	 { "FormSwep_setResonance", _wrap_FormSwep_setResonance, METH_VARARGS, NULL},
	 { "FormSwep_setStates", _wrap_FormSwep_setStates, METH_VARARGS, NULL},
	 { "FormSwep_setTargets", _wrap_FormSwep_setTargets, METH_VARARGS, NULL},
	 { "FormSwep_setSweepRate", _wrap_FormSwep_setSweepRate, METH_VARARGS, NULL},
	 { "FormSwep_setSweepTime", _wrap_FormSwep_setSweepTime, METH_VARARGS, NULL},
	 { "FormSwep_lastOut", _wrap_FormSwep_lastOut, METH_O, NULL},
	 { "FormSwep_tick", _wrap_FormSwep_tick, METH_VARARGS, NULL},
	 { "FormSwep_swigregister", FormSwep_swigregister, METH_O, NULL},
	 { "FormSwep_swiginit", FormSwep_swiginit, METH_VARARGS, NULL},
	 { "new_FreeVerb", _wrap_new_FreeVerb, METH_NOARGS, NULL},
	 { "delete_FreeVerb", _wrap_delete_FreeVerb, METH_O, NULL},
	 { "FreeVerb_setEffectMix", _wrap_FreeVerb_setEffectMix, METH_VARARGS, NULL},
	 { "FreeVerb_setRoomSize", _wrap_FreeVerb_setRoomSize, METH_VARARGS, NULL},
	 { "FreeVerb_getRoomSize", _wrap_FreeVerb_getRoomSize, METH_O, NULL},
	 { "FreeVerb_setDamping", _wrap_FreeVerb_setDamping, METH_VARARGS, NULL},
	 { "FreeVerb_getDamping", _wrap_FreeVerb_getDamping, METH_O, NULL},
	 { "FreeVerb_setWidth", _wrap_FreeVerb_setWidth, METH_VARARGS, NULL},
	 { "FreeVerb_getWidth", _wrap_FreeVerb_getWidth, METH_O, NULL},
	 { "FreeVerb_setMode", _wrap_FreeVerb_setMode, METH_VARARGS, NULL},
	 { "FreeVerb_getMode", _wrap_FreeVerb_getMode, METH_O, NULL},
	 { "FreeVerb_clear", _wrap_FreeVerb_clear, METH_O, NULL},
	 { "FreeVerb_lastOut", _wrap_FreeVerb_lastOut, METH_VARARGS, NULL},
	 { "FreeVerb_tick", _wrap_FreeVerb_tick, METH_VARARGS, NULL},
	 { "FreeVerb_swigregister", FreeVerb_swigregister, METH_O, NULL},
	 { "FreeVerb_swiginit", FreeVerb_swiginit, METH_VARARGS, NULL},
	 { "new_Granulate", _wrap_new_Granulate, METH_VARARGS, NULL},
	 { "delete_Granulate", _wrap_delete_Granulate, METH_O, NULL},
	 { "Granulate_openFile", _wrap_Granulate_openFile, METH_VARARGS, NULL},
	 { "Granulate_reset", _wrap_Granulate_reset, METH_O, NULL},
	 { "Granulate_setVoices", _wrap_Granulate_setVoices, METH_VARARGS, NULL},
	 { "Granulate_setStretch", _wrap_Granulate_setStretch, METH_VARARGS, NULL},
	 { "Granulate_setGrainParameters", _wrap_Granulate_setGrainParameters, METH_VARARGS, NULL},
	 { "Granulate_setRandomFactor", _wrap_Granulate_setRandomFactor, METH_VARARGS, NULL},
	 { "Granulate_lastOut", _wrap_Granulate_lastOut, METH_VARARGS, NULL},
	 { "Granulate_tick", _wrap_Granulate_tick, METH_VARARGS, NULL},
	 { "Granulate_swigregister", Granulate_swigregister, METH_O, NULL},
	 { "Granulate_swiginit", Granulate_swiginit, METH_VARARGS, NULL},
	 { "new_Guitar", _wrap_new_Guitar, METH_VARARGS, NULL},
	 { "Guitar_clear", _wrap_Guitar_clear, METH_O, NULL},
	 { "Guitar_setBodyFile", _wrap_Guitar_setBodyFile, METH_VARARGS, NULL},
	 { "Guitar_setPluckPosition", _wrap_Guitar_setPluckPosition, METH_VARARGS, NULL},
	 { "Guitar_setLoopGain", _wrap_Guitar_setLoopGain, METH_VARARGS, NULL},
	 { "Guitar_setFrequency", _wrap_Guitar_setFrequency, METH_VARARGS, NULL},
	 { "Guitar_noteOn", _wrap_Guitar_noteOn, METH_VARARGS, NULL},
	 { "Guitar_noteOff", _wrap_Guitar_noteOff, METH_VARARGS, NULL},
	 { "Guitar_controlChange", _wrap_Guitar_controlChange, METH_VARARGS, NULL},
	 { "Guitar_lastOut", _wrap_Guitar_lastOut, METH_O, NULL},
	 { "Guitar_tick", _wrap_Guitar_tick, METH_VARARGS, NULL},
	 { "delete_Guitar", _wrap_delete_Guitar, METH_O, NULL},
	 { "Guitar_swigregister", Guitar_swigregister, METH_O, NULL},
	 { "Guitar_swiginit", Guitar_swiginit, METH_VARARGS, NULL},
	 { "new_HevyMetl", _wrap_new_HevyMetl, METH_NOARGS, NULL},
	 { "delete_HevyMetl", _wrap_delete_HevyMetl, METH_O, NULL},
	 { "HevyMetl_noteOn", _wrap_HevyMetl_noteOn, METH_VARARGS, NULL},
	 { "HevyMetl_tick", _wrap_HevyMetl_tick, METH_VARARGS, NULL},
	 { "HevyMetl_swigregister", HevyMetl_swigregister, METH_O, NULL},
	 { "HevyMetl_swiginit", HevyMetl_swiginit, METH_VARARGS, NULL},
	 { "new_Iir", _wrap_new_Iir, METH_VARARGS, NULL},
	 { "delete_Iir", _wrap_delete_Iir, METH_O, NULL},
	 { "Iir_setCoefficients", _wrap_Iir_setCoefficients, METH_VARARGS, NULL},
	 { "Iir_setNumerator", _wrap_Iir_setNumerator, METH_VARARGS, NULL},
	 { "Iir_setDenominator", _wrap_Iir_setDenominator, METH_VARARGS, NULL},
	 { "Iir_lastOut", _wrap_Iir_lastOut, METH_O, NULL},
	 { "Iir_tick", _wrap_Iir_tick, METH_VARARGS, NULL},
	 { "Iir_swigregister", Iir_swigregister, METH_O, NULL},
	 { "Iir_swiginit", Iir_swiginit, METH_VARARGS, NULL},
	 { "new_JCRev", _wrap_new_JCRev, METH_VARARGS, NULL},
	 { "JCRev_clear", _wrap_JCRev_clear, METH_O, NULL},
	 { "JCRev_setT60", _wrap_JCRev_setT60, METH_VARARGS, NULL},
	 { "JCRev_lastOut", _wrap_JCRev_lastOut, METH_VARARGS, NULL},
	 { "JCRev_tick", _wrap_JCRev_tick, METH_VARARGS, NULL},
	 { "delete_JCRev", _wrap_delete_JCRev, METH_O, NULL},
	 { "JCRev_swigregister", JCRev_swigregister, METH_O, NULL},
	 { "JCRev_swiginit", JCRev_swiginit, METH_VARARGS, NULL},
	 { "JetTable_tick", _wrap_JetTable_tick, METH_VARARGS, NULL},
	 { "new_JetTable", _wrap_new_JetTable, METH_NOARGS, NULL},
	 { "delete_JetTable", _wrap_delete_JetTable, METH_O, NULL},
	 { "JetTable_swigregister", JetTable_swigregister, METH_O, NULL},
	 { "JetTable_swiginit", JetTable_swiginit, METH_VARARGS, NULL},
	 { "new_LentPitShift", _wrap_new_LentPitShift, METH_VARARGS, NULL},
	 { "delete_LentPitShift", _wrap_delete_LentPitShift, METH_O, NULL},
	 { "LentPitShift_clear", _wrap_LentPitShift_clear, METH_O, NULL},
	 { "LentPitShift_setShift", _wrap_LentPitShift_setShift, METH_VARARGS, NULL},
	 { "LentPitShift_tick", _wrap_LentPitShift_tick, METH_VARARGS, NULL},
	 { "LentPitShift_swigregister", LentPitShift_swigregister, METH_O, NULL},
	 { "LentPitShift_swiginit", LentPitShift_swiginit, METH_VARARGS, NULL},
	 { "new_Mandolin", _wrap_new_Mandolin, METH_O, NULL},
	 { "delete_Mandolin", _wrap_delete_Mandolin, METH_O, NULL},
	 { "Mandolin_clear", _wrap_Mandolin_clear, METH_O, NULL},
	 { "Mandolin_setDetune", _wrap_Mandolin_setDetune, METH_VARARGS, NULL},
	 { "Mandolin_setBodySize", _wrap_Mandolin_setBodySize, METH_VARARGS, NULL},
	 { "Mandolin_setPluckPosition", _wrap_Mandolin_setPluckPosition, METH_VARARGS, NULL},
	 { "Mandolin_setFrequency", _wrap_Mandolin_setFrequency, METH_VARARGS, NULL},
	 { "Mandolin_pluck", _wrap_Mandolin_pluck, METH_VARARGS, NULL},
	 { "Mandolin_noteOn", _wrap_Mandolin_noteOn, METH_VARARGS, NULL},
	 { "Mandolin_noteOff", _wrap_Mandolin_noteOff, METH_VARARGS, NULL},
	 { "Mandolin_controlChange", _wrap_Mandolin_controlChange, METH_VARARGS, NULL},
	 { "Mandolin_tick", _wrap_Mandolin_tick, METH_VARARGS, NULL},
	 { "Mandolin_swigregister", Mandolin_swigregister, METH_O, NULL},
	 { "Mandolin_swiginit", Mandolin_swiginit, METH_VARARGS, NULL},
	 { "new_Mesh2D", _wrap_new_Mesh2D, METH_VARARGS, NULL},
	 { "delete_Mesh2D", _wrap_delete_Mesh2D, METH_O, NULL},
	 { "Mesh2D_clear", _wrap_Mesh2D_clear, METH_O, NULL},
	 { "Mesh2D_setNX", _wrap_Mesh2D_setNX, METH_VARARGS, NULL},
	 { "Mesh2D_setNY", _wrap_Mesh2D_setNY, METH_VARARGS, NULL},
	 { "Mesh2D_setInputPosition", _wrap_Mesh2D_setInputPosition, METH_VARARGS, NULL},
	 { "Mesh2D_setDecay", _wrap_Mesh2D_setDecay, METH_VARARGS, NULL},
	 { "Mesh2D_noteOn", _wrap_Mesh2D_noteOn, METH_VARARGS, NULL},
	 { "Mesh2D_noteOff", _wrap_Mesh2D_noteOff, METH_VARARGS, NULL},
	 { "Mesh2D_energy", _wrap_Mesh2D_energy, METH_O, NULL},
	 { "Mesh2D_inputTick", _wrap_Mesh2D_inputTick, METH_VARARGS, NULL},
	 { "Mesh2D_controlChange", _wrap_Mesh2D_controlChange, METH_VARARGS, NULL},
	 { "Mesh2D_tick", _wrap_Mesh2D_tick, METH_VARARGS, NULL},
	 { "Mesh2D_swigregister", Mesh2D_swigregister, METH_O, NULL},
	 { "Mesh2D_swiginit", Mesh2D_swiginit, METH_VARARGS, NULL},
	 { "new_Messager", _wrap_new_Messager, METH_NOARGS, NULL},
	 { "delete_Messager", _wrap_delete_Messager, METH_O, NULL},
	 { "Messager_popMessage", _wrap_Messager_popMessage, METH_VARARGS, NULL},
	 { "Messager_pushMessage", _wrap_Messager_pushMessage, METH_VARARGS, NULL},
	 { "Messager_setScoreFile", _wrap_Messager_setScoreFile, METH_VARARGS, NULL},
	 { "Messager_swigregister", Messager_swigregister, METH_O, NULL},
	 { "Messager_swiginit", Messager_swiginit, METH_VARARGS, NULL},
	 { "new_MidiFileIn", _wrap_new_MidiFileIn, METH_O, NULL},
	 { "delete_MidiFileIn", _wrap_delete_MidiFileIn, METH_O, NULL},
	 { "MidiFileIn_getFileFormat", _wrap_MidiFileIn_getFileFormat, METH_O, NULL},
	 { "MidiFileIn_getNumberOfTracks", _wrap_MidiFileIn_getNumberOfTracks, METH_O, NULL},
	 { "MidiFileIn_getDivision", _wrap_MidiFileIn_getDivision, METH_O, NULL},
	 { "MidiFileIn_rewindTrack", _wrap_MidiFileIn_rewindTrack, METH_VARARGS, NULL},
	 { "MidiFileIn_getTickSeconds", _wrap_MidiFileIn_getTickSeconds, METH_VARARGS, NULL},
	 { "MidiFileIn_getNextEvent", _wrap_MidiFileIn_getNextEvent, METH_VARARGS, NULL},
	 { "MidiFileIn_getNextMidiEvent", _wrap_MidiFileIn_getNextMidiEvent, METH_VARARGS, NULL},
	 { "MidiFileIn_swigregister", MidiFileIn_swigregister, METH_O, NULL},
	 { "MidiFileIn_swiginit", MidiFileIn_swiginit, METH_VARARGS, NULL},
	 { "delete_Modal", _wrap_delete_Modal, METH_O, NULL},
	 { "Modal_clear", _wrap_Modal_clear, METH_O, NULL},
	 { "Modal_setFrequency", _wrap_Modal_setFrequency, METH_VARARGS, NULL},
	 { "Modal_setRatioAndRadius", _wrap_Modal_setRatioAndRadius, METH_VARARGS, NULL},
	 { "Modal_setMasterGain", _wrap_Modal_setMasterGain, METH_VARARGS, NULL},
	 { "Modal_setDirectGain", _wrap_Modal_setDirectGain, METH_VARARGS, NULL},
	 { "Modal_setModeGain", _wrap_Modal_setModeGain, METH_VARARGS, NULL},
	 { "Modal_strike", _wrap_Modal_strike, METH_VARARGS, NULL},
	 { "Modal_damp", _wrap_Modal_damp, METH_VARARGS, NULL},
	 { "Modal_noteOn", _wrap_Modal_noteOn, METH_VARARGS, NULL},
	 { "Modal_noteOff", _wrap_Modal_noteOff, METH_VARARGS, NULL},
	 { "Modal_controlChange", _wrap_Modal_controlChange, METH_VARARGS, NULL},
	 { "Modal_tick", _wrap_Modal_tick, METH_VARARGS, NULL},
	 { "Modal_swigregister", Modal_swigregister, METH_O, NULL},
	 { "new_ModalBar", _wrap_new_ModalBar, METH_NOARGS, NULL},
	 { "delete_ModalBar", _wrap_delete_ModalBar, METH_O, NULL},
	 { "ModalBar_setStickHardness", _wrap_ModalBar_setStickHardness, METH_VARARGS, NULL},
	 { "ModalBar_setStrikePosition", _wrap_ModalBar_setStrikePosition, METH_VARARGS, NULL},
	 { "ModalBar_setPreset", _wrap_ModalBar_setPreset, METH_VARARGS, NULL},
	 { "ModalBar_setModulationDepth", _wrap_ModalBar_setModulationDepth, METH_VARARGS, NULL},
	 { "ModalBar_controlChange", _wrap_ModalBar_controlChange, METH_VARARGS, NULL},
	 { "ModalBar_swigregister", ModalBar_swigregister, METH_O, NULL},
	 { "ModalBar_swiginit", ModalBar_swiginit, METH_VARARGS, NULL},
	 { "new_Modulate", _wrap_new_Modulate, METH_NOARGS, NULL},
	 { "delete_Modulate", _wrap_delete_Modulate, METH_O, NULL},
	 { "Modulate_reset", _wrap_Modulate_reset, METH_O, NULL},
	 { "Modulate_setVibratoRate", _wrap_Modulate_setVibratoRate, METH_VARARGS, NULL},
	 { "Modulate_setVibratoGain", _wrap_Modulate_setVibratoGain, METH_VARARGS, NULL},
	 { "Modulate_setRandomRate", _wrap_Modulate_setRandomRate, METH_VARARGS, NULL},
	 { "Modulate_setRandomGain", _wrap_Modulate_setRandomGain, METH_VARARGS, NULL},
	 { "Modulate_lastOut", _wrap_Modulate_lastOut, METH_O, NULL},
	 { "Modulate_tick", _wrap_Modulate_tick, METH_VARARGS, NULL},
	 { "Modulate_swigregister", Modulate_swigregister, METH_O, NULL},
	 { "Modulate_swiginit", Modulate_swiginit, METH_VARARGS, NULL},
	 { "new_Moog", _wrap_new_Moog, METH_NOARGS, NULL},
	 { "delete_Moog", _wrap_delete_Moog, METH_O, NULL},
	 { "Moog_setFrequency", _wrap_Moog_setFrequency, METH_VARARGS, NULL},
	 { "Moog_noteOn", _wrap_Moog_noteOn, METH_VARARGS, NULL},
	 { "Moog_setModulationSpeed", _wrap_Moog_setModulationSpeed, METH_VARARGS, NULL},
	 { "Moog_setModulationDepth", _wrap_Moog_setModulationDepth, METH_VARARGS, NULL},
	 { "Moog_controlChange", _wrap_Moog_controlChange, METH_VARARGS, NULL},
	 { "Moog_tick", _wrap_Moog_tick, METH_VARARGS, NULL},
	 { "Moog_swigregister", Moog_swigregister, METH_O, NULL},
	 { "Moog_swiginit", Moog_swiginit, METH_VARARGS, NULL},
	 { "new_NRev", _wrap_new_NRev, METH_VARARGS, NULL},
	 { "NRev_clear", _wrap_NRev_clear, METH_O, NULL},
	 { "NRev_setT60", _wrap_NRev_setT60, METH_VARARGS, NULL},
	 { "NRev_lastOut", _wrap_NRev_lastOut, METH_VARARGS, NULL},
	 { "NRev_tick", _wrap_NRev_tick, METH_VARARGS, NULL},
	 { "delete_NRev", _wrap_delete_NRev, METH_O, NULL},
	 { "NRev_swigregister", NRev_swigregister, METH_O, NULL},
	 { "NRev_swiginit", NRev_swiginit, METH_VARARGS, NULL},
	 { "new_Noise", _wrap_new_Noise, METH_VARARGS, NULL},
	 { "Noise_setSeed", _wrap_Noise_setSeed, METH_VARARGS, NULL},
	 { "Noise_lastOut", _wrap_Noise_lastOut, METH_O, NULL},
	 { "Noise_tick", _wrap_Noise_tick, METH_VARARGS, NULL},
	 { "delete_Noise", _wrap_delete_Noise, METH_O, NULL},
	 { "Noise_swigregister", Noise_swigregister, METH_O, NULL},
	 { "Noise_swiginit", Noise_swiginit, METH_VARARGS, NULL},
	 { "new_OnePole", _wrap_new_OnePole, METH_VARARGS, NULL},
	 { "delete_OnePole", _wrap_delete_OnePole, METH_O, NULL},
	 { "OnePole_setB0", _wrap_OnePole_setB0, METH_VARARGS, NULL},
	 { "OnePole_setA1", _wrap_OnePole_setA1, METH_VARARGS, NULL},
	 { "OnePole_setCoefficients", _wrap_OnePole_setCoefficients, METH_VARARGS, NULL},
	 { "OnePole_setPole", _wrap_OnePole_setPole, METH_VARARGS, NULL},
	 { "OnePole_lastOut", _wrap_OnePole_lastOut, METH_O, NULL},
	 { "OnePole_tick", _wrap_OnePole_tick, METH_VARARGS, NULL},
	 { "OnePole_swigregister", OnePole_swigregister, METH_O, NULL},
	 { "OnePole_swiginit", OnePole_swiginit, METH_VARARGS, NULL},
	 { "new_OneZero", _wrap_new_OneZero, METH_VARARGS, NULL},
	 { "delete_OneZero", _wrap_delete_OneZero, METH_O, NULL},
	 { "OneZero_setB0", _wrap_OneZero_setB0, METH_VARARGS, NULL},
	 { "OneZero_setB1", _wrap_OneZero_setB1, METH_VARARGS, NULL},
	 { "OneZero_setCoefficients", _wrap_OneZero_setCoefficients, METH_VARARGS, NULL},
	 { "OneZero_setZero", _wrap_OneZero_setZero, METH_VARARGS, NULL},
	 { "OneZero_lastOut", _wrap_OneZero_lastOut, METH_O, NULL},
	 { "OneZero_tick", _wrap_OneZero_tick, METH_VARARGS, NULL},
	 { "OneZero_swigregister", OneZero_swigregister, METH_O, NULL},
	 { "OneZero_swiginit", OneZero_swiginit, METH_VARARGS, NULL},
	 { "new_PRCRev", _wrap_new_PRCRev, METH_VARARGS, NULL},
	 { "PRCRev_clear", _wrap_PRCRev_clear, METH_O, NULL},
	 { "PRCRev_setT60", _wrap_PRCRev_setT60, METH_VARARGS, NULL},
	 { "PRCRev_lastOut", _wrap_PRCRev_lastOut, METH_VARARGS, NULL},
	 { "PRCRev_tick", _wrap_PRCRev_tick, METH_VARARGS, NULL},
	 { "delete_PRCRev", _wrap_delete_PRCRev, METH_O, NULL},
	 { "PRCRev_swigregister", PRCRev_swigregister, METH_O, NULL},
	 { "PRCRev_swiginit", PRCRev_swiginit, METH_VARARGS, NULL},
	 { "new_PercFlut", _wrap_new_PercFlut, METH_NOARGS, NULL},
	 { "delete_PercFlut", _wrap_delete_PercFlut, METH_O, NULL},
	 { "PercFlut_setFrequency", _wrap_PercFlut_setFrequency, METH_VARARGS, NULL},
	 { "PercFlut_noteOn", _wrap_PercFlut_noteOn, METH_VARARGS, NULL},
	 { "PercFlut_tick", _wrap_PercFlut_tick, METH_VARARGS, NULL},
	 { "PercFlut_swigregister", PercFlut_swigregister, METH_O, NULL},
	 { "PercFlut_swiginit", PercFlut_swiginit, METH_VARARGS, NULL},
	 { "new_Phonemes", _wrap_new_Phonemes, METH_NOARGS, NULL},
	 { "delete_Phonemes", _wrap_delete_Phonemes, METH_O, NULL},
	 { "Phonemes_name", _wrap_Phonemes_name, METH_O, NULL},
	 { "Phonemes_voiceGain", _wrap_Phonemes_voiceGain, METH_O, NULL},
	 { "Phonemes_noiseGain", _wrap_Phonemes_noiseGain, METH_O, NULL},
	 { "Phonemes_formantFrequency", _wrap_Phonemes_formantFrequency, METH_VARARGS, NULL},
	 { "Phonemes_formantRadius", _wrap_Phonemes_formantRadius, METH_VARARGS, NULL},
	 { "Phonemes_formantGain", _wrap_Phonemes_formantGain, METH_VARARGS, NULL},
	 { "Phonemes_swigregister", Phonemes_swigregister, METH_O, NULL},
	 { "Phonemes_swiginit", Phonemes_swiginit, METH_VARARGS, NULL},
	 { "new_PitShift", _wrap_new_PitShift, METH_NOARGS, NULL},
	 { "PitShift_clear", _wrap_PitShift_clear, METH_O, NULL},
	 { "PitShift_setShift", _wrap_PitShift_setShift, METH_VARARGS, NULL},
	 { "PitShift_lastOut", _wrap_PitShift_lastOut, METH_O, NULL},
	 { "PitShift_tick", _wrap_PitShift_tick, METH_VARARGS, NULL},
	 { "delete_PitShift", _wrap_delete_PitShift, METH_O, NULL},
	 { "PitShift_swigregister", PitShift_swigregister, METH_O, NULL},
	 { "PitShift_swiginit", PitShift_swiginit, METH_VARARGS, NULL},
	 { "new_Plucked", _wrap_new_Plucked, METH_VARARGS, NULL},
	 { "delete_Plucked", _wrap_delete_Plucked, METH_O, NULL},
	 { "Plucked_clear", _wrap_Plucked_clear, METH_O, NULL},
	 { "Plucked_setFrequency", _wrap_Plucked_setFrequency, METH_VARARGS, NULL},
	 { "Plucked_pluck", _wrap_Plucked_pluck, METH_VARARGS, NULL},
	 { "Plucked_noteOn", _wrap_Plucked_noteOn, METH_VARARGS, NULL},
	 { "Plucked_noteOff", _wrap_Plucked_noteOff, METH_VARARGS, NULL},
	 { "Plucked_tick", _wrap_Plucked_tick, METH_VARARGS, NULL},
	 { "Plucked_swigregister", Plucked_swigregister, METH_O, NULL},
	 { "Plucked_swiginit", Plucked_swiginit, METH_VARARGS, NULL},
	 { "new_PoleZero", _wrap_new_PoleZero, METH_NOARGS, NULL},
	 { "delete_PoleZero", _wrap_delete_PoleZero, METH_O, NULL},
	 { "PoleZero_setB0", _wrap_PoleZero_setB0, METH_VARARGS, NULL},
	 { "PoleZero_setB1", _wrap_PoleZero_setB1, METH_VARARGS, NULL},
	 { "PoleZero_setA1", _wrap_PoleZero_setA1, METH_VARARGS, NULL},
	 { "PoleZero_setCoefficients", _wrap_PoleZero_setCoefficients, METH_VARARGS, NULL},
	 { "PoleZero_setAllpass", _wrap_PoleZero_setAllpass, METH_VARARGS, NULL},
	 { "PoleZero_setBlockZero", _wrap_PoleZero_setBlockZero, METH_VARARGS, NULL},
	 { "PoleZero_lastOut", _wrap_PoleZero_lastOut, METH_O, NULL},
	 { "PoleZero_tick", _wrap_PoleZero_tick, METH_VARARGS, NULL},
	 { "PoleZero_swigregister", PoleZero_swigregister, METH_O, NULL},
	 { "PoleZero_swiginit", PoleZero_swiginit, METH_VARARGS, NULL},
	 { "new_Recorder", _wrap_new_Recorder, METH_NOARGS, NULL},
	 { "delete_Recorder", _wrap_delete_Recorder, METH_O, NULL},
	 { "Recorder_clear", _wrap_Recorder_clear, METH_O, NULL},
	 { "Recorder_setFrequency", _wrap_Recorder_setFrequency, METH_VARARGS, NULL},
	 { "Recorder_startBlowing", _wrap_Recorder_startBlowing, METH_VARARGS, NULL},
	 { "Recorder_stopBlowing", _wrap_Recorder_stopBlowing, METH_VARARGS, NULL},
	 { "Recorder_noteOn", _wrap_Recorder_noteOn, METH_VARARGS, NULL},
	 { "Recorder_noteOff", _wrap_Recorder_noteOff, METH_VARARGS, NULL},
	 { "Recorder_controlChange", _wrap_Recorder_controlChange, METH_VARARGS, NULL},
	 { "Recorder_tick", _wrap_Recorder_tick, METH_VARARGS, NULL},
	 { "Recorder_setBlowPressure", _wrap_Recorder_setBlowPressure, METH_VARARGS, NULL},
	 { "Recorder_setVibratoGain", _wrap_Recorder_setVibratoGain, METH_VARARGS, NULL},
	 { "Recorder_setVibratoFrequency", _wrap_Recorder_setVibratoFrequency, METH_VARARGS, NULL},
	 { "Recorder_setNoiseGain", _wrap_Recorder_setNoiseGain, METH_VARARGS, NULL},
	 { "Recorder_setBreathCutoff", _wrap_Recorder_setBreathCutoff, METH_VARARGS, NULL},
	 { "Recorder_setSoftness", _wrap_Recorder_setSoftness, METH_VARARGS, NULL},
	 { "Recorder_swigregister", Recorder_swigregister, METH_O, NULL},
	 { "Recorder_swiginit", Recorder_swiginit, METH_VARARGS, NULL},
	 { "new_ReedTable", _wrap_new_ReedTable, METH_NOARGS, NULL},
	 { "ReedTable_setOffset", _wrap_ReedTable_setOffset, METH_VARARGS, NULL},
	 { "ReedTable_setSlope", _wrap_ReedTable_setSlope, METH_VARARGS, NULL},
	 { "ReedTable_tick", _wrap_ReedTable_tick, METH_VARARGS, NULL},
	 { "delete_ReedTable", _wrap_delete_ReedTable, METH_O, NULL},
	 { "ReedTable_swigregister", ReedTable_swigregister, METH_O, NULL},
	 { "ReedTable_swiginit", ReedTable_swiginit, METH_VARARGS, NULL},
	 { "new_Resonate", _wrap_new_Resonate, METH_NOARGS, NULL},
	 { "delete_Resonate", _wrap_delete_Resonate, METH_O, NULL},
	 { "Resonate_setResonance", _wrap_Resonate_setResonance, METH_VARARGS, NULL},
	 { "Resonate_setNotch", _wrap_Resonate_setNotch, METH_VARARGS, NULL},
	 { "Resonate_setEqualGainZeroes", _wrap_Resonate_setEqualGainZeroes, METH_O, NULL},
	 { "Resonate_keyOn", _wrap_Resonate_keyOn, METH_O, NULL},
	 { "Resonate_keyOff", _wrap_Resonate_keyOff, METH_O, NULL},
	 { "Resonate_noteOn", _wrap_Resonate_noteOn, METH_VARARGS, NULL},
	 { "Resonate_noteOff", _wrap_Resonate_noteOff, METH_VARARGS, NULL},
	 { "Resonate_controlChange", _wrap_Resonate_controlChange, METH_VARARGS, NULL},
	 { "Resonate_tick", _wrap_Resonate_tick, METH_VARARGS, NULL},
	 { "Resonate_swigregister", Resonate_swigregister, METH_O, NULL},
	 { "Resonate_swiginit", Resonate_swiginit, METH_VARARGS, NULL},
	 { "new_Rhodey", _wrap_new_Rhodey, METH_NOARGS, NULL},
	 { "delete_Rhodey", _wrap_delete_Rhodey, METH_O, NULL},
	 { "Rhodey_setFrequency", _wrap_Rhodey_setFrequency, METH_VARARGS, NULL},
	 { "Rhodey_noteOn", _wrap_Rhodey_noteOn, METH_VARARGS, NULL},
	 { "Rhodey_tick", _wrap_Rhodey_tick, METH_VARARGS, NULL},
	 { "Rhodey_swigregister", Rhodey_swigregister, METH_O, NULL},
	 { "Rhodey_swiginit", Rhodey_swiginit, METH_VARARGS, NULL},
	 { "new_Saxofony", _wrap_new_Saxofony, METH_O, NULL},
	 { "delete_Saxofony", _wrap_delete_Saxofony, METH_O, NULL},
	 { "Saxofony_clear", _wrap_Saxofony_clear, METH_O, NULL},
	 { "Saxofony_setFrequency", _wrap_Saxofony_setFrequency, METH_VARARGS, NULL},
	 { "Saxofony_setBlowPosition", _wrap_Saxofony_setBlowPosition, METH_VARARGS, NULL},
	 { "Saxofony_startBlowing", _wrap_Saxofony_startBlowing, METH_VARARGS, NULL},
	 { "Saxofony_stopBlowing", _wrap_Saxofony_stopBlowing, METH_VARARGS, NULL},
	 { "Saxofony_noteOn", _wrap_Saxofony_noteOn, METH_VARARGS, NULL},
	 { "Saxofony_noteOff", _wrap_Saxofony_noteOff, METH_VARARGS, NULL},
	 { "Saxofony_controlChange", _wrap_Saxofony_controlChange, METH_VARARGS, NULL},
	 { "Saxofony_tick", _wrap_Saxofony_tick, METH_VARARGS, NULL},
	 { "Saxofony_swigregister", Saxofony_swigregister, METH_O, NULL},
	 { "Saxofony_swiginit", Saxofony_swiginit, METH_VARARGS, NULL},
	 { "new_Shakers", _wrap_new_Shakers, METH_VARARGS, NULL},
	 { "Shakers_noteOn", _wrap_Shakers_noteOn, METH_VARARGS, NULL},
	 { "Shakers_noteOff", _wrap_Shakers_noteOff, METH_VARARGS, NULL},
	 { "Shakers_controlChange", _wrap_Shakers_controlChange, METH_VARARGS, NULL},
	 { "Shakers_tick", _wrap_Shakers_tick, METH_VARARGS, NULL},
	 { "delete_Shakers", _wrap_delete_Shakers, METH_O, NULL},
	 { "Shakers_swigregister", Shakers_swigregister, METH_O, NULL},
	 { "Shakers_swiginit", Shakers_swiginit, METH_VARARGS, NULL},
	 { "new_Simple", _wrap_new_Simple, METH_NOARGS, NULL},
	 { "delete_Simple", _wrap_delete_Simple, METH_O, NULL},
	 { "Simple_setFrequency", _wrap_Simple_setFrequency, METH_VARARGS, NULL},
	 { "Simple_keyOn", _wrap_Simple_keyOn, METH_O, NULL},
	 { "Simple_keyOff", _wrap_Simple_keyOff, METH_O, NULL},
	 { "Simple_noteOn", _wrap_Simple_noteOn, METH_VARARGS, NULL},
	 { "Simple_noteOff", _wrap_Simple_noteOff, METH_VARARGS, NULL},
	 { "Simple_controlChange", _wrap_Simple_controlChange, METH_VARARGS, NULL},
	 { "Simple_tick", _wrap_Simple_tick, METH_VARARGS, NULL},
	 { "Simple_swigregister", Simple_swigregister, METH_O, NULL},
	 { "Simple_swiginit", Simple_swiginit, METH_VARARGS, NULL},
	 { "new_SineWave", _wrap_new_SineWave, METH_NOARGS, NULL},
	 { "delete_SineWave", _wrap_delete_SineWave, METH_O, NULL},
	 { "SineWave_reset", _wrap_SineWave_reset, METH_O, NULL},
	 { "SineWave_setRate", _wrap_SineWave_setRate, METH_VARARGS, NULL},
	 { "SineWave_setFrequency", _wrap_SineWave_setFrequency, METH_VARARGS, NULL},
	 { "SineWave_addTime", _wrap_SineWave_addTime, METH_VARARGS, NULL},
	 { "SineWave_addPhase", _wrap_SineWave_addPhase, METH_VARARGS, NULL},
	 { "SineWave_addPhaseOffset", _wrap_SineWave_addPhaseOffset, METH_VARARGS, NULL},
	 { "SineWave_lastOut", _wrap_SineWave_lastOut, METH_O, NULL},
	 { "SineWave_tick", _wrap_SineWave_tick, METH_VARARGS, NULL},
	 { "SineWave_swigregister", SineWave_swigregister, METH_O, NULL},
	 { "SineWave_swiginit", SineWave_swiginit, METH_VARARGS, NULL},
	 { "new_SingWave", _wrap_new_SingWave, METH_VARARGS, NULL},
	 { "delete_SingWave", _wrap_delete_SingWave, METH_O, NULL},
	 { "SingWave_reset", _wrap_SingWave_reset, METH_O, NULL},
	 { "SingWave_normalize", _wrap_SingWave_normalize, METH_VARARGS, NULL},
	 { "SingWave_setFrequency", _wrap_SingWave_setFrequency, METH_VARARGS, NULL},
	 { "SingWave_setVibratoRate", _wrap_SingWave_setVibratoRate, METH_VARARGS, NULL},
	 { "SingWave_setVibratoGain", _wrap_SingWave_setVibratoGain, METH_VARARGS, NULL},
	 { "SingWave_setRandomGain", _wrap_SingWave_setRandomGain, METH_VARARGS, NULL},
	 { "SingWave_setSweepRate", _wrap_SingWave_setSweepRate, METH_VARARGS, NULL},
	 { "SingWave_setGainRate", _wrap_SingWave_setGainRate, METH_VARARGS, NULL},
	 { "SingWave_setGainTarget", _wrap_SingWave_setGainTarget, METH_VARARGS, NULL},
	 { "SingWave_noteOn", _wrap_SingWave_noteOn, METH_O, NULL},
	 { "SingWave_noteOff", _wrap_SingWave_noteOff, METH_O, NULL},
	 { "SingWave_lastOut", _wrap_SingWave_lastOut, METH_O, NULL},
	 { "SingWave_tick", _wrap_SingWave_tick, METH_VARARGS, NULL},
	 { "SingWave_swigregister", SingWave_swigregister, METH_O, NULL},
	 { "SingWave_swiginit", SingWave_swiginit, METH_VARARGS, NULL},
	 { "new_Sitar", _wrap_new_Sitar, METH_VARARGS, NULL},
	 { "delete_Sitar", _wrap_delete_Sitar, METH_O, NULL},
	 { "Sitar_clear", _wrap_Sitar_clear, METH_O, NULL},
	 { "Sitar_setFrequency", _wrap_Sitar_setFrequency, METH_VARARGS, NULL},
	 { "Sitar_pluck", _wrap_Sitar_pluck, METH_VARARGS, NULL},
	 { "Sitar_noteOn", _wrap_Sitar_noteOn, METH_VARARGS, NULL},
	 { "Sitar_noteOff", _wrap_Sitar_noteOff, METH_VARARGS, NULL},
	 { "Sitar_tick", _wrap_Sitar_tick, METH_VARARGS, NULL},
	 { "Sitar_swigregister", Sitar_swigregister, METH_O, NULL},
	 { "Sitar_swiginit", Sitar_swiginit, METH_VARARGS, NULL},
	 { "new_Sphere", _wrap_new_Sphere, METH_VARARGS, NULL},
	 { "Sphere_setPosition", _wrap_Sphere_setPosition, METH_VARARGS, NULL},
	 { "Sphere_setVelocity", _wrap_Sphere_setVelocity, METH_VARARGS, NULL},
	 { "Sphere_setRadius", _wrap_Sphere_setRadius, METH_VARARGS, NULL},
	 { "Sphere_setMass", _wrap_Sphere_setMass, METH_VARARGS, NULL},
	 { "Sphere_getPosition", _wrap_Sphere_getPosition, METH_O, NULL},
	 { "Sphere_getRelativePosition", _wrap_Sphere_getRelativePosition, METH_VARARGS, NULL},
	 { "Sphere_getVelocity", _wrap_Sphere_getVelocity, METH_VARARGS, NULL},
	 { "Sphere_isInside", _wrap_Sphere_isInside, METH_VARARGS, NULL},
	 { "Sphere_getRadius", _wrap_Sphere_getRadius, METH_O, NULL},
	 { "Sphere_getMass", _wrap_Sphere_getMass, METH_O, NULL},
	 { "Sphere_addVelocity", _wrap_Sphere_addVelocity, METH_VARARGS, NULL},
	 { "Sphere_tick", _wrap_Sphere_tick, METH_VARARGS, NULL},
	 { "delete_Sphere", _wrap_delete_Sphere, METH_O, NULL},
	 { "Sphere_swigregister", Sphere_swigregister, METH_O, NULL},
	 { "Sphere_swiginit", Sphere_swiginit, METH_VARARGS, NULL},
	 { "new_StifKarp", _wrap_new_StifKarp, METH_VARARGS, NULL},
	 { "delete_StifKarp", _wrap_delete_StifKarp, METH_O, NULL},
	 { "StifKarp_clear", _wrap_StifKarp_clear, METH_O, NULL},
	 { "StifKarp_setFrequency", _wrap_StifKarp_setFrequency, METH_VARARGS, NULL},
	 { "StifKarp_setStretch", _wrap_StifKarp_setStretch, METH_VARARGS, NULL},
	 { "StifKarp_setPickupPosition", _wrap_StifKarp_setPickupPosition, METH_VARARGS, NULL},
	 { "StifKarp_setBaseLoopGain", _wrap_StifKarp_setBaseLoopGain, METH_VARARGS, NULL},
	 { "StifKarp_pluck", _wrap_StifKarp_pluck, METH_VARARGS, NULL},
	 { "StifKarp_noteOn", _wrap_StifKarp_noteOn, METH_VARARGS, NULL},
	 { "StifKarp_noteOff", _wrap_StifKarp_noteOff, METH_VARARGS, NULL},
	 { "StifKarp_controlChange", _wrap_StifKarp_controlChange, METH_VARARGS, NULL},
	 { "StifKarp_tick", _wrap_StifKarp_tick, METH_VARARGS, NULL},
	 { "StifKarp_swigregister", StifKarp_swigregister, METH_O, NULL},
	 { "StifKarp_swiginit", StifKarp_swiginit, METH_VARARGS, NULL},
	 { "new_TapDelay", _wrap_new_TapDelay, METH_VARARGS, NULL},
	 { "delete_TapDelay", _wrap_delete_TapDelay, METH_O, NULL},
	 { "TapDelay_setMaximumDelay", _wrap_TapDelay_setMaximumDelay, METH_VARARGS, NULL},
	 { "TapDelay_setTapDelays", _wrap_TapDelay_setTapDelays, METH_VARARGS, NULL},
	 { "TapDelay_getTapDelays", _wrap_TapDelay_getTapDelays, METH_O, NULL},
	 { "TapDelay_lastOut", _wrap_TapDelay_lastOut, METH_VARARGS, NULL},
	 { "TapDelay_tick", _wrap_TapDelay_tick, METH_VARARGS, NULL},
	 { "TapDelay_swigregister", TapDelay_swigregister, METH_O, NULL},
	 { "TapDelay_swiginit", TapDelay_swiginit, METH_VARARGS, NULL},
	 { "new_TubeBell", _wrap_new_TubeBell, METH_NOARGS, NULL},
	 { "delete_TubeBell", _wrap_delete_TubeBell, METH_O, NULL},
	 { "TubeBell_noteOn", _wrap_TubeBell_noteOn, METH_VARARGS, NULL},
	 { "TubeBell_tick", _wrap_TubeBell_tick, METH_VARARGS, NULL},
	 { "TubeBell_swigregister", TubeBell_swigregister, METH_O, NULL},
	 { "TubeBell_swiginit", TubeBell_swiginit, METH_VARARGS, NULL},
	 { "new_Twang", _wrap_new_Twang, METH_VARARGS, NULL},
	 { "Twang_clear", _wrap_Twang_clear, METH_O, NULL},
	 { "Twang_setLowestFrequency", _wrap_Twang_setLowestFrequency, METH_VARARGS, NULL},
	 { "Twang_setFrequency", _wrap_Twang_setFrequency, METH_VARARGS, NULL},
	 { "Twang_setPluckPosition", _wrap_Twang_setPluckPosition, METH_VARARGS, NULL},
	 { "Twang_setLoopGain", _wrap_Twang_setLoopGain, METH_VARARGS, NULL},
	 { "Twang_lastOut", _wrap_Twang_lastOut, METH_O, NULL},
	 { "Twang_tick", _wrap_Twang_tick, METH_VARARGS, NULL},
	 { "delete_Twang", _wrap_delete_Twang, METH_O, NULL},
	 { "Twang_swigregister", Twang_swigregister, METH_O, NULL},
	 { "Twang_swiginit", Twang_swiginit, METH_VARARGS, NULL},
	 { "new_TwoPole", _wrap_new_TwoPole, METH_NOARGS, NULL},
	 { "delete_TwoPole", _wrap_delete_TwoPole, METH_O, NULL},
	 { "TwoPole_ignoreSampleRateChange", _wrap_TwoPole_ignoreSampleRateChange, METH_VARARGS, NULL},
	 { "TwoPole_setB0", _wrap_TwoPole_setB0, METH_VARARGS, NULL},
	 { "TwoPole_setA1", _wrap_TwoPole_setA1, METH_VARARGS, NULL},
	 { "TwoPole_setA2", _wrap_TwoPole_setA2, METH_VARARGS, NULL},
	 { "TwoPole_setCoefficients", _wrap_TwoPole_setCoefficients, METH_VARARGS, NULL},
	 { "TwoPole_setResonance", _wrap_TwoPole_setResonance, METH_VARARGS, NULL},
	 { "TwoPole_lastOut", _wrap_TwoPole_lastOut, METH_O, NULL},
	 { "TwoPole_tick", _wrap_TwoPole_tick, METH_VARARGS, NULL},
	 { "TwoPole_swigregister", TwoPole_swigregister, METH_O, NULL},
	 { "TwoPole_swiginit", TwoPole_swiginit, METH_VARARGS, NULL},
	 { "new_TwoZero", _wrap_new_TwoZero, METH_NOARGS, NULL},
	 { "delete_TwoZero", _wrap_delete_TwoZero, METH_O, NULL},
	 { "TwoZero_ignoreSampleRateChange", _wrap_TwoZero_ignoreSampleRateChange, METH_VARARGS, NULL},
	 { "TwoZero_setB0", _wrap_TwoZero_setB0, METH_VARARGS, NULL},
	 { "TwoZero_setB1", _wrap_TwoZero_setB1, METH_VARARGS, NULL},
	 { "TwoZero_setB2", _wrap_TwoZero_setB2, METH_VARARGS, NULL},
	 { "TwoZero_setCoefficients", _wrap_TwoZero_setCoefficients, METH_VARARGS, NULL},
	 { "TwoZero_setNotch", _wrap_TwoZero_setNotch, METH_VARARGS, NULL},
	 { "TwoZero_lastOut", _wrap_TwoZero_lastOut, METH_O, NULL},
	 { "TwoZero_tick", _wrap_TwoZero_tick, METH_VARARGS, NULL},
	 { "TwoZero_swigregister", TwoZero_swigregister, METH_O, NULL},
	 { "TwoZero_swiginit", TwoZero_swiginit, METH_VARARGS, NULL},
	 { "new_Vector3D", _wrap_new_Vector3D, METH_VARARGS, NULL},
	 { "Vector3D_getX", _wrap_Vector3D_getX, METH_O, NULL},
	 { "Vector3D_getY", _wrap_Vector3D_getY, METH_O, NULL},
	 { "Vector3D_getZ", _wrap_Vector3D_getZ, METH_O, NULL},
	 { "Vector3D_getLength", _wrap_Vector3D_getLength, METH_O, NULL},
	 { "Vector3D_setXYZ", _wrap_Vector3D_setXYZ, METH_VARARGS, NULL},
	 { "Vector3D_setX", _wrap_Vector3D_setX, METH_VARARGS, NULL},
	 { "Vector3D_setY", _wrap_Vector3D_setY, METH_VARARGS, NULL},
	 { "Vector3D_setZ", _wrap_Vector3D_setZ, METH_VARARGS, NULL},
	 { "delete_Vector3D", _wrap_delete_Vector3D, METH_O, NULL},
	 { "Vector3D_swigregister", Vector3D_swigregister, METH_O, NULL},
	 { "Vector3D_swiginit", Vector3D_swiginit, METH_VARARGS, NULL},
	 { "new_VoicForm", _wrap_new_VoicForm, METH_NOARGS, NULL},
	 { "delete_VoicForm", _wrap_delete_VoicForm, METH_O, NULL},
	 { "VoicForm_clear", _wrap_VoicForm_clear, METH_O, NULL},
	 { "VoicForm_setFrequency", _wrap_VoicForm_setFrequency, METH_VARARGS, NULL},
	 { "VoicForm_setPhoneme", _wrap_VoicForm_setPhoneme, METH_VARARGS, NULL},
	 { "VoicForm_setVoiced", _wrap_VoicForm_setVoiced, METH_VARARGS, NULL},
	 { "VoicForm_setUnVoiced", _wrap_VoicForm_setUnVoiced, METH_VARARGS, NULL},
	 { "VoicForm_setFilterSweepRate", _wrap_VoicForm_setFilterSweepRate, METH_VARARGS, NULL},
	 { "VoicForm_setPitchSweepRate", _wrap_VoicForm_setPitchSweepRate, METH_VARARGS, NULL},
	 { "VoicForm_speak", _wrap_VoicForm_speak, METH_O, NULL},
	 { "VoicForm_quiet", _wrap_VoicForm_quiet, METH_O, NULL},
	 { "VoicForm_noteOn", _wrap_VoicForm_noteOn, METH_VARARGS, NULL},
	 { "VoicForm_noteOff", _wrap_VoicForm_noteOff, METH_VARARGS, NULL},
	 { "VoicForm_controlChange", _wrap_VoicForm_controlChange, METH_VARARGS, NULL},
	 { "VoicForm_tick", _wrap_VoicForm_tick, METH_VARARGS, NULL},
	 { "VoicForm_swigregister", VoicForm_swigregister, METH_O, NULL},
	 { "VoicForm_swiginit", VoicForm_swiginit, METH_VARARGS, NULL},
	 { "new_Voicer", _wrap_new_Voicer, METH_VARARGS, NULL},
	 { "Voicer_addInstrument", _wrap_Voicer_addInstrument, METH_VARARGS, NULL},
	 { "Voicer_removeInstrument", _wrap_Voicer_removeInstrument, METH_VARARGS, NULL},
	 { "Voicer_noteOn", _wrap_Voicer_noteOn, METH_VARARGS, NULL},
	 { "Voicer_noteOff", _wrap_Voicer_noteOff, METH_VARARGS, NULL},
	 { "Voicer_setFrequency", _wrap_Voicer_setFrequency, METH_VARARGS, NULL},
	 { "Voicer_pitchBend", _wrap_Voicer_pitchBend, METH_VARARGS, NULL},
	 { "Voicer_controlChange", _wrap_Voicer_controlChange, METH_VARARGS, NULL},
	 { "Voicer_silence", _wrap_Voicer_silence, METH_O, NULL},
	 { "Voicer_channelsOut", _wrap_Voicer_channelsOut, METH_O, NULL},
	 { "Voicer_lastFrame", _wrap_Voicer_lastFrame, METH_O, NULL},
	 { "Voicer_lastOut", _wrap_Voicer_lastOut, METH_VARARGS, NULL},
	 { "Voicer_tick", _wrap_Voicer_tick, METH_VARARGS, NULL},
	 { "delete_Voicer", _wrap_delete_Voicer, METH_O, NULL},
	 { "Voicer_swigregister", Voicer_swigregister, METH_O, NULL},
	 { "Voicer_swiginit", Voicer_swiginit, METH_VARARGS, NULL},
	 { "new_Whistle", _wrap_new_Whistle, METH_NOARGS, NULL},
	 { "delete_Whistle", _wrap_delete_Whistle, METH_O, NULL},
	 { "Whistle_clear", _wrap_Whistle_clear, METH_O, NULL},
	 { "Whistle_setFrequency", _wrap_Whistle_setFrequency, METH_VARARGS, NULL},
	 { "Whistle_startBlowing", _wrap_Whistle_startBlowing, METH_VARARGS, NULL},
	 { "Whistle_stopBlowing", _wrap_Whistle_stopBlowing, METH_VARARGS, NULL},
	 { "Whistle_noteOn", _wrap_Whistle_noteOn, METH_VARARGS, NULL},
	 { "Whistle_noteOff", _wrap_Whistle_noteOff, METH_VARARGS, NULL},
	 { "Whistle_controlChange", _wrap_Whistle_controlChange, METH_VARARGS, NULL},
	 { "Whistle_tick", _wrap_Whistle_tick, METH_VARARGS, NULL},
	 { "Whistle_swigregister", Whistle_swigregister, METH_O, NULL},
	 { "Whistle_swiginit", Whistle_swiginit, METH_VARARGS, NULL},
	 { "new_Wurley", _wrap_new_Wurley, METH_NOARGS, NULL},
	 { "delete_Wurley", _wrap_delete_Wurley, METH_O, NULL},
	 { "Wurley_setFrequency", _wrap_Wurley_setFrequency, METH_VARARGS, NULL},
	 { "Wurley_noteOn", _wrap_Wurley_noteOn, METH_VARARGS, NULL},
	 { "Wurley_tick", _wrap_Wurley_tick, METH_VARARGS, NULL},
	 { "Wurley_swigregister", Wurley_swigregister, METH_O, NULL},
	 { "Wurley_swiginit", Wurley_swiginit, METH_VARARGS, NULL},
	 { "delete_Socket", _wrap_delete_Socket, METH_O, NULL},
	 { "Socket_close", _wrap_Socket_close, METH_O, NULL},
	 { "Socket_id", _wrap_Socket_id, METH_O, NULL},
	 { "Socket_port", _wrap_Socket_port, METH_O, NULL},
	 { "Socket_isValid", _wrap_Socket_isValid, METH_O, NULL},
	 { "Socket_setBlocking", _wrap_Socket_setBlocking, METH_VARARGS, NULL},
	 { "Socket_writeBuffer", _wrap_Socket_writeBuffer, METH_VARARGS, NULL},
	 { "Socket_readBuffer", _wrap_Socket_readBuffer, METH_VARARGS, NULL},
	 { "Socket_swigregister", Socket_swigregister, METH_O, NULL},
	 { "new_TcpClient", _wrap_new_TcpClient, METH_VARARGS, NULL},
	 { "delete_TcpClient", _wrap_delete_TcpClient, METH_O, NULL},
	 { "TcpClient_connect", _wrap_TcpClient_connect, METH_VARARGS, NULL},
	 { "TcpClient_writeBuffer", _wrap_TcpClient_writeBuffer, METH_VARARGS, NULL},
	 { "TcpClient_readBuffer", _wrap_TcpClient_readBuffer, METH_VARARGS, NULL},
	 { "TcpClient_swigregister", TcpClient_swigregister, METH_O, NULL},
	 { "TcpClient_swiginit", TcpClient_swiginit, METH_VARARGS, NULL},
	 { "new_TcpServer", _wrap_new_TcpServer, METH_VARARGS, NULL},
	 { "delete_TcpServer", _wrap_delete_TcpServer, METH_O, NULL},
	 { "TcpServer_accept", _wrap_TcpServer_accept, METH_O, NULL},
	 { "TcpServer_writeBuffer", _wrap_TcpServer_writeBuffer, METH_VARARGS, NULL},
	 { "TcpServer_readBuffer", _wrap_TcpServer_readBuffer, METH_VARARGS, NULL},
	 { "TcpServer_swigregister", TcpServer_swigregister, METH_O, NULL},
	 { "TcpServer_swiginit", TcpServer_swiginit, METH_VARARGS, NULL},
	 { "new_UdpSocket", _wrap_new_UdpSocket, METH_VARARGS, NULL},
	 { "delete_UdpSocket", _wrap_delete_UdpSocket, METH_O, NULL},
	 { "UdpSocket_setDestination", _wrap_UdpSocket_setDestination, METH_VARARGS, NULL},
	 { "UdpSocket_writeBuffer", _wrap_UdpSocket_writeBuffer, METH_VARARGS, NULL},
	 { "UdpSocket_readBuffer", _wrap_UdpSocket_readBuffer, METH_VARARGS, NULL},
	 { "UdpSocket_writeBufferTo", _wrap_UdpSocket_writeBufferTo, METH_VARARGS, NULL},
	 { "UdpSocket_swigregister", UdpSocket_swigregister, METH_O, NULL},
	 { "UdpSocket_swiginit", UdpSocket_swiginit, METH_VARARGS, NULL},
	 { "new_Mutex", _wrap_new_Mutex, METH_NOARGS, NULL},
	 { "delete_Mutex", _wrap_delete_Mutex, METH_O, NULL},
	 { "Mutex_lock", _wrap_Mutex_lock, METH_O, NULL},
	 { "Mutex_unlock", _wrap_Mutex_unlock, METH_O, NULL},
	 { "Mutex_wait", _wrap_Mutex_wait, METH_O, NULL},
	 { "Mutex_signal", _wrap_Mutex_signal, METH_O, NULL},
	 { "Mutex_swigregister", Mutex_swigregister, METH_O, NULL},
	 { "Mutex_swiginit", Mutex_swiginit, METH_VARARGS, NULL},
	 { "new_Thread", _wrap_new_Thread, METH_NOARGS, NULL},
	 { "delete_Thread", _wrap_delete_Thread, METH_O, NULL},
	 { "Thread_start", _wrap_Thread_start, METH_VARARGS, NULL},
	 { "Thread_cancel", _wrap_Thread_cancel, METH_O, NULL},
	 { "Thread_wait", _wrap_Thread_wait, METH_O, NULL},
	 { "Thread_testCancel", _wrap_Thread_testCancel, METH_O, NULL},
	 { "Thread_swigregister", Thread_swigregister, METH_O, NULL},
	 { "Thread_swiginit", Thread_swiginit, METH_VARARGS, NULL},
	 { "new_InetWvIn", _wrap_new_InetWvIn, METH_VARARGS, NULL},
	 { "delete_InetWvIn", _wrap_delete_InetWvIn, METH_O, NULL},
	 { "InetWvIn_listen", _wrap_InetWvIn_listen, METH_VARARGS, NULL},
	 { "InetWvIn_isConnected", _wrap_InetWvIn_isConnected, METH_O, NULL},
	 { "InetWvIn_lastOut", _wrap_InetWvIn_lastOut, METH_VARARGS, NULL},
	 { "InetWvIn_tick", _wrap_InetWvIn_tick, METH_VARARGS, NULL},
	 { "InetWvIn_receive", _wrap_InetWvIn_receive, METH_O, NULL},
	 { "InetWvIn_swigregister", InetWvIn_swigregister, METH_O, NULL},
	 { "InetWvIn_swiginit", InetWvIn_swiginit, METH_VARARGS, NULL},
	 { "new_InetWvOut", _wrap_new_InetWvOut, METH_VARARGS, NULL},
	 { "delete_InetWvOut", _wrap_delete_InetWvOut, METH_O, NULL},
	 { "InetWvOut_connect", _wrap_InetWvOut_connect, METH_VARARGS, NULL},
	 { "InetWvOut_disconnect", _wrap_InetWvOut_disconnect, METH_O, NULL},
	 { "InetWvOut_tick", _wrap_InetWvOut_tick, METH_VARARGS, NULL},
	 { "InetWvOut_swigregister", InetWvOut_swigregister, METH_O, NULL},
	 { "InetWvOut_swiginit", InetWvOut_swiginit, METH_VARARGS, NULL},
	 { "new_RtWvIn", _wrap_new_RtWvIn, METH_VARARGS, NULL},
	 { "delete_RtWvIn", _wrap_delete_RtWvIn, METH_O, NULL},
	 { "RtWvIn_start", _wrap_RtWvIn_start, METH_O, NULL},
	 { "RtWvIn_stop", _wrap_RtWvIn_stop, METH_O, NULL},
	 { "RtWvIn_lastOut", _wrap_RtWvIn_lastOut, METH_VARARGS, NULL},
	 { "RtWvIn_tick", _wrap_RtWvIn_tick, METH_VARARGS, NULL},
	 { "RtWvIn_fillBuffer", _wrap_RtWvIn_fillBuffer, METH_VARARGS, NULL},
	 { "RtWvIn_swigregister", RtWvIn_swigregister, METH_O, NULL},
	 { "RtWvIn_swiginit", RtWvIn_swiginit, METH_VARARGS, NULL},
	 { "new_RtWvOut", _wrap_new_RtWvOut, METH_VARARGS, NULL},
	 { "delete_RtWvOut", _wrap_delete_RtWvOut, METH_O, NULL},
	 { "RtWvOut_start", _wrap_RtWvOut_start, METH_O, NULL},
	 { "RtWvOut_stop", _wrap_RtWvOut_stop, METH_O, NULL},
	 { "RtWvOut_tick", _wrap_RtWvOut_tick, METH_VARARGS, NULL},
	 { "RtWvOut_readBuffer", _wrap_RtWvOut_readBuffer, METH_VARARGS, NULL},
	 { "RtWvOut_swigregister", RtWvOut_swigregister, METH_O, NULL},
	 { "RtWvOut_swiginit", RtWvOut_swiginit, METH_VARARGS, NULL},
	 { "delete_Sampler", _wrap_delete_Sampler, METH_O, NULL},
	 { "Sampler_setFrequency", _wrap_Sampler_setFrequency, METH_VARARGS, NULL},
	 { "Sampler_keyOn", _wrap_Sampler_keyOn, METH_O, NULL},
	 { "Sampler_keyOff", _wrap_Sampler_keyOff, METH_O, NULL},
	 { "Sampler_noteOff", _wrap_Sampler_noteOff, METH_VARARGS, NULL},
	 { "Sampler_controlChange", _wrap_Sampler_controlChange, METH_VARARGS, NULL},
	 { "Sampler_tick", _wrap_Sampler_tick, METH_VARARGS, NULL},
	 { "Sampler_swigregister", Sampler_swigregister, METH_O, NULL},
	 { NULL, NULL, 0, NULL }
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (BEGIN) -------- */

static void *_p_stk__AsympTo_p_stk__Generator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Generator *)  ((stk::Asymp *) x));
}
static void *_p_stk__BlitSquareTo_p_stk__Generator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Generator *)  ((stk::BlitSquare *) x));
}
static void *_p_stk__NoiseTo_p_stk__Generator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Generator *)  ((stk::Noise *) x));
}
static void *_p_stk__BlitSawTo_p_stk__Generator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Generator *)  ((stk::BlitSaw *) x));
}
static void *_p_stk__ADSRTo_p_stk__Generator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Generator *)  ((stk::ADSR *) x));
}
static void *_p_stk__BlitTo_p_stk__Generator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Generator *)  ((stk::Blit *) x));
}
static void *_p_stk__EnvelopeTo_p_stk__Generator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Generator *)  ((stk::Envelope *) x));
}
static void *_p_stk__GranulateTo_p_stk__Generator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Generator *)  ((stk::Granulate *) x));
}
static void *_p_stk__SineWaveTo_p_stk__Generator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Generator *)  ((stk::SineWave *) x));
}
static void *_p_stk__ModulateTo_p_stk__Generator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Generator *)  ((stk::Modulate *) x));
}
static void *_p_stk__SingWaveTo_p_stk__Generator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Generator *)  ((stk::SingWave *) x));
}
static void *_p_stk__FileLoopTo_p_stk__FileWvIn(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::FileWvIn *)  ((stk::FileLoop *) x));
}
static void *_p_stk__GeneratorTo_p_stk__Stk(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Stk *)  ((stk::Generator *) x));
}
static void *_p_stk__DelayATo_p_stk__Stk(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Stk *) (stk::Filter *) ((stk::DelayA *) x));
}
static void *_p_stk__FluteTo_p_stk__Stk(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Stk *) (stk::Instrmnt *) ((stk::Flute *) x));
}
static void *_p_stk__WhistleTo_p_stk__Stk(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Stk *) (stk::Instrmnt *) ((stk::Whistle *) x));
}
static void *_p_stk__BandedWGTo_p_stk__Stk(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Stk *) (stk::Instrmnt *) ((stk::BandedWG *) x));
}
static void *_p_stk__BlitSawTo_p_stk__Stk(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Stk *) (stk::Generator *) ((stk::BlitSaw *) x));
}
static void *_p_stk__SaxofonyTo_p_stk__Stk(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Stk *) (stk::Instrmnt *) ((stk::Saxofony *) x));
}
static void *_p_stk__TapDelayTo_p_stk__Stk(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Stk *) (stk::Filter *) ((stk::TapDelay *) x));
}
static void *_p_stk__MutexTo_p_stk__Stk(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Stk *)  ((stk::Mutex *) x));
}
static void *_p_stk__AsympTo_p_stk__Stk(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Stk *) (stk::Generator *) ((stk::Asymp *) x));
}
static void *_p_stk__BlitTo_p_stk__Stk(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Stk *) (stk::Generator *) ((stk::Blit *) x));
}
static void *_p_stk__IirTo_p_stk__Stk(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Stk *) (stk::Filter *) ((stk::Iir *) x));
}
static void *_p_stk__TcpServerTo_p_stk__Stk(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Stk *) (stk::Socket *) ((stk::TcpServer *) x));
}
static void *_p_stk__DelayLTo_p_stk__Stk(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Stk *) (stk::Filter *) ((stk::DelayL *) x));
}
static void *_p_stk__OnePoleTo_p_stk__Stk(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Stk *) (stk::Filter *) ((stk::OnePole *) x));
}
static void *_p_stk__DelayTo_p_stk__Stk(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Stk *) (stk::Filter *) ((stk::Delay *) x));
}
static void *_p_stk__ModalTo_p_stk__Stk(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Stk *) (stk::Instrmnt *) ((stk::Modal *) x));
}
static void *_p_stk__FirTo_p_stk__Stk(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Stk *) (stk::Filter *) ((stk::Fir *) x));
}
static void *_p_stk__BlowHoleTo_p_stk__Stk(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Stk *) (stk::Instrmnt *) ((stk::BlowHole *) x));
}
static void *_p_stk__SineWaveTo_p_stk__Stk(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Stk *) (stk::Generator *) ((stk::SineWave *) x));
}
static void *_p_stk__SamplerTo_p_stk__Stk(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Stk *) (stk::Instrmnt *) ((stk::Sampler *) x));
}
static void *_p_stk__RhodeyTo_p_stk__Stk(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Stk *) (stk::Instrmnt *)(stk::FM *) ((stk::Rhodey *) x));
}
static void *_p_stk__ModulateTo_p_stk__Stk(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Stk *) (stk::Generator *) ((stk::Modulate *) x));
}
static void *_p_stk__SphereTo_p_stk__Stk(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Stk *)  ((stk::Sphere *) x));
}
static void *_p_stk__BeeThreeTo_p_stk__Stk(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Stk *) (stk::Instrmnt *)(stk::FM *) ((stk::BeeThree *) x));
}
static void *_p_stk__Mesh2DTo_p_stk__Stk(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Stk *) (stk::Instrmnt *) ((stk::Mesh2D *) x));
}
static void *_p_stk__EchoTo_p_stk__Stk(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Stk *) (stk::Effect *) ((stk::Echo *) x));
}
static void *_p_stk__NoiseTo_p_stk__Stk(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Stk *) (stk::Generator *) ((stk::Noise *) x));
}
static void *_p_stk__FileReadTo_p_stk__Stk(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Stk *)  ((stk::FileRead *) x));
}
static void *_p_stk__MandolinTo_p_stk__Stk(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Stk *) (stk::Instrmnt *) ((stk::Mandolin *) x));
}
static void *_p_stk__PhonemesTo_p_stk__Stk(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Stk *)  ((stk::Phonemes *) x));
}
static void *_p_stk__DrummerTo_p_stk__Stk(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Stk *) (stk::Instrmnt *) ((stk::Drummer *) x));
}
static void *_p_stk__VoicFormTo_p_stk__Stk(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Stk *) (stk::Instrmnt *) ((stk::VoicForm *) x));
}
static void *_p_stk__MidiFileInTo_p_stk__Stk(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Stk *)  ((stk::MidiFileIn *) x));
}
static void *_p_stk__ChorusTo_p_stk__Stk(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Stk *) (stk::Effect *) ((stk::Chorus *) x));
}
static void *_p_stk__SingWaveTo_p_stk__Stk(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Stk *) (stk::Generator *) ((stk::SingWave *) x));
}
static void *_p_stk__Vector3DTo_p_stk__Stk(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Stk *)  ((stk::Vector3D *) x));
}
static void *_p_stk__FreeVerbTo_p_stk__Stk(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Stk *) (stk::Effect *) ((stk::FreeVerb *) x));
}
static void *_p_stk__ADSRTo_p_stk__Stk(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Stk *) (stk::Generator *) ((stk::ADSR *) x));
}
static void *_p_stk__InstrmntTo_p_stk__Stk(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Stk *)  ((stk::Instrmnt *) x));
}
static void *_p_stk__FMVoicesTo_p_stk__Stk(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Stk *) (stk::Instrmnt *)(stk::FM *) ((stk::FMVoices *) x));
}
static void *_p_stk__TwoZeroTo_p_stk__Stk(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Stk *) (stk::Filter *) ((stk::TwoZero *) x));
}
static void *_p_stk__FilterTo_p_stk__Stk(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Stk *)  ((stk::Filter *) x));
}
static void *_p_stk__SimpleTo_p_stk__Stk(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Stk *) (stk::Instrmnt *) ((stk::Simple *) x));
}
static void *_p_stk__FileWriteTo_p_stk__Stk(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Stk *)  ((stk::FileWrite *) x));
}
static void *_p_stk__PRCRevTo_p_stk__Stk(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Stk *) (stk::Effect *) ((stk::PRCRev *) x));
}
static void *_p_stk__PluckedTo_p_stk__Stk(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Stk *) (stk::Instrmnt *) ((stk::Plucked *) x));
}
static void *_p_stk__EnvelopeTo_p_stk__Stk(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Stk *) (stk::Generator *) ((stk::Envelope *) x));
}
static void *_p_stk__GuitarTo_p_stk__Stk(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Stk *)  ((stk::Guitar *) x));
}
static void *_p_stk__ReedTableTo_p_stk__Stk(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Stk *) (stk::Function *) ((stk::ReedTable *) x));
}
static void *_p_stk__TwangTo_p_stk__Stk(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Stk *)  ((stk::Twang *) x));
}
static void *_p_stk__PercFlutTo_p_stk__Stk(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Stk *) (stk::Instrmnt *)(stk::FM *) ((stk::PercFlut *) x));
}
static void *_p_stk__RecorderTo_p_stk__Stk(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Stk *) (stk::Instrmnt *) ((stk::Recorder *) x));
}
static void *_p_stk__ModalBarTo_p_stk__Stk(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Stk *) (stk::Instrmnt *)(stk::Modal *) ((stk::ModalBar *) x));
}
static void *_p_stk__PoleZeroTo_p_stk__Stk(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Stk *) (stk::Filter *) ((stk::PoleZero *) x));
}
static void *_p_stk__EffectTo_p_stk__Stk(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Stk *)  ((stk::Effect *) x));
}
static void *_p_stk__SitarTo_p_stk__Stk(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Stk *) (stk::Instrmnt *) ((stk::Sitar *) x));
}
static void *_p_stk__GranulateTo_p_stk__Stk(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Stk *) (stk::Generator *) ((stk::Granulate *) x));
}
static void *_p_stk__FunctionTo_p_stk__Stk(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Stk *)  ((stk::Function *) x));
}
static void *_p_stk__BowedTo_p_stk__Stk(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Stk *) (stk::Instrmnt *) ((stk::Bowed *) x));
}
static void *_p_stk__BlitSquareTo_p_stk__Stk(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Stk *) (stk::Generator *) ((stk::BlitSquare *) x));
}
static void *_p_stk__JCRevTo_p_stk__Stk(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Stk *) (stk::Effect *) ((stk::JCRev *) x));
}
static void *_p_stk__FMTo_p_stk__Stk(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Stk *) (stk::Instrmnt *) ((stk::FM *) x));
}
static void *_p_stk__TwoPoleTo_p_stk__Stk(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Stk *) (stk::Filter *) ((stk::TwoPole *) x));
}
static void *_p_stk__PitShiftTo_p_stk__Stk(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Stk *) (stk::Effect *) ((stk::PitShift *) x));
}
static void *_p_stk__LentPitShiftTo_p_stk__Stk(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Stk *) (stk::Effect *) ((stk::LentPitShift *) x));
}
static void *_p_stk__BrassTo_p_stk__Stk(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Stk *) (stk::Instrmnt *) ((stk::Brass *) x));
}
static void *_p_stk__ResonateTo_p_stk__Stk(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Stk *) (stk::Instrmnt *) ((stk::Resonate *) x));
}
static void *_p_stk__BlowBotlTo_p_stk__Stk(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Stk *) (stk::Instrmnt *) ((stk::BlowBotl *) x));
}
static void *_p_stk__TcpClientTo_p_stk__Stk(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Stk *) (stk::Socket *) ((stk::TcpClient *) x));
}
static void *_p_stk__BowTableTo_p_stk__Stk(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Stk *) (stk::Function *) ((stk::BowTable *) x));
}
static void *_p_stk__VoicerTo_p_stk__Stk(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Stk *)  ((stk::Voicer *) x));
}
static void *_p_stk__StifKarpTo_p_stk__Stk(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Stk *) (stk::Instrmnt *) ((stk::StifKarp *) x));
}
static void *_p_stk__TubeBellTo_p_stk__Stk(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Stk *) (stk::Instrmnt *)(stk::FM *) ((stk::TubeBell *) x));
}
static void *_p_stk__ClarinetTo_p_stk__Stk(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Stk *) (stk::Instrmnt *) ((stk::Clarinet *) x));
}
static void *_p_stk__NRevTo_p_stk__Stk(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Stk *) (stk::Effect *) ((stk::NRev *) x));
}
static void *_p_stk__JetTableTo_p_stk__Stk(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Stk *) (stk::Function *) ((stk::JetTable *) x));
}
static void *_p_stk__OneZeroTo_p_stk__Stk(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Stk *) (stk::Filter *) ((stk::OneZero *) x));
}
static void *_p_stk__SocketTo_p_stk__Stk(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Stk *)  ((stk::Socket *) x));
}
static void *_p_stk__UdpSocketTo_p_stk__Stk(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Stk *) (stk::Socket *) ((stk::UdpSocket *) x));
}
static void *_p_stk__BiQuadTo_p_stk__Stk(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Stk *) (stk::Filter *) ((stk::BiQuad *) x));
}
static void *_p_stk__MessagerTo_p_stk__Stk(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Stk *)  ((stk::Messager *) x));
}
static void *_p_stk__HevyMetlTo_p_stk__Stk(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Stk *) (stk::Instrmnt *)(stk::FM *) ((stk::HevyMetl *) x));
}
static void *_p_stk__ThreadTo_p_stk__Stk(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Stk *)  ((stk::Thread *) x));
}
static void *_p_stk__CubicTo_p_stk__Stk(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Stk *) (stk::Function *) ((stk::Cubic *) x));
}
static void *_p_stk__FormSwepTo_p_stk__Stk(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Stk *) (stk::Filter *) ((stk::FormSwep *) x));
}
static void *_p_stk__ShakersTo_p_stk__Stk(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Stk *) (stk::Instrmnt *) ((stk::Shakers *) x));
}
static void *_p_stk__WurleyTo_p_stk__Stk(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Stk *) (stk::Instrmnt *)(stk::FM *) ((stk::Wurley *) x));
}
static void *_p_stk__ModalBarTo_p_stk__Modal(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Modal *)  ((stk::ModalBar *) x));
}
static void *_p_stk__BlowHoleTo_p_stk__Instrmnt(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Instrmnt *)  ((stk::BlowHole *) x));
}
static void *_p_stk__ShakersTo_p_stk__Instrmnt(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Instrmnt *)  ((stk::Shakers *) x));
}
static void *_p_stk__Mesh2DTo_p_stk__Instrmnt(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Instrmnt *)  ((stk::Mesh2D *) x));
}
static void *_p_stk__MandolinTo_p_stk__Instrmnt(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Instrmnt *)  ((stk::Mandolin *) x));
}
static void *_p_stk__ResonateTo_p_stk__Instrmnt(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Instrmnt *)  ((stk::Resonate *) x));
}
static void *_p_stk__SitarTo_p_stk__Instrmnt(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Instrmnt *)  ((stk::Sitar *) x));
}
static void *_p_stk__DrummerTo_p_stk__Instrmnt(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Instrmnt *)  ((stk::Drummer *) x));
}
static void *_p_stk__WhistleTo_p_stk__Instrmnt(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Instrmnt *)  ((stk::Whistle *) x));
}
static void *_p_stk__SamplerTo_p_stk__Instrmnt(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Instrmnt *)  ((stk::Sampler *) x));
}
static void *_p_stk__BlowBotlTo_p_stk__Instrmnt(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Instrmnt *)  ((stk::BlowBotl *) x));
}
static void *_p_stk__BrassTo_p_stk__Instrmnt(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Instrmnt *)  ((stk::Brass *) x));
}
static void *_p_stk__SimpleTo_p_stk__Instrmnt(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Instrmnt *)  ((stk::Simple *) x));
}
static void *_p_stk__VoicFormTo_p_stk__Instrmnt(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Instrmnt *)  ((stk::VoicForm *) x));
}
static void *_p_stk__ModalTo_p_stk__Instrmnt(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Instrmnt *)  ((stk::Modal *) x));
}
static void *_p_stk__RecorderTo_p_stk__Instrmnt(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Instrmnt *)  ((stk::Recorder *) x));
}
static void *_p_stk__RhodeyTo_p_stk__Instrmnt(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Instrmnt *) (stk::FM *) ((stk::Rhodey *) x));
}
static void *_p_stk__StifKarpTo_p_stk__Instrmnt(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Instrmnt *)  ((stk::StifKarp *) x));
}
static void *_p_stk__FMVoicesTo_p_stk__Instrmnt(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Instrmnt *) (stk::FM *) ((stk::FMVoices *) x));
}
static void *_p_stk__ClarinetTo_p_stk__Instrmnt(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Instrmnt *)  ((stk::Clarinet *) x));
}
static void *_p_stk__BeeThreeTo_p_stk__Instrmnt(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Instrmnt *) (stk::FM *) ((stk::BeeThree *) x));
}
static void *_p_stk__SaxofonyTo_p_stk__Instrmnt(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Instrmnt *)  ((stk::Saxofony *) x));
}
static void *_p_stk__TubeBellTo_p_stk__Instrmnt(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Instrmnt *) (stk::FM *) ((stk::TubeBell *) x));
}
static void *_p_stk__FMTo_p_stk__Instrmnt(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Instrmnt *)  ((stk::FM *) x));
}
static void *_p_stk__FluteTo_p_stk__Instrmnt(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Instrmnt *)  ((stk::Flute *) x));
}
static void *_p_stk__BowedTo_p_stk__Instrmnt(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Instrmnt *)  ((stk::Bowed *) x));
}
static void *_p_stk__HevyMetlTo_p_stk__Instrmnt(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Instrmnt *) (stk::FM *) ((stk::HevyMetl *) x));
}
static void *_p_stk__BandedWGTo_p_stk__Instrmnt(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Instrmnt *)  ((stk::BandedWG *) x));
}
static void *_p_stk__ModalBarTo_p_stk__Instrmnt(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Instrmnt *) (stk::Modal *) ((stk::ModalBar *) x));
}
static void *_p_stk__PercFlutTo_p_stk__Instrmnt(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Instrmnt *) (stk::FM *) ((stk::PercFlut *) x));
}
static void *_p_stk__WurleyTo_p_stk__Instrmnt(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Instrmnt *) (stk::FM *) ((stk::Wurley *) x));
}
static void *_p_stk__PluckedTo_p_stk__Instrmnt(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Instrmnt *)  ((stk::Plucked *) x));
}
static void *_p_stk__DelayLTo_p_stk__Filter(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Filter *)  ((stk::DelayL *) x));
}
static void *_p_stk__FirTo_p_stk__Filter(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Filter *)  ((stk::Fir *) x));
}
static void *_p_stk__FormSwepTo_p_stk__Filter(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Filter *)  ((stk::FormSwep *) x));
}
static void *_p_stk__OnePoleTo_p_stk__Filter(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Filter *)  ((stk::OnePole *) x));
}
static void *_p_stk__BiQuadTo_p_stk__Filter(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Filter *)  ((stk::BiQuad *) x));
}
static void *_p_stk__DelayTo_p_stk__Filter(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Filter *)  ((stk::Delay *) x));
}
static void *_p_stk__DelayATo_p_stk__Filter(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Filter *)  ((stk::DelayA *) x));
}
static void *_p_stk__OneZeroTo_p_stk__Filter(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Filter *)  ((stk::OneZero *) x));
}
static void *_p_stk__TapDelayTo_p_stk__Filter(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Filter *)  ((stk::TapDelay *) x));
}
static void *_p_stk__TwoPoleTo_p_stk__Filter(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Filter *)  ((stk::TwoPole *) x));
}
static void *_p_stk__IirTo_p_stk__Filter(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Filter *)  ((stk::Iir *) x));
}
static void *_p_stk__PoleZeroTo_p_stk__Filter(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Filter *)  ((stk::PoleZero *) x));
}
static void *_p_stk__TwoZeroTo_p_stk__Filter(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Filter *)  ((stk::TwoZero *) x));
}
static void *_p_stk__ChorusTo_p_stk__Effect(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Effect *)  ((stk::Chorus *) x));
}
static void *_p_stk__EchoTo_p_stk__Effect(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Effect *)  ((stk::Echo *) x));
}
static void *_p_stk__PRCRevTo_p_stk__Effect(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Effect *)  ((stk::PRCRev *) x));
}
static void *_p_stk__JCRevTo_p_stk__Effect(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Effect *)  ((stk::JCRev *) x));
}
static void *_p_stk__FreeVerbTo_p_stk__Effect(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Effect *)  ((stk::FreeVerb *) x));
}
static void *_p_stk__NRevTo_p_stk__Effect(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Effect *)  ((stk::NRev *) x));
}
static void *_p_stk__LentPitShiftTo_p_stk__Effect(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Effect *)  ((stk::LentPitShift *) x));
}
static void *_p_stk__PitShiftTo_p_stk__Effect(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Effect *)  ((stk::PitShift *) x));
}
static void *_p_stk__ReedTableTo_p_stk__Function(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Function *)  ((stk::ReedTable *) x));
}
static void *_p_stk__BowTableTo_p_stk__Function(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Function *)  ((stk::BowTable *) x));
}
static void *_p_stk__CubicTo_p_stk__Function(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Function *)  ((stk::Cubic *) x));
}
static void *_p_stk__JetTableTo_p_stk__Function(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Function *)  ((stk::JetTable *) x));
}
static void *_p_stk__BeeThreeTo_p_stk__FM(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::FM *)  ((stk::BeeThree *) x));
}
static void *_p_stk__HevyMetlTo_p_stk__FM(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::FM *)  ((stk::HevyMetl *) x));
}
static void *_p_stk__PercFlutTo_p_stk__FM(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::FM *)  ((stk::PercFlut *) x));
}
static void *_p_stk__RhodeyTo_p_stk__FM(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::FM *)  ((stk::Rhodey *) x));
}
static void *_p_stk__FMVoicesTo_p_stk__FM(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::FM *)  ((stk::FMVoices *) x));
}
static void *_p_stk__WurleyTo_p_stk__FM(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::FM *)  ((stk::Wurley *) x));
}
static void *_p_stk__TubeBellTo_p_stk__FM(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::FM *)  ((stk::TubeBell *) x));
}
static void *_p_stk__TcpServerTo_p_stk__Socket(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Socket *)  ((stk::TcpServer *) x));
}
static void *_p_stk__TcpClientTo_p_stk__Socket(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Socket *)  ((stk::TcpClient *) x));
}
static void *_p_stk__UdpSocketTo_p_stk__Socket(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((stk::Socket *)  ((stk::UdpSocket *) x));
}
static swig_type_info _swigt__p_FILE_TYPE = {"_p_FILE_TYPE", "FILE_TYPE *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Skini__Message = {"_p_Skini__Message", "Skini::Message *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_THREAD_FUNCTION = {"_p_THREAD_FUNCTION", "THREAD_FUNCTION *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Vector3D = {"_p_Vector3D", "Vector3D *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_char = {"_p_char", "char *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_double = {"_p_double", "stk::FLOAT64 *|double *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_float = {"_p_float", "float *|stk::FLOAT32 *|stk::StkFloat *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_int = {"_p_int", "stk::SINT32 *|intptr_t *|int *|int_least32_t *|int_fast32_t *|int32_t *|int_fast16_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_long_long = {"_p_long_long", "int_least64_t *|int_fast64_t *|int64_t *|long long *|intmax_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_p_char = {"_p_p_char", "char **", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_short = {"_p_short", "short *|int_least16_t *|stk::SINT16 *|int16_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_signed_char = {"_p_signed_char", "signed char *|int_least8_t *|int_fast8_t *|int8_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__string = {"_p_std__string", "std::string *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_float_std__allocatorT_float_t_t = {"_p_std__vectorT_float_std__allocatorT_float_t_t", "std::vector< float,std::allocator< float > > *|std::vector< stk::StkFloat,std::allocator< stk::StkFloat > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_unsigned_char_std__allocatorT_unsigned_char_t_t = {"_p_std__vectorT_unsigned_char_std__allocatorT_unsigned_char_t_t", "std::vector< unsigned char,std::allocator< unsigned char > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_unsigned_long_std__allocatorT_unsigned_long_t_t = {"_p_std__vectorT_unsigned_long_std__allocatorT_unsigned_long_t_t", "std::vector< unsigned long,std::allocator< unsigned long > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_stk__ADSR = {"_p_stk__ADSR", "stk::ADSR *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_stk__Asymp = {"_p_stk__Asymp", "stk::Asymp *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_stk__BandedWG = {"_p_stk__BandedWG", "stk::BandedWG *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_stk__BeeThree = {"_p_stk__BeeThree", "stk::BeeThree *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_stk__BiQuad = {"_p_stk__BiQuad", "stk::BiQuad *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_stk__Blit = {"_p_stk__Blit", "stk::Blit *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_stk__BlitSaw = {"_p_stk__BlitSaw", "stk::BlitSaw *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_stk__BlitSquare = {"_p_stk__BlitSquare", "stk::BlitSquare *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_stk__BlowBotl = {"_p_stk__BlowBotl", "stk::BlowBotl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_stk__BlowHole = {"_p_stk__BlowHole", "stk::BlowHole *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_stk__BowTable = {"_p_stk__BowTable", "stk::BowTable *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_stk__Bowed = {"_p_stk__Bowed", "stk::Bowed *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_stk__Brass = {"_p_stk__Brass", "stk::Brass *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_stk__Chorus = {"_p_stk__Chorus", "stk::Chorus *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_stk__Clarinet = {"_p_stk__Clarinet", "stk::Clarinet *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_stk__Cubic = {"_p_stk__Cubic", "stk::Cubic *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_stk__Delay = {"_p_stk__Delay", "stk::Delay *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_stk__DelayA = {"_p_stk__DelayA", "stk::DelayA *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_stk__DelayL = {"_p_stk__DelayL", "stk::DelayL *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_stk__Drummer = {"_p_stk__Drummer", "stk::Drummer *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_stk__Echo = {"_p_stk__Echo", "stk::Echo *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_stk__Effect = {"_p_stk__Effect", "stk::Effect *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_stk__Envelope = {"_p_stk__Envelope", "stk::Envelope *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_stk__FM = {"_p_stk__FM", "stk::FM *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_stk__FMVoices = {"_p_stk__FMVoices", "stk::FMVoices *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_stk__FileLoop = {"_p_stk__FileLoop", "stk::FileLoop *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_stk__FileRead = {"_p_stk__FileRead", "stk::FileRead *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_stk__FileWrite = {"_p_stk__FileWrite", "stk::FileWrite *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_stk__FileWvIn = {"_p_stk__FileWvIn", "stk::FileWvIn *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_stk__FileWvOut = {"_p_stk__FileWvOut", "stk::FileWvOut *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_stk__Filter = {"_p_stk__Filter", "stk::Filter *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_stk__Fir = {"_p_stk__Fir", "stk::Fir *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_stk__Flute = {"_p_stk__Flute", "stk::Flute *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_stk__FormSwep = {"_p_stk__FormSwep", "stk::FormSwep *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_stk__FreeVerb = {"_p_stk__FreeVerb", "stk::FreeVerb *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_stk__Function = {"_p_stk__Function", "stk::Function *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_stk__Generator = {"_p_stk__Generator", "stk::Generator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_stk__Granulate = {"_p_stk__Granulate", "stk::Granulate *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_stk__Guitar = {"_p_stk__Guitar", "stk::Guitar *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_stk__HevyMetl = {"_p_stk__HevyMetl", "stk::HevyMetl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_stk__Iir = {"_p_stk__Iir", "stk::Iir *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_stk__InetWvIn = {"_p_stk__InetWvIn", "stk::InetWvIn *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_stk__InetWvOut = {"_p_stk__InetWvOut", "stk::InetWvOut *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_stk__Instrmnt = {"_p_stk__Instrmnt", "stk::Instrmnt *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_stk__JCRev = {"_p_stk__JCRev", "stk::JCRev *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_stk__JetTable = {"_p_stk__JetTable", "stk::JetTable *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_stk__LentPitShift = {"_p_stk__LentPitShift", "stk::LentPitShift *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_stk__Mandolin = {"_p_stk__Mandolin", "stk::Mandolin *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_stk__Mesh2D = {"_p_stk__Mesh2D", "stk::Mesh2D *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_stk__Messager = {"_p_stk__Messager", "stk::Messager *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_stk__MidiFileIn = {"_p_stk__MidiFileIn", "stk::MidiFileIn *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_stk__Modal = {"_p_stk__Modal", "stk::Modal *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_stk__ModalBar = {"_p_stk__ModalBar", "stk::ModalBar *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_stk__Modulate = {"_p_stk__Modulate", "stk::Modulate *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_stk__Moog = {"_p_stk__Moog", "stk::Moog *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_stk__Mutex = {"_p_stk__Mutex", "stk::Mutex *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_stk__NRev = {"_p_stk__NRev", "stk::NRev *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_stk__Noise = {"_p_stk__Noise", "stk::Noise *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_stk__OnePole = {"_p_stk__OnePole", "stk::OnePole *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_stk__OneZero = {"_p_stk__OneZero", "stk::OneZero *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_stk__PRCRev = {"_p_stk__PRCRev", "stk::PRCRev *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_stk__PercFlut = {"_p_stk__PercFlut", "stk::PercFlut *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_stk__Phonemes = {"_p_stk__Phonemes", "stk::Phonemes *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_stk__PitShift = {"_p_stk__PitShift", "stk::PitShift *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_stk__Plucked = {"_p_stk__Plucked", "stk::Plucked *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_stk__PoleZero = {"_p_stk__PoleZero", "stk::PoleZero *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_stk__Recorder = {"_p_stk__Recorder", "stk::Recorder *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_stk__ReedTable = {"_p_stk__ReedTable", "stk::ReedTable *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_stk__Resonate = {"_p_stk__Resonate", "stk::Resonate *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_stk__Rhodey = {"_p_stk__Rhodey", "stk::Rhodey *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_stk__RtWvIn = {"_p_stk__RtWvIn", "stk::RtWvIn *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_stk__RtWvOut = {"_p_stk__RtWvOut", "stk::RtWvOut *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_stk__Sampler = {"_p_stk__Sampler", "stk::Sampler *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_stk__Saxofony = {"_p_stk__Saxofony", "stk::Saxofony *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_stk__Shakers = {"_p_stk__Shakers", "stk::Shakers *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_stk__Simple = {"_p_stk__Simple", "stk::Simple *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_stk__SineWave = {"_p_stk__SineWave", "stk::SineWave *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_stk__SingWave = {"_p_stk__SingWave", "stk::SingWave *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_stk__Sitar = {"_p_stk__Sitar", "stk::Sitar *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_stk__Socket = {"_p_stk__Socket", "stk::Socket *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_stk__Sphere = {"_p_stk__Sphere", "stk::Sphere *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_stk__StifKarp = {"_p_stk__StifKarp", "stk::StifKarp *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_stk__Stk = {"_p_stk__Stk", "stk::Stk *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_stk__StkError = {"_p_stk__StkError", "stk::StkError *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_stk__StkFrames = {"_p_stk__StkFrames", "stk::StkFrames *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_stk__TapDelay = {"_p_stk__TapDelay", "stk::TapDelay *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_stk__TcpClient = {"_p_stk__TcpClient", "stk::TcpClient *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_stk__TcpServer = {"_p_stk__TcpServer", "stk::TcpServer *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_stk__Thread = {"_p_stk__Thread", "stk::Thread *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_stk__TubeBell = {"_p_stk__TubeBell", "stk::TubeBell *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_stk__Twang = {"_p_stk__Twang", "stk::Twang *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_stk__TwoPole = {"_p_stk__TwoPole", "stk::TwoPole *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_stk__TwoZero = {"_p_stk__TwoZero", "stk::TwoZero *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_stk__UdpSocket = {"_p_stk__UdpSocket", "stk::UdpSocket *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_stk__Vector3D = {"_p_stk__Vector3D", "stk::Vector3D *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_stk__VoicForm = {"_p_stk__VoicForm", "stk::VoicForm *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_stk__Voicer = {"_p_stk__Voicer", "stk::Voicer *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_stk__Whistle = {"_p_stk__Whistle", "stk::Whistle *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_stk__Wurley = {"_p_stk__Wurley", "stk::Wurley *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_swig__SwigPyIterator = {"_p_swig__SwigPyIterator", "swig::SwigPyIterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned_char = {"_p_unsigned_char", "unsigned char *|uint_least8_t *|uint_fast8_t *|uint8_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned_int = {"_p_unsigned_int", "stk::UINT32 *|uintptr_t *|uint_least32_t *|uint_fast32_t *|uint32_t *|unsigned int *|uint_fast16_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned_long_long = {"_p_unsigned_long_long", "uint_least64_t *|uint_fast64_t *|uint64_t *|unsigned long long *|uintmax_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned_short = {"_p_unsigned_short", "unsigned short *|uint_least16_t *|uint16_t *|stk::UINT16 *", 0, 0, (void*)0, 0};

static swig_type_info *swig_type_initial[] = {
  &_swigt__p_FILE_TYPE,
  &_swigt__p_Skini__Message,
  &_swigt__p_THREAD_FUNCTION,
  &_swigt__p_Vector3D,
  &_swigt__p_char,
  &_swigt__p_double,
  &_swigt__p_float,
  &_swigt__p_int,
  &_swigt__p_long_long,
  &_swigt__p_p_char,
  &_swigt__p_short,
  &_swigt__p_signed_char,
  &_swigt__p_std__string,
  &_swigt__p_std__vectorT_float_std__allocatorT_float_t_t,
  &_swigt__p_std__vectorT_unsigned_char_std__allocatorT_unsigned_char_t_t,
  &_swigt__p_std__vectorT_unsigned_long_std__allocatorT_unsigned_long_t_t,
  &_swigt__p_stk__ADSR,
  &_swigt__p_stk__Asymp,
  &_swigt__p_stk__BandedWG,
  &_swigt__p_stk__BeeThree,
  &_swigt__p_stk__BiQuad,
  &_swigt__p_stk__Blit,
  &_swigt__p_stk__BlitSaw,
  &_swigt__p_stk__BlitSquare,
  &_swigt__p_stk__BlowBotl,
  &_swigt__p_stk__BlowHole,
  &_swigt__p_stk__BowTable,
  &_swigt__p_stk__Bowed,
  &_swigt__p_stk__Brass,
  &_swigt__p_stk__Chorus,
  &_swigt__p_stk__Clarinet,
  &_swigt__p_stk__Cubic,
  &_swigt__p_stk__Delay,
  &_swigt__p_stk__DelayA,
  &_swigt__p_stk__DelayL,
  &_swigt__p_stk__Drummer,
  &_swigt__p_stk__Echo,
  &_swigt__p_stk__Effect,
  &_swigt__p_stk__Envelope,
  &_swigt__p_stk__FM,
  &_swigt__p_stk__FMVoices,
  &_swigt__p_stk__FileLoop,
  &_swigt__p_stk__FileRead,
  &_swigt__p_stk__FileWrite,
  &_swigt__p_stk__FileWvIn,
  &_swigt__p_stk__FileWvOut,
  &_swigt__p_stk__Filter,
  &_swigt__p_stk__Fir,
  &_swigt__p_stk__Flute,
  &_swigt__p_stk__FormSwep,
  &_swigt__p_stk__FreeVerb,
  &_swigt__p_stk__Function,
  &_swigt__p_stk__Generator,
  &_swigt__p_stk__Granulate,
  &_swigt__p_stk__Guitar,
  &_swigt__p_stk__HevyMetl,
  &_swigt__p_stk__Iir,
  &_swigt__p_stk__InetWvIn,
  &_swigt__p_stk__InetWvOut,
  &_swigt__p_stk__Instrmnt,
  &_swigt__p_stk__JCRev,
  &_swigt__p_stk__JetTable,
  &_swigt__p_stk__LentPitShift,
  &_swigt__p_stk__Mandolin,
  &_swigt__p_stk__Mesh2D,
  &_swigt__p_stk__Messager,
  &_swigt__p_stk__MidiFileIn,
  &_swigt__p_stk__Modal,
  &_swigt__p_stk__ModalBar,
  &_swigt__p_stk__Modulate,
  &_swigt__p_stk__Moog,
  &_swigt__p_stk__Mutex,
  &_swigt__p_stk__NRev,
  &_swigt__p_stk__Noise,
  &_swigt__p_stk__OnePole,
  &_swigt__p_stk__OneZero,
  &_swigt__p_stk__PRCRev,
  &_swigt__p_stk__PercFlut,
  &_swigt__p_stk__Phonemes,
  &_swigt__p_stk__PitShift,
  &_swigt__p_stk__Plucked,
  &_swigt__p_stk__PoleZero,
  &_swigt__p_stk__Recorder,
  &_swigt__p_stk__ReedTable,
  &_swigt__p_stk__Resonate,
  &_swigt__p_stk__Rhodey,
  &_swigt__p_stk__RtWvIn,
  &_swigt__p_stk__RtWvOut,
  &_swigt__p_stk__Sampler,
  &_swigt__p_stk__Saxofony,
  &_swigt__p_stk__Shakers,
  &_swigt__p_stk__Simple,
  &_swigt__p_stk__SineWave,
  &_swigt__p_stk__SingWave,
  &_swigt__p_stk__Sitar,
  &_swigt__p_stk__Socket,
  &_swigt__p_stk__Sphere,
  &_swigt__p_stk__StifKarp,
  &_swigt__p_stk__Stk,
  &_swigt__p_stk__StkError,
  &_swigt__p_stk__StkFrames,
  &_swigt__p_stk__TapDelay,
  &_swigt__p_stk__TcpClient,
  &_swigt__p_stk__TcpServer,
  &_swigt__p_stk__Thread,
  &_swigt__p_stk__TubeBell,
  &_swigt__p_stk__Twang,
  &_swigt__p_stk__TwoPole,
  &_swigt__p_stk__TwoZero,
  &_swigt__p_stk__UdpSocket,
  &_swigt__p_stk__Vector3D,
  &_swigt__p_stk__VoicForm,
  &_swigt__p_stk__Voicer,
  &_swigt__p_stk__Whistle,
  &_swigt__p_stk__Wurley,
  &_swigt__p_swig__SwigPyIterator,
  &_swigt__p_unsigned_char,
  &_swigt__p_unsigned_int,
  &_swigt__p_unsigned_long_long,
  &_swigt__p_unsigned_short,
};

static swig_cast_info _swigc__p_FILE_TYPE[] = {  {&_swigt__p_FILE_TYPE, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Skini__Message[] = {  {&_swigt__p_Skini__Message, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_THREAD_FUNCTION[] = {  {&_swigt__p_THREAD_FUNCTION, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Vector3D[] = {  {&_swigt__p_Vector3D, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_char[] = {  {&_swigt__p_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_double[] = {  {&_swigt__p_double, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_float[] = {  {&_swigt__p_float, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_int[] = {  {&_swigt__p_int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_long_long[] = {  {&_swigt__p_long_long, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_char[] = {  {&_swigt__p_p_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_short[] = {  {&_swigt__p_short, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_signed_char[] = {  {&_swigt__p_signed_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__string[] = {  {&_swigt__p_std__string, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_float_std__allocatorT_float_t_t[] = {  {&_swigt__p_std__vectorT_float_std__allocatorT_float_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_unsigned_char_std__allocatorT_unsigned_char_t_t[] = {  {&_swigt__p_std__vectorT_unsigned_char_std__allocatorT_unsigned_char_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_unsigned_long_std__allocatorT_unsigned_long_t_t[] = {  {&_swigt__p_std__vectorT_unsigned_long_std__allocatorT_unsigned_long_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_stk__ADSR[] = {  {&_swigt__p_stk__ADSR, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_stk__Asymp[] = {  {&_swigt__p_stk__Asymp, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_stk__BandedWG[] = {  {&_swigt__p_stk__BandedWG, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_stk__BeeThree[] = {  {&_swigt__p_stk__BeeThree, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_stk__BiQuad[] = {  {&_swigt__p_stk__BiQuad, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_stk__Blit[] = {  {&_swigt__p_stk__Blit, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_stk__BlitSaw[] = {  {&_swigt__p_stk__BlitSaw, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_stk__BlitSquare[] = {  {&_swigt__p_stk__BlitSquare, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_stk__BlowBotl[] = {  {&_swigt__p_stk__BlowBotl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_stk__BlowHole[] = {  {&_swigt__p_stk__BlowHole, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_stk__BowTable[] = {  {&_swigt__p_stk__BowTable, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_stk__Bowed[] = {  {&_swigt__p_stk__Bowed, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_stk__Brass[] = {  {&_swigt__p_stk__Brass, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_stk__Chorus[] = {  {&_swigt__p_stk__Chorus, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_stk__Clarinet[] = {  {&_swigt__p_stk__Clarinet, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_stk__Cubic[] = {  {&_swigt__p_stk__Cubic, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_stk__Delay[] = {  {&_swigt__p_stk__Delay, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_stk__DelayA[] = {  {&_swigt__p_stk__DelayA, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_stk__DelayL[] = {  {&_swigt__p_stk__DelayL, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_stk__Drummer[] = {  {&_swigt__p_stk__Drummer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_stk__Echo[] = {  {&_swigt__p_stk__Echo, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_stk__Effect[] = {  {&_swigt__p_stk__Chorus, _p_stk__ChorusTo_p_stk__Effect, 0, 0},  {&_swigt__p_stk__PRCRev, _p_stk__PRCRevTo_p_stk__Effect, 0, 0},  {&_swigt__p_stk__NRev, _p_stk__NRevTo_p_stk__Effect, 0, 0},  {&_swigt__p_stk__Effect, 0, 0, 0},  {&_swigt__p_stk__Echo, _p_stk__EchoTo_p_stk__Effect, 0, 0},  {&_swigt__p_stk__JCRev, _p_stk__JCRevTo_p_stk__Effect, 0, 0},  {&_swigt__p_stk__FreeVerb, _p_stk__FreeVerbTo_p_stk__Effect, 0, 0},  {&_swigt__p_stk__LentPitShift, _p_stk__LentPitShiftTo_p_stk__Effect, 0, 0},  {&_swigt__p_stk__PitShift, _p_stk__PitShiftTo_p_stk__Effect, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_stk__Envelope[] = {  {&_swigt__p_stk__Envelope, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_stk__FM[] = {  {&_swigt__p_stk__BeeThree, _p_stk__BeeThreeTo_p_stk__FM, 0, 0},  {&_swigt__p_stk__HevyMetl, _p_stk__HevyMetlTo_p_stk__FM, 0, 0},  {&_swigt__p_stk__PercFlut, _p_stk__PercFlutTo_p_stk__FM, 0, 0},  {&_swigt__p_stk__Rhodey, _p_stk__RhodeyTo_p_stk__FM, 0, 0},  {&_swigt__p_stk__FMVoices, _p_stk__FMVoicesTo_p_stk__FM, 0, 0},  {&_swigt__p_stk__FM, 0, 0, 0},  {&_swigt__p_stk__Wurley, _p_stk__WurleyTo_p_stk__FM, 0, 0},  {&_swigt__p_stk__TubeBell, _p_stk__TubeBellTo_p_stk__FM, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_stk__FMVoices[] = {  {&_swigt__p_stk__FMVoices, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_stk__FileLoop[] = {  {&_swigt__p_stk__FileLoop, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_stk__FileRead[] = {  {&_swigt__p_stk__FileRead, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_stk__FileWrite[] = {  {&_swigt__p_stk__FileWrite, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_stk__FileWvIn[] = {  {&_swigt__p_stk__FileLoop, _p_stk__FileLoopTo_p_stk__FileWvIn, 0, 0},  {&_swigt__p_stk__FileWvIn, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_stk__FileWvOut[] = {  {&_swigt__p_stk__FileWvOut, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_stk__Filter[] = {  {&_swigt__p_stk__PoleZero, _p_stk__PoleZeroTo_p_stk__Filter, 0, 0},  {&_swigt__p_stk__OneZero, _p_stk__OneZeroTo_p_stk__Filter, 0, 0},  {&_swigt__p_stk__Iir, _p_stk__IirTo_p_stk__Filter, 0, 0},  {&_swigt__p_stk__FormSwep, _p_stk__FormSwepTo_p_stk__Filter, 0, 0},  {&_swigt__p_stk__OnePole, _p_stk__OnePoleTo_p_stk__Filter, 0, 0},  {&_swigt__p_stk__TwoZero, _p_stk__TwoZeroTo_p_stk__Filter, 0, 0},  {&_swigt__p_stk__Delay, _p_stk__DelayTo_p_stk__Filter, 0, 0},  {&_swigt__p_stk__TapDelay, _p_stk__TapDelayTo_p_stk__Filter, 0, 0},  {&_swigt__p_stk__DelayL, _p_stk__DelayLTo_p_stk__Filter, 0, 0},  {&_swigt__p_stk__Fir, _p_stk__FirTo_p_stk__Filter, 0, 0},  {&_swigt__p_stk__Filter, 0, 0, 0},  {&_swigt__p_stk__TwoPole, _p_stk__TwoPoleTo_p_stk__Filter, 0, 0},  {&_swigt__p_stk__BiQuad, _p_stk__BiQuadTo_p_stk__Filter, 0, 0},  {&_swigt__p_stk__DelayA, _p_stk__DelayATo_p_stk__Filter, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_stk__Fir[] = {  {&_swigt__p_stk__Fir, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_stk__Flute[] = {  {&_swigt__p_stk__Flute, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_stk__FormSwep[] = {  {&_swigt__p_stk__FormSwep, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_stk__FreeVerb[] = {  {&_swigt__p_stk__FreeVerb, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_stk__Function[] = {  {&_swigt__p_stk__ReedTable, _p_stk__ReedTableTo_p_stk__Function, 0, 0},  {&_swigt__p_stk__Function, 0, 0, 0},  {&_swigt__p_stk__BowTable, _p_stk__BowTableTo_p_stk__Function, 0, 0},  {&_swigt__p_stk__JetTable, _p_stk__JetTableTo_p_stk__Function, 0, 0},  {&_swigt__p_stk__Cubic, _p_stk__CubicTo_p_stk__Function, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_stk__Generator[] = {  {&_swigt__p_stk__BlitSquare, _p_stk__BlitSquareTo_p_stk__Generator, 0, 0},  {&_swigt__p_stk__Asymp, _p_stk__AsympTo_p_stk__Generator, 0, 0},  {&_swigt__p_stk__Noise, _p_stk__NoiseTo_p_stk__Generator, 0, 0},  {&_swigt__p_stk__BlitSaw, _p_stk__BlitSawTo_p_stk__Generator, 0, 0},  {&_swigt__p_stk__Generator, 0, 0, 0},  {&_swigt__p_stk__Envelope, _p_stk__EnvelopeTo_p_stk__Generator, 0, 0},  {&_swigt__p_stk__Granulate, _p_stk__GranulateTo_p_stk__Generator, 0, 0},  {&_swigt__p_stk__SineWave, _p_stk__SineWaveTo_p_stk__Generator, 0, 0},  {&_swigt__p_stk__ADSR, _p_stk__ADSRTo_p_stk__Generator, 0, 0},  {&_swigt__p_stk__Blit, _p_stk__BlitTo_p_stk__Generator, 0, 0},  {&_swigt__p_stk__Modulate, _p_stk__ModulateTo_p_stk__Generator, 0, 0},  {&_swigt__p_stk__SingWave, _p_stk__SingWaveTo_p_stk__Generator, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_stk__Granulate[] = {  {&_swigt__p_stk__Granulate, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_stk__Guitar[] = {  {&_swigt__p_stk__Guitar, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_stk__HevyMetl[] = {  {&_swigt__p_stk__HevyMetl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_stk__Iir[] = {  {&_swigt__p_stk__Iir, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_stk__InetWvIn[] = {  {&_swigt__p_stk__InetWvIn, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_stk__InetWvOut[] = {  {&_swigt__p_stk__InetWvOut, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_stk__Instrmnt[] = {  {&_swigt__p_stk__FM, _p_stk__FMTo_p_stk__Instrmnt, 0, 0},  {&_swigt__p_stk__BlowHole, _p_stk__BlowHoleTo_p_stk__Instrmnt, 0, 0},  {&_swigt__p_stk__Shakers, _p_stk__ShakersTo_p_stk__Instrmnt, 0, 0},  {&_swigt__p_stk__Instrmnt, 0, 0, 0},  {&_swigt__p_stk__Mandolin, _p_stk__MandolinTo_p_stk__Instrmnt, 0, 0},  {&_swigt__p_stk__Resonate, _p_stk__ResonateTo_p_stk__Instrmnt, 0, 0},  {&_swigt__p_stk__Simple, _p_stk__SimpleTo_p_stk__Instrmnt, 0, 0},  {&_swigt__p_stk__Drummer, _p_stk__DrummerTo_p_stk__Instrmnt, 0, 0},  {&_swigt__p_stk__Whistle, _p_stk__WhistleTo_p_stk__Instrmnt, 0, 0},  {&_swigt__p_stk__Sitar, _p_stk__SitarTo_p_stk__Instrmnt, 0, 0},  {&_swigt__p_stk__Sampler, _p_stk__SamplerTo_p_stk__Instrmnt, 0, 0},  {&_swigt__p_stk__Rhodey, _p_stk__RhodeyTo_p_stk__Instrmnt, 0, 0},  {&_swigt__p_stk__BlowBotl, _p_stk__BlowBotlTo_p_stk__Instrmnt, 0, 0},  {&_swigt__p_stk__VoicForm, _p_stk__VoicFormTo_p_stk__Instrmnt, 0, 0},  {&_swigt__p_stk__Brass, _p_stk__BrassTo_p_stk__Instrmnt, 0, 0},  {&_swigt__p_stk__Recorder, _p_stk__RecorderTo_p_stk__Instrmnt, 0, 0},  {&_swigt__p_stk__StifKarp, _p_stk__StifKarpTo_p_stk__Instrmnt, 0, 0},  {&_swigt__p_stk__Wurley, _p_stk__WurleyTo_p_stk__Instrmnt, 0, 0},  {&_swigt__p_stk__FMVoices, _p_stk__FMVoicesTo_p_stk__Instrmnt, 0, 0},  {&_swigt__p_stk__BeeThree, _p_stk__BeeThreeTo_p_stk__Instrmnt, 0, 0},  {&_swigt__p_stk__Modal, _p_stk__ModalTo_p_stk__Instrmnt, 0, 0},  {&_swigt__p_stk__Clarinet, _p_stk__ClarinetTo_p_stk__Instrmnt, 0, 0},  {&_swigt__p_stk__Saxofony, _p_stk__SaxofonyTo_p_stk__Instrmnt, 0, 0},  {&_swigt__p_stk__TubeBell, _p_stk__TubeBellTo_p_stk__Instrmnt, 0, 0},  {&_swigt__p_stk__HevyMetl, _p_stk__HevyMetlTo_p_stk__Instrmnt, 0, 0},  {&_swigt__p_stk__BandedWG, _p_stk__BandedWGTo_p_stk__Instrmnt, 0, 0},  {&_swigt__p_stk__ModalBar, _p_stk__ModalBarTo_p_stk__Instrmnt, 0, 0},  {&_swigt__p_stk__Flute, _p_stk__FluteTo_p_stk__Instrmnt, 0, 0},  {&_swigt__p_stk__Bowed, _p_stk__BowedTo_p_stk__Instrmnt, 0, 0},  {&_swigt__p_stk__PercFlut, _p_stk__PercFlutTo_p_stk__Instrmnt, 0, 0},  {&_swigt__p_stk__Mesh2D, _p_stk__Mesh2DTo_p_stk__Instrmnt, 0, 0},  {&_swigt__p_stk__Plucked, _p_stk__PluckedTo_p_stk__Instrmnt, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_stk__JCRev[] = {  {&_swigt__p_stk__JCRev, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_stk__JetTable[] = {  {&_swigt__p_stk__JetTable, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_stk__LentPitShift[] = {  {&_swigt__p_stk__LentPitShift, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_stk__Mandolin[] = {  {&_swigt__p_stk__Mandolin, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_stk__Mesh2D[] = {  {&_swigt__p_stk__Mesh2D, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_stk__Messager[] = {  {&_swigt__p_stk__Messager, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_stk__MidiFileIn[] = {  {&_swigt__p_stk__MidiFileIn, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_stk__Modal[] = {  {&_swigt__p_stk__Modal, 0, 0, 0},  {&_swigt__p_stk__ModalBar, _p_stk__ModalBarTo_p_stk__Modal, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_stk__ModalBar[] = {  {&_swigt__p_stk__ModalBar, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_stk__Modulate[] = {  {&_swigt__p_stk__Modulate, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_stk__Moog[] = {  {&_swigt__p_stk__Moog, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_stk__Mutex[] = {  {&_swigt__p_stk__Mutex, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_stk__NRev[] = {  {&_swigt__p_stk__NRev, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_stk__Noise[] = {  {&_swigt__p_stk__Noise, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_stk__OnePole[] = {  {&_swigt__p_stk__OnePole, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_stk__OneZero[] = {  {&_swigt__p_stk__OneZero, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_stk__PRCRev[] = {  {&_swigt__p_stk__PRCRev, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_stk__PercFlut[] = {  {&_swigt__p_stk__PercFlut, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_stk__Phonemes[] = {  {&_swigt__p_stk__Phonemes, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_stk__PitShift[] = {  {&_swigt__p_stk__PitShift, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_stk__Plucked[] = {  {&_swigt__p_stk__Plucked, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_stk__PoleZero[] = {  {&_swigt__p_stk__PoleZero, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_stk__Recorder[] = {  {&_swigt__p_stk__Recorder, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_stk__ReedTable[] = {  {&_swigt__p_stk__ReedTable, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_stk__Resonate[] = {  {&_swigt__p_stk__Resonate, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_stk__Rhodey[] = {  {&_swigt__p_stk__Rhodey, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_stk__RtWvIn[] = {  {&_swigt__p_stk__RtWvIn, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_stk__RtWvOut[] = {  {&_swigt__p_stk__RtWvOut, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_stk__Sampler[] = {  {&_swigt__p_stk__Sampler, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_stk__Saxofony[] = {  {&_swigt__p_stk__Saxofony, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_stk__Shakers[] = {  {&_swigt__p_stk__Shakers, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_stk__Simple[] = {  {&_swigt__p_stk__Simple, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_stk__SineWave[] = {  {&_swigt__p_stk__SineWave, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_stk__SingWave[] = {  {&_swigt__p_stk__SingWave, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_stk__Sitar[] = {  {&_swigt__p_stk__Sitar, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_stk__Socket[] = {  {&_swigt__p_stk__Socket, 0, 0, 0},  {&_swigt__p_stk__TcpServer, _p_stk__TcpServerTo_p_stk__Socket, 0, 0},  {&_swigt__p_stk__TcpClient, _p_stk__TcpClientTo_p_stk__Socket, 0, 0},  {&_swigt__p_stk__UdpSocket, _p_stk__UdpSocketTo_p_stk__Socket, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_stk__Sphere[] = {  {&_swigt__p_stk__Sphere, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_stk__StifKarp[] = {  {&_swigt__p_stk__StifKarp, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_stk__Stk[] = {  {&_swigt__p_stk__Whistle, _p_stk__WhistleTo_p_stk__Stk, 0, 0},  {&_swigt__p_stk__Generator, _p_stk__GeneratorTo_p_stk__Stk, 0, 0},  {&_swigt__p_stk__BandedWG, _p_stk__BandedWGTo_p_stk__Stk, 0, 0},  {&_swigt__p_stk__BlitSaw, _p_stk__BlitSawTo_p_stk__Stk, 0, 0},  {&_swigt__p_stk__Saxofony, _p_stk__SaxofonyTo_p_stk__Stk, 0, 0},  {&_swigt__p_stk__TapDelay, _p_stk__TapDelayTo_p_stk__Stk, 0, 0},  {&_swigt__p_stk__Chorus, _p_stk__ChorusTo_p_stk__Stk, 0, 0},  {&_swigt__p_stk__Delay, _p_stk__DelayTo_p_stk__Stk, 0, 0},  {&_swigt__p_stk__Echo, _p_stk__EchoTo_p_stk__Stk, 0, 0},  {&_swigt__p_stk__Modal, _p_stk__ModalTo_p_stk__Stk, 0, 0},  {&_swigt__p_stk__TcpServer, _p_stk__TcpServerTo_p_stk__Stk, 0, 0},  {&_swigt__p_stk__OnePole, _p_stk__OnePoleTo_p_stk__Stk, 0, 0},  {&_swigt__p_stk__Simple, _p_stk__SimpleTo_p_stk__Stk, 0, 0},  {&_swigt__p_stk__PRCRev, _p_stk__PRCRevTo_p_stk__Stk, 0, 0},  {&_swigt__p_stk__Filter, _p_stk__FilterTo_p_stk__Stk, 0, 0},  {&_swigt__p_stk__Sampler, _p_stk__SamplerTo_p_stk__Stk, 0, 0},  {&_swigt__p_stk__BlowHole, _p_stk__BlowHoleTo_p_stk__Stk, 0, 0},  {&_swigt__p_stk__SineWave, _p_stk__SineWaveTo_p_stk__Stk, 0, 0},  {&_swigt__p_stk__Noise, _p_stk__NoiseTo_p_stk__Stk, 0, 0},  {&_swigt__p_stk__Guitar, _p_stk__GuitarTo_p_stk__Stk, 0, 0},  {&_swigt__p_stk__Modulate, _p_stk__ModulateTo_p_stk__Stk, 0, 0},  {&_swigt__p_stk__ADSR, _p_stk__ADSRTo_p_stk__Stk, 0, 0},  {&_swigt__p_stk__BeeThree, _p_stk__BeeThreeTo_p_stk__Stk, 0, 0},  {&_swigt__p_stk__Effect, _p_stk__EffectTo_p_stk__Stk, 0, 0},  {&_swigt__p_stk__FileRead, _p_stk__FileReadTo_p_stk__Stk, 0, 0},  {&_swigt__p_stk__Stk, 0, 0, 0},  {&_swigt__p_stk__Iir, _p_stk__IirTo_p_stk__Stk, 0, 0},  {&_swigt__p_stk__Mandolin, _p_stk__MandolinTo_p_stk__Stk, 0, 0},  {&_swigt__p_stk__Phonemes, _p_stk__PhonemesTo_p_stk__Stk, 0, 0},  {&_swigt__p_stk__VoicForm, _p_stk__VoicFormTo_p_stk__Stk, 0, 0},  {&_swigt__p_stk__Drummer, _p_stk__DrummerTo_p_stk__Stk, 0, 0},  {&_swigt__p_stk__MidiFileIn, _p_stk__MidiFileInTo_p_stk__Stk, 0, 0},  {&_swigt__p_stk__FM, _p_stk__FMTo_p_stk__Stk, 0, 0},  {&_swigt__p_stk__SingWave, _p_stk__SingWaveTo_p_stk__Stk, 0, 0},  {&_swigt__p_stk__Fir, _p_stk__FirTo_p_stk__Stk, 0, 0},  {&_swigt__p_stk__Vector3D, _p_stk__Vector3DTo_p_stk__Stk, 0, 0},  {&_swigt__p_stk__FreeVerb, _p_stk__FreeVerbTo_p_stk__Stk, 0, 0},  {&_swigt__p_stk__Instrmnt, _p_stk__InstrmntTo_p_stk__Stk, 0, 0},  {&_swigt__p_stk__Twang, _p_stk__TwangTo_p_stk__Stk, 0, 0},  {&_swigt__p_stk__Voicer, _p_stk__VoicerTo_p_stk__Stk, 0, 0},  {&_swigt__p_stk__FMVoices, _p_stk__FMVoicesTo_p_stk__Stk, 0, 0},  {&_swigt__p_stk__TwoZero, _p_stk__TwoZeroTo_p_stk__Stk, 0, 0},  {&_swigt__p_stk__Sitar, _p_stk__SitarTo_p_stk__Stk, 0, 0},  {&_swigt__p_stk__Plucked, _p_stk__PluckedTo_p_stk__Stk, 0, 0},  {&_swigt__p_stk__FileWrite, _p_stk__FileWriteTo_p_stk__Stk, 0, 0},  {&_swigt__p_stk__Envelope, _p_stk__EnvelopeTo_p_stk__Stk, 0, 0},  {&_swigt__p_stk__ReedTable, _p_stk__ReedTableTo_p_stk__Stk, 0, 0},  {&_swigt__p_stk__Socket, _p_stk__SocketTo_p_stk__Stk, 0, 0},  {&_swigt__p_stk__PercFlut, _p_stk__PercFlutTo_p_stk__Stk, 0, 0},  {&_swigt__p_stk__BiQuad, _p_stk__BiQuadTo_p_stk__Stk, 0, 0},  {&_swigt__p_stk__Recorder, _p_stk__RecorderTo_p_stk__Stk, 0, 0},  {&_swigt__p_stk__Thread, _p_stk__ThreadTo_p_stk__Stk, 0, 0},  {&_swigt__p_stk__ModalBar, _p_stk__ModalBarTo_p_stk__Stk, 0, 0},  {&_swigt__p_stk__PoleZero, _p_stk__PoleZeroTo_p_stk__Stk, 0, 0},  {&_swigt__p_stk__Bowed, _p_stk__BowedTo_p_stk__Stk, 0, 0},  {&_swigt__p_stk__Wurley, _p_stk__WurleyTo_p_stk__Stk, 0, 0},  {&_swigt__p_stk__DelayA, _p_stk__DelayATo_p_stk__Stk, 0, 0},  {&_swigt__p_stk__JCRev, _p_stk__JCRevTo_p_stk__Stk, 0, 0},  {&_swigt__p_stk__NRev, _p_stk__NRevTo_p_stk__Stk, 0, 0},  {&_swigt__p_stk__Brass, _p_stk__BrassTo_p_stk__Stk, 0, 0},  {&_swigt__p_stk__Granulate, _p_stk__GranulateTo_p_stk__Stk, 0, 0},  {&_swigt__p_stk__Function, _p_stk__FunctionTo_p_stk__Stk, 0, 0},  {&_swigt__p_stk__BlitSquare, _p_stk__BlitSquareTo_p_stk__Stk, 0, 0},  {&_swigt__p_stk__TwoPole, _p_stk__TwoPoleTo_p_stk__Stk, 0, 0},  {&_swigt__p_stk__PitShift, _p_stk__PitShiftTo_p_stk__Stk, 0, 0},  {&_swigt__p_stk__LentPitShift, _p_stk__LentPitShiftTo_p_stk__Stk, 0, 0},  {&_swigt__p_stk__DelayL, _p_stk__DelayLTo_p_stk__Stk, 0, 0},  {&_swigt__p_stk__Resonate, _p_stk__ResonateTo_p_stk__Stk, 0, 0},  {&_swigt__p_stk__BlowBotl, _p_stk__BlowBotlTo_p_stk__Stk, 0, 0},  {&_swigt__p_stk__TcpClient, _p_stk__TcpClientTo_p_stk__Stk, 0, 0},  {&_swigt__p_stk__BowTable, _p_stk__BowTableTo_p_stk__Stk, 0, 0},  {&_swigt__p_stk__StifKarp, _p_stk__StifKarpTo_p_stk__Stk, 0, 0},  {&_swigt__p_stk__TubeBell, _p_stk__TubeBellTo_p_stk__Stk, 0, 0},  {&_swigt__p_stk__Blit, _p_stk__BlitTo_p_stk__Stk, 0, 0},  {&_swigt__p_stk__Cubic, _p_stk__CubicTo_p_stk__Stk, 0, 0},  {&_swigt__p_stk__Rhodey, _p_stk__RhodeyTo_p_stk__Stk, 0, 0},  {&_swigt__p_stk__Clarinet, _p_stk__ClarinetTo_p_stk__Stk, 0, 0},  {&_swigt__p_stk__Flute, _p_stk__FluteTo_p_stk__Stk, 0, 0},  {&_swigt__p_stk__JetTable, _p_stk__JetTableTo_p_stk__Stk, 0, 0},  {&_swigt__p_stk__OneZero, _p_stk__OneZeroTo_p_stk__Stk, 0, 0},  {&_swigt__p_stk__UdpSocket, _p_stk__UdpSocketTo_p_stk__Stk, 0, 0},  {&_swigt__p_stk__Sphere, _p_stk__SphereTo_p_stk__Stk, 0, 0},  {&_swigt__p_stk__HevyMetl, _p_stk__HevyMetlTo_p_stk__Stk, 0, 0},  {&_swigt__p_stk__Messager, _p_stk__MessagerTo_p_stk__Stk, 0, 0},  {&_swigt__p_stk__Mesh2D, _p_stk__Mesh2DTo_p_stk__Stk, 0, 0},  {&_swigt__p_stk__Mutex, _p_stk__MutexTo_p_stk__Stk, 0, 0},  {&_swigt__p_stk__Asymp, _p_stk__AsympTo_p_stk__Stk, 0, 0},  {&_swigt__p_stk__FormSwep, _p_stk__FormSwepTo_p_stk__Stk, 0, 0},  {&_swigt__p_stk__Shakers, _p_stk__ShakersTo_p_stk__Stk, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_stk__StkError[] = {  {&_swigt__p_stk__StkError, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_stk__StkFrames[] = {  {&_swigt__p_stk__StkFrames, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_stk__TapDelay[] = {  {&_swigt__p_stk__TapDelay, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_stk__TcpClient[] = {  {&_swigt__p_stk__TcpClient, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_stk__TcpServer[] = {  {&_swigt__p_stk__TcpServer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_stk__Thread[] = {  {&_swigt__p_stk__Thread, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_stk__TubeBell[] = {  {&_swigt__p_stk__TubeBell, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_stk__Twang[] = {  {&_swigt__p_stk__Twang, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_stk__TwoPole[] = {  {&_swigt__p_stk__TwoPole, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_stk__TwoZero[] = {  {&_swigt__p_stk__TwoZero, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_stk__UdpSocket[] = {  {&_swigt__p_stk__UdpSocket, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_stk__Vector3D[] = {  {&_swigt__p_stk__Vector3D, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_stk__VoicForm[] = {  {&_swigt__p_stk__VoicForm, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_stk__Voicer[] = {  {&_swigt__p_stk__Voicer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_stk__Whistle[] = {  {&_swigt__p_stk__Whistle, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_stk__Wurley[] = {  {&_swigt__p_stk__Wurley, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_swig__SwigPyIterator[] = {  {&_swigt__p_swig__SwigPyIterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_char[] = {  {&_swigt__p_unsigned_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_int[] = {  {&_swigt__p_unsigned_int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_long_long[] = {  {&_swigt__p_unsigned_long_long, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_short[] = {  {&_swigt__p_unsigned_short, 0, 0, 0},{0, 0, 0, 0}};

static swig_cast_info *swig_cast_initial[] = {
  _swigc__p_FILE_TYPE,
  _swigc__p_Skini__Message,
  _swigc__p_THREAD_FUNCTION,
  _swigc__p_Vector3D,
  _swigc__p_char,
  _swigc__p_double,
  _swigc__p_float,
  _swigc__p_int,
  _swigc__p_long_long,
  _swigc__p_p_char,
  _swigc__p_short,
  _swigc__p_signed_char,
  _swigc__p_std__string,
  _swigc__p_std__vectorT_float_std__allocatorT_float_t_t,
  _swigc__p_std__vectorT_unsigned_char_std__allocatorT_unsigned_char_t_t,
  _swigc__p_std__vectorT_unsigned_long_std__allocatorT_unsigned_long_t_t,
  _swigc__p_stk__ADSR,
  _swigc__p_stk__Asymp,
  _swigc__p_stk__BandedWG,
  _swigc__p_stk__BeeThree,
  _swigc__p_stk__BiQuad,
  _swigc__p_stk__Blit,
  _swigc__p_stk__BlitSaw,
  _swigc__p_stk__BlitSquare,
  _swigc__p_stk__BlowBotl,
  _swigc__p_stk__BlowHole,
  _swigc__p_stk__BowTable,
  _swigc__p_stk__Bowed,
  _swigc__p_stk__Brass,
  _swigc__p_stk__Chorus,
  _swigc__p_stk__Clarinet,
  _swigc__p_stk__Cubic,
  _swigc__p_stk__Delay,
  _swigc__p_stk__DelayA,
  _swigc__p_stk__DelayL,
  _swigc__p_stk__Drummer,
  _swigc__p_stk__Echo,
  _swigc__p_stk__Effect,
  _swigc__p_stk__Envelope,
  _swigc__p_stk__FM,
  _swigc__p_stk__FMVoices,
  _swigc__p_stk__FileLoop,
  _swigc__p_stk__FileRead,
  _swigc__p_stk__FileWrite,
  _swigc__p_stk__FileWvIn,
  _swigc__p_stk__FileWvOut,
  _swigc__p_stk__Filter,
  _swigc__p_stk__Fir,
  _swigc__p_stk__Flute,
  _swigc__p_stk__FormSwep,
  _swigc__p_stk__FreeVerb,
  _swigc__p_stk__Function,
  _swigc__p_stk__Generator,
  _swigc__p_stk__Granulate,
  _swigc__p_stk__Guitar,
  _swigc__p_stk__HevyMetl,
  _swigc__p_stk__Iir,
  _swigc__p_stk__InetWvIn,
  _swigc__p_stk__InetWvOut,
  _swigc__p_stk__Instrmnt,
  _swigc__p_stk__JCRev,
  _swigc__p_stk__JetTable,
  _swigc__p_stk__LentPitShift,
  _swigc__p_stk__Mandolin,
  _swigc__p_stk__Mesh2D,
  _swigc__p_stk__Messager,
  _swigc__p_stk__MidiFileIn,
  _swigc__p_stk__Modal,
  _swigc__p_stk__ModalBar,
  _swigc__p_stk__Modulate,
  _swigc__p_stk__Moog,
  _swigc__p_stk__Mutex,
  _swigc__p_stk__NRev,
  _swigc__p_stk__Noise,
  _swigc__p_stk__OnePole,
  _swigc__p_stk__OneZero,
  _swigc__p_stk__PRCRev,
  _swigc__p_stk__PercFlut,
  _swigc__p_stk__Phonemes,
  _swigc__p_stk__PitShift,
  _swigc__p_stk__Plucked,
  _swigc__p_stk__PoleZero,
  _swigc__p_stk__Recorder,
  _swigc__p_stk__ReedTable,
  _swigc__p_stk__Resonate,
  _swigc__p_stk__Rhodey,
  _swigc__p_stk__RtWvIn,
  _swigc__p_stk__RtWvOut,
  _swigc__p_stk__Sampler,
  _swigc__p_stk__Saxofony,
  _swigc__p_stk__Shakers,
  _swigc__p_stk__Simple,
  _swigc__p_stk__SineWave,
  _swigc__p_stk__SingWave,
  _swigc__p_stk__Sitar,
  _swigc__p_stk__Socket,
  _swigc__p_stk__Sphere,
  _swigc__p_stk__StifKarp,
  _swigc__p_stk__Stk,
  _swigc__p_stk__StkError,
  _swigc__p_stk__StkFrames,
  _swigc__p_stk__TapDelay,
  _swigc__p_stk__TcpClient,
  _swigc__p_stk__TcpServer,
  _swigc__p_stk__Thread,
  _swigc__p_stk__TubeBell,
  _swigc__p_stk__Twang,
  _swigc__p_stk__TwoPole,
  _swigc__p_stk__TwoZero,
  _swigc__p_stk__UdpSocket,
  _swigc__p_stk__Vector3D,
  _swigc__p_stk__VoicForm,
  _swigc__p_stk__Voicer,
  _swigc__p_stk__Whistle,
  _swigc__p_stk__Wurley,
  _swigc__p_swig__SwigPyIterator,
  _swigc__p_unsigned_char,
  _swigc__p_unsigned_int,
  _swigc__p_unsigned_long_long,
  _swigc__p_unsigned_short,
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (END) -------- */

static swig_const_info swig_const_table[] = {
{0, 0, 0, 0.0, 0, 0}};

#ifdef __cplusplus
}
#endif
/* -----------------------------------------------------------------------------
 * Type initialization:
 * This problem is tough by the requirement that no dynamic
 * memory is used. Also, since swig_type_info structures store pointers to
 * swig_cast_info structures and swig_cast_info structures store pointers back
 * to swig_type_info structures, we need some lookup code at initialization.
 * The idea is that swig generates all the structures that are needed.
 * The runtime then collects these partially filled structures.
 * The SWIG_InitializeModule function takes these initial arrays out of
 * swig_module, and does all the lookup, filling in the swig_module.types
 * array with the correct data and linking the correct swig_cast_info
 * structures together.
 *
 * The generated swig_type_info structures are assigned statically to an initial
 * array. We just loop through that array, and handle each type individually.
 * First we lookup if this type has been already loaded, and if so, use the
 * loaded structure instead of the generated one. Then we have to fill in the
 * cast linked list. The cast data is initially stored in something like a
 * two-dimensional array. Each row corresponds to a type (there are the same
 * number of rows as there are in the swig_type_initial array). Each entry in
 * a column is one of the swig_cast_info structures for that type.
 * The cast_initial array is actually an array of arrays, because each row has
 * a variable number of columns. So to actually build the cast linked list,
 * we find the array of casts associated with the type, and loop through it
 * adding the casts to the list. The one last trick we need to do is making
 * sure the type pointer in the swig_cast_info struct is correct.
 *
 * First off, we lookup the cast->type name to see if it is already loaded.
 * There are three cases to handle:
 *  1) If the cast->type has already been loaded AND the type we are adding
 *     casting info to has not been loaded (it is in this module), THEN we
 *     replace the cast->type pointer with the type pointer that has already
 *     been loaded.
 *  2) If BOTH types (the one we are adding casting info to, and the
 *     cast->type) are loaded, THEN the cast info has already been loaded by
 *     the previous module so we just ignore it.
 *  3) Finally, if cast->type has not already been loaded, then we add that
 *     swig_cast_info to the linked list (because the cast->type) pointer will
 *     be correct.
 * ----------------------------------------------------------------------------- */

#ifdef __cplusplus
extern "C" {
#if 0
} /* c-mode */
#endif
#endif

#if 0
#define SWIGRUNTIME_DEBUG
#endif

#ifndef SWIG_INIT_CLIENT_DATA_TYPE
#define SWIG_INIT_CLIENT_DATA_TYPE void *
#endif

SWIGRUNTIME void
SWIG_InitializeModule(SWIG_INIT_CLIENT_DATA_TYPE clientdata) {
  size_t i;
  swig_module_info *module_head, *iter;
  int init;
  
  /* check to see if the circular list has been setup, if not, set it up */
  if (swig_module.next==0) {
    /* Initialize the swig_module */
    swig_module.type_initial = swig_type_initial;
    swig_module.cast_initial = swig_cast_initial;
    swig_module.next = &swig_module;
    init = 1;
  } else {
    init = 0;
  }
  
  /* Try and load any already created modules */
  module_head = SWIG_GetModule(clientdata);
  if (!module_head) {
    /* This is the first module loaded for this interpreter */
    /* so set the swig module into the interpreter */
    SWIG_SetModule(clientdata, &swig_module);
  } else {
    /* the interpreter has loaded a SWIG module, but has it loaded this one? */
    iter=module_head;
    do {
      if (iter==&swig_module) {
        /* Our module is already in the list, so there's nothing more to do. */
        return;
      }
      iter=iter->next;
    } while (iter!= module_head);
    
    /* otherwise we must add our module into the list */
    swig_module.next = module_head->next;
    module_head->next = &swig_module;
  }
  
  /* When multiple interpreters are used, a module could have already been initialized in
       a different interpreter, but not yet have a pointer in this interpreter.
       In this case, we do not want to continue adding types... everything should be
       set up already */
  if (init == 0) return;
  
  /* Now work on filling in swig_module.types */
#ifdef SWIGRUNTIME_DEBUG
  printf("SWIG_InitializeModule: size %lu\n", (unsigned long)swig_module.size);
#endif
  for (i = 0; i < swig_module.size; ++i) {
    swig_type_info *type = 0;
    swig_type_info *ret;
    swig_cast_info *cast;
    
#ifdef SWIGRUNTIME_DEBUG
    printf("SWIG_InitializeModule: type %lu %s\n", (unsigned long)i, swig_module.type_initial[i]->name);
#endif
    
    /* if there is another module already loaded */
    if (swig_module.next != &swig_module) {
      type = SWIG_MangledTypeQueryModule(swig_module.next, &swig_module, swig_module.type_initial[i]->name);
    }
    if (type) {
      /* Overwrite clientdata field */
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: found type %s\n", type->name);
#endif
      if (swig_module.type_initial[i]->clientdata) {
        type->clientdata = swig_module.type_initial[i]->clientdata;
#ifdef SWIGRUNTIME_DEBUG
        printf("SWIG_InitializeModule: found and overwrite type %s \n", type->name);
#endif
      }
    } else {
      type = swig_module.type_initial[i];
    }
    
    /* Insert casting types */
    cast = swig_module.cast_initial[i];
    while (cast->type) {
      /* Don't need to add information already in the list */
      ret = 0;
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: look cast %s\n", cast->type->name);
#endif
      if (swig_module.next != &swig_module) {
        ret = SWIG_MangledTypeQueryModule(swig_module.next, &swig_module, cast->type->name);
#ifdef SWIGRUNTIME_DEBUG
        if (ret) printf("SWIG_InitializeModule: found cast %s\n", ret->name);
#endif
      }
      if (ret) {
        if (type == swig_module.type_initial[i]) {
#ifdef SWIGRUNTIME_DEBUG
          printf("SWIG_InitializeModule: skip old type %s\n", ret->name);
#endif
          cast->type = ret;
          ret = 0;
        } else {
          /* Check for casting already in the list */
          swig_cast_info *ocast = SWIG_TypeCheck(ret->name, type);
#ifdef SWIGRUNTIME_DEBUG
          if (ocast) printf("SWIG_InitializeModule: skip old cast %s\n", ret->name);
#endif
          if (!ocast) ret = 0;
        }
      }
      
      if (!ret) {
#ifdef SWIGRUNTIME_DEBUG
        printf("SWIG_InitializeModule: adding cast %s\n", cast->type->name);
#endif
        if (type->cast) {
          type->cast->prev = cast;
          cast->next = type->cast;
        }
        type->cast = cast;
      }
      cast++;
    }
    /* Set entry in modules->types array equal to the type */
    swig_module.types[i] = type;
  }
  swig_module.types[i] = 0;
  
#ifdef SWIGRUNTIME_DEBUG
  printf("**** SWIG_InitializeModule: Cast List ******\n");
  for (i = 0; i < swig_module.size; ++i) {
    int j = 0;
    swig_cast_info *cast = swig_module.cast_initial[i];
    printf("SWIG_InitializeModule: type %lu %s\n", (unsigned long)i, swig_module.type_initial[i]->name);
    while (cast->type) {
      printf("SWIG_InitializeModule: cast type %s\n", cast->type->name);
      cast++;
      ++j;
    }
    printf("---- Total casts: %d\n",j);
  }
  printf("**** SWIG_InitializeModule: Cast List ******\n");
#endif
}

/* This function will propagate the clientdata field of type to
* any new swig_type_info structures that have been added into the list
* of equivalent types.  It is like calling
* SWIG_TypeClientData(type, clientdata) a second time.
*/
SWIGRUNTIME void
SWIG_PropagateClientData(void) {
  size_t i;
  swig_cast_info *equiv;
  static int init_run = 0;
  
  if (init_run) return;
  init_run = 1;
  
  for (i = 0; i < swig_module.size; i++) {
    if (swig_module.types[i]->clientdata) {
      equiv = swig_module.types[i]->cast;
      while (equiv) {
        if (!equiv->converter) {
          if (equiv->type && !equiv->type->clientdata)
          SWIG_TypeClientData(equiv->type, swig_module.types[i]->clientdata);
        }
        equiv = equiv->next;
      }
    }
  }
}

#ifdef __cplusplus
#if 0
{
  /* c-mode */
#endif
}
#endif



#ifdef __cplusplus
extern "C" {
#endif
  
  /* -----------------------------------------------------------------------------
   * constants/methods manipulation
   * ----------------------------------------------------------------------------- */
  
  /* Install Constants */
  SWIGINTERN void
  SWIG_Python_InstallConstants(PyObject *d, swig_const_info constants[]) {
    PyObject *obj = 0;
    size_t i;
    for (i = 0; constants[i].type; ++i) {
      switch(constants[i].type) {
      case SWIG_PY_POINTER:
        obj = SWIG_InternalNewPointerObj(constants[i].pvalue, *(constants[i]).ptype,0);
        break;
      case SWIG_PY_BINARY:
        obj = SWIG_NewPackedObj(constants[i].pvalue, constants[i].lvalue, *(constants[i].ptype));
        break;
      default:
        obj = 0;
        break;
      }
      if (obj) {
        PyDict_SetItemString(d, constants[i].name, obj);
        Py_DECREF(obj);
      }
    }
  }
  
  /* -----------------------------------------------------------------------------
   * Patch %callback methods' docstrings to hold the callback ptrs
   * -----------------------------------------------------------------------------*/
  
  SWIGINTERN void
  SWIG_Python_FixMethods(PyMethodDef *methods, const swig_const_info *const_table, swig_type_info **types, swig_type_info **types_initial) {
    size_t i;
    for (i = 0; methods[i].ml_name; ++i) {
      const char *c = methods[i].ml_doc;
      if (!c) continue;
      c = strstr(c, "swig_ptr: ");
      if (c) {
        int j;
        const swig_const_info *ci = 0;
        const char *name = c + 10;
        for (j = 0; const_table[j].type; ++j) {
          if (strncmp(const_table[j].name, name, 
              strlen(const_table[j].name)) == 0) {
            ci = &(const_table[j]);
            break;
          }
        }
        if (ci) {
          void *ptr = (ci->type == SWIG_PY_POINTER) ? ci->pvalue : 0;
          if (ptr) {
            size_t shift = (ci->ptype) - types;
            swig_type_info *ty = types_initial[shift];
            size_t ldoc = (c - methods[i].ml_doc);
            size_t lptr = strlen(ty->name)+2*sizeof(void*)+2;
            char *ndoc = (char*)malloc(ldoc + lptr + 10);
            if (ndoc) {
              char *buff = ndoc;
              memcpy(buff, methods[i].ml_doc, ldoc);
              buff += ldoc;
              memcpy(buff, "swig_ptr: ", 10);
              buff += 10;
              SWIG_PackVoidPtr(buff, ptr, ty->name, lptr);
              methods[i].ml_doc = ndoc;
            }
          }
        }
      }
    }
  } 
  
#ifdef __cplusplus
}
#endif




/* -----------------------------------------------------------------------------*
 *  Partial Init method
 * -----------------------------------------------------------------------------*/

#ifdef __cplusplus
extern "C"
#endif

SWIGEXPORT 
#if PY_VERSION_HEX >= 0x03000000
PyObject*
#else
void
#endif
SWIG_init(void) {
  PyObject *m, *d, *md, *globals;
  
#if PY_VERSION_HEX >= 0x03000000
  static struct PyModuleDef SWIG_module = {
    PyModuleDef_HEAD_INIT,
    SWIG_name,
    NULL,
    -1,
    SwigMethods,
    NULL,
    NULL,
    NULL,
    NULL
  };
#endif
  
#if defined(SWIGPYTHON_BUILTIN)
  static SwigPyClientData SwigPyObject_clientdata = {
    0, 0, 0, 0, 0, 0, 0
  };
  static PyGetSetDef this_getset_def = {
    (char *)"this", &SwigPyBuiltin_ThisClosure, NULL, NULL, NULL
  };
  static SwigPyGetSet thisown_getset_closure = {
    SwigPyObject_own,
    SwigPyObject_own
  };
  static PyGetSetDef thisown_getset_def = {
    (char *)"thisown", SwigPyBuiltin_GetterClosure, SwigPyBuiltin_SetterClosure, NULL, &thisown_getset_closure
  };
  PyTypeObject *builtin_pytype;
  int builtin_base_count;
  swig_type_info *builtin_basetype;
  PyObject *tuple;
  PyGetSetDescrObject *static_getset;
  PyTypeObject *metatype;
  PyTypeObject *swigpyobject;
  SwigPyClientData *cd;
  PyObject *public_interface, *public_symbol;
  PyObject *this_descr;
  PyObject *thisown_descr;
  PyObject *self = 0;
  int i;
  
  (void)builtin_pytype;
  (void)builtin_base_count;
  (void)builtin_basetype;
  (void)tuple;
  (void)static_getset;
  (void)self;
  
  /* Metaclass is used to implement static member variables */
  metatype = SwigPyObjectType();
  assert(metatype);
#endif
  
  (void)globals;
  
  /* Create singletons now to avoid potential deadlocks with multi-threaded usage after module initialization */
  SWIG_This();
  SWIG_Python_TypeCache();
  SwigPyPacked_type();
#ifndef SWIGPYTHON_BUILTIN
  SwigPyObject_type();
#endif
  
  /* Fix SwigMethods to carry the callback ptrs when needed */
  SWIG_Python_FixMethods(SwigMethods, swig_const_table, swig_types, swig_type_initial);
  
#if PY_VERSION_HEX >= 0x03000000
  m = PyModule_Create(&SWIG_module);
#else
  m = Py_InitModule(SWIG_name, SwigMethods);
#endif
  
  md = d = PyModule_GetDict(m);
  (void)md;
  
  SWIG_InitializeModule(0);
  
#ifdef SWIGPYTHON_BUILTIN
  swigpyobject = SwigPyObject_TypeOnce();
  
  SwigPyObject_stype = SWIG_MangledTypeQuery("_p_SwigPyObject");
  assert(SwigPyObject_stype);
  cd = (SwigPyClientData*) SwigPyObject_stype->clientdata;
  if (!cd) {
    SwigPyObject_stype->clientdata = &SwigPyObject_clientdata;
    SwigPyObject_clientdata.pytype = swigpyobject;
  } else if (swigpyobject->tp_basicsize != cd->pytype->tp_basicsize) {
    PyErr_SetString(PyExc_RuntimeError, "Import error: attempted to load two incompatible swig-generated modules.");
# if PY_VERSION_HEX >= 0x03000000
    return NULL;
# else
    return;
# endif
  }
  
  /* All objects have a 'this' attribute */
  this_descr = PyDescr_NewGetSet(SwigPyObject_type(), &this_getset_def);
  (void)this_descr;
  
  /* All objects have a 'thisown' attribute */
  thisown_descr = PyDescr_NewGetSet(SwigPyObject_type(), &thisown_getset_def);
  (void)thisown_descr;
  
  public_interface = PyList_New(0);
  public_symbol = 0;
  (void)public_symbol;
  
  PyDict_SetItemString(md, "__all__", public_interface);
  Py_DECREF(public_interface);
  for (i = 0; SwigMethods[i].ml_name != NULL; ++i)
  SwigPyBuiltin_AddPublicSymbol(public_interface, SwigMethods[i].ml_name);
  for (i = 0; swig_const_table[i].name != 0; ++i)
  SwigPyBuiltin_AddPublicSymbol(public_interface, swig_const_table[i].name);
#endif
  
  SWIG_InstallConstants(d,swig_const_table);
  
  SWIG_Python_SetConstant(d, "StkError_STATUS",SWIG_From_int(static_cast< int >(stk::StkError::STATUS)));
  SWIG_Python_SetConstant(d, "StkError_WARNING",SWIG_From_int(static_cast< int >(stk::StkError::WARNING)));
  SWIG_Python_SetConstant(d, "StkError_DEBUG_PRINT",SWIG_From_int(static_cast< int >(stk::StkError::DEBUG_PRINT)));
  SWIG_Python_SetConstant(d, "StkError_MEMORY_ALLOCATION",SWIG_From_int(static_cast< int >(stk::StkError::MEMORY_ALLOCATION)));
  SWIG_Python_SetConstant(d, "StkError_MEMORY_ACCESS",SWIG_From_int(static_cast< int >(stk::StkError::MEMORY_ACCESS)));
  SWIG_Python_SetConstant(d, "StkError_FUNCTION_ARGUMENT",SWIG_From_int(static_cast< int >(stk::StkError::FUNCTION_ARGUMENT)));
  SWIG_Python_SetConstant(d, "StkError_FILE_NOT_FOUND",SWIG_From_int(static_cast< int >(stk::StkError::FILE_NOT_FOUND)));
  SWIG_Python_SetConstant(d, "StkError_FILE_UNKNOWN_FORMAT",SWIG_From_int(static_cast< int >(stk::StkError::FILE_UNKNOWN_FORMAT)));
  SWIG_Python_SetConstant(d, "StkError_FILE_ERROR",SWIG_From_int(static_cast< int >(stk::StkError::FILE_ERROR)));
  SWIG_Python_SetConstant(d, "StkError_PROCESS_THREAD",SWIG_From_int(static_cast< int >(stk::StkError::PROCESS_THREAD)));
  SWIG_Python_SetConstant(d, "StkError_PROCESS_SOCKET",SWIG_From_int(static_cast< int >(stk::StkError::PROCESS_SOCKET)));
  SWIG_Python_SetConstant(d, "StkError_PROCESS_SOCKET_IPADDR",SWIG_From_int(static_cast< int >(stk::StkError::PROCESS_SOCKET_IPADDR)));
  SWIG_Python_SetConstant(d, "StkError_AUDIO_SYSTEM",SWIG_From_int(static_cast< int >(stk::StkError::AUDIO_SYSTEM)));
  SWIG_Python_SetConstant(d, "StkError_MIDI_SYSTEM",SWIG_From_int(static_cast< int >(stk::StkError::MIDI_SYSTEM)));
  SWIG_Python_SetConstant(d, "StkError_UNSPECIFIED",SWIG_From_int(static_cast< int >(stk::StkError::UNSPECIFIED)));
  globals = SWIG_globals();
  if (!globals) {
    PyErr_SetString(PyExc_TypeError, "Failure to create SWIG globals.");
#if PY_VERSION_HEX >= 0x03000000
    return NULL;
#else
    return;
#endif
  }
  PyDict_SetItemString(md, "cvar", globals);
  SWIG_addvarlink(globals, "SRATE", Swig_var_SRATE_get, Swig_var_SRATE_set);
  SWIG_addvarlink(globals, "RT_BUFFER_SIZE", Swig_var_RT_BUFFER_SIZE_get, Swig_var_RT_BUFFER_SIZE_set);
  SWIG_addvarlink(globals, "PI", Swig_var_PI_get, Swig_var_PI_set);
  SWIG_addvarlink(globals, "TWO_PI", Swig_var_TWO_PI_get, Swig_var_TWO_PI_set);
  SWIG_addvarlink(globals, "ONE_OVER_128", Swig_var_ONE_OVER_128_get, Swig_var_ONE_OVER_128_set);
  SWIG_Python_SetConstant(d, "ADSR_ATTACK",SWIG_From_int(static_cast< int >(stk::ADSR::ATTACK)));
  SWIG_Python_SetConstant(d, "ADSR_DECAY",SWIG_From_int(static_cast< int >(stk::ADSR::DECAY)));
  SWIG_Python_SetConstant(d, "ADSR_SUSTAIN",SWIG_From_int(static_cast< int >(stk::ADSR::SUSTAIN)));
  SWIG_Python_SetConstant(d, "ADSR_RELEASE",SWIG_From_int(static_cast< int >(stk::ADSR::RELEASE)));
  SWIG_Python_SetConstant(d, "ADSR_IDLE",SWIG_From_int(static_cast< int >(stk::ADSR::IDLE)));
  SWIG_addvarlink(globals, "TARGET_THRESHOLD", Swig_var_TARGET_THRESHOLD_get, Swig_var_TARGET_THRESHOLD_set);
  SWIG_addvarlink(globals, "MAX_BANDED_MODES", Swig_var_MAX_BANDED_MODES_get, Swig_var_MAX_BANDED_MODES_set);
  SWIG_addvarlink(globals, "FileWrite_FILE_RAW", Swig_var_FileWrite_FILE_RAW_get, Swig_var_FileWrite_FILE_RAW_set);
  SWIG_addvarlink(globals, "FileWrite_FILE_WAV", Swig_var_FileWrite_FILE_WAV_get, Swig_var_FileWrite_FILE_WAV_set);
  SWIG_addvarlink(globals, "FileWrite_FILE_SND", Swig_var_FileWrite_FILE_SND_get, Swig_var_FileWrite_FILE_SND_set);
  SWIG_addvarlink(globals, "FileWrite_FILE_AIF", Swig_var_FileWrite_FILE_AIF_get, Swig_var_FileWrite_FILE_AIF_set);
  SWIG_addvarlink(globals, "FileWrite_FILE_MAT", Swig_var_FileWrite_FILE_MAT_get, Swig_var_FileWrite_FILE_MAT_set);
  SWIG_Python_SetConstant(d, "Granulate_GRAIN_STOPPED",SWIG_From_int(static_cast< int >(stk::Granulate::GRAIN_STOPPED)));
  SWIG_Python_SetConstant(d, "Granulate_GRAIN_FADEIN",SWIG_From_int(static_cast< int >(stk::Granulate::GRAIN_FADEIN)));
  SWIG_Python_SetConstant(d, "Granulate_GRAIN_SUSTAIN",SWIG_From_int(static_cast< int >(stk::Granulate::GRAIN_SUSTAIN)));
  SWIG_Python_SetConstant(d, "Granulate_GRAIN_FADEOUT",SWIG_From_int(static_cast< int >(stk::Granulate::GRAIN_FADEOUT)));
  SWIG_Python_SetConstant(d, "Socket_PROTO_TCP",SWIG_From_int(static_cast< int >(stk::Socket::PROTO_TCP)));
  SWIG_Python_SetConstant(d, "Socket_PROTO_UDP",SWIG_From_int(static_cast< int >(stk::Socket::PROTO_UDP)));
#if PY_VERSION_HEX >= 0x03000000
  return m;
#else
  return;
#endif
}

