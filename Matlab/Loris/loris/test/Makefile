# Makefile.in generated by automake 1.11.1 from Makefile.am.
# test/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# Loris is Copyright (c) 1999-2010 by Kelly Fitz and Lippold Haken
# <loris@cerlsoundgroup.org>
#  
# This file is free software; as a special exception the author gives
# unlimited permission to copy and/or distribute it, with or without 
# modifications, as long as this notice is preserved.
# 
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY, to the extent permitted by law; without even the
# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

pkgdatadir = $(datadir)/loris
pkgincludedir = $(includedir)/loris
pkglibdir = $(libdir)/loris
pkglibexecdir = $(libexecdir)/loris
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
check_PROGRAMS = test_cpp$(EXEEXT) test_pi$(EXEEXT) test_aiff$(EXEEXT) \
	test_partial$(EXEEXT) test_distiller$(EXEEXT) \
	test_sdiffile$(EXEEXT) test_morpher$(EXEEXT) \
	test_identity$(EXEEXT) test_fundamental$(EXEEXT) \
	test_filter$(EXEEXT) test_synthesizer$(EXEEXT) \
	test_crop$(EXEEXT) test_resample$(EXEEXT)
subdir = test
DIST_COMMON = README $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am_test_aiff_OBJECTS = test_Aiff.$(OBJEXT)
test_aiff_OBJECTS = $(am_test_aiff_OBJECTS)
test_aiff_DEPENDENCIES = $(top_builddir)/src/libloris.la
am_test_cpp_OBJECTS = morphtest.$(OBJEXT)
test_cpp_OBJECTS = $(am_test_cpp_OBJECTS)
test_cpp_DEPENDENCIES = $(top_builddir)/src/libloris.la
am_test_crop_OBJECTS = test_Cropper.$(OBJEXT)
test_crop_OBJECTS = $(am_test_crop_OBJECTS)
test_crop_DEPENDENCIES = $(top_builddir)/src/libloris.la
am_test_distiller_OBJECTS = test_Distiller.$(OBJEXT)
test_distiller_OBJECTS = $(am_test_distiller_OBJECTS)
test_distiller_DEPENDENCIES = $(top_builddir)/src/libloris.la
am_test_filter_OBJECTS = test_Filter.$(OBJEXT)
test_filter_OBJECTS = $(am_test_filter_OBJECTS)
test_filter_DEPENDENCIES = $(top_builddir)/src/libloris.la
am_test_fundamental_OBJECTS = test_Fundamental.$(OBJEXT)
test_fundamental_OBJECTS = $(am_test_fundamental_OBJECTS)
test_fundamental_DEPENDENCIES = $(top_builddir)/src/libloris.la
am_test_identity_OBJECTS = test_Identity.$(OBJEXT)
test_identity_OBJECTS = $(am_test_identity_OBJECTS)
test_identity_DEPENDENCIES = $(top_builddir)/src/libloris.la
am_test_morpher_OBJECTS = test_Morpher.$(OBJEXT)
test_morpher_OBJECTS = $(am_test_morpher_OBJECTS)
test_morpher_DEPENDENCIES = $(top_builddir)/src/libloris.la
am_test_partial_OBJECTS = test_Partial.$(OBJEXT)
test_partial_OBJECTS = $(am_test_partial_OBJECTS)
test_partial_DEPENDENCIES = $(top_builddir)/src/libloris.la
am_test_pi_OBJECTS = pitest.$(OBJEXT)
test_pi_OBJECTS = $(am_test_pi_OBJECTS)
test_pi_DEPENDENCIES = $(top_builddir)/src/libloris.la
am_test_resample_OBJECTS = test_Resampler.$(OBJEXT)
test_resample_OBJECTS = $(am_test_resample_OBJECTS)
test_resample_DEPENDENCIES = $(top_builddir)/src/libloris.la
am_test_sdiffile_OBJECTS = test_SdifFile.$(OBJEXT)
test_sdiffile_OBJECTS = $(am_test_sdiffile_OBJECTS)
test_sdiffile_DEPENDENCIES = $(top_builddir)/src/libloris.la
am_test_synthesizer_OBJECTS = test_Synthesizer.$(OBJEXT)
test_synthesizer_OBJECTS = $(am_test_synthesizer_OBJECTS)
test_synthesizer_DEPENDENCIES = $(top_builddir)/src/libloris.la
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(test_aiff_SOURCES) $(test_cpp_SOURCES) \
	$(test_crop_SOURCES) $(test_distiller_SOURCES) \
	$(test_filter_SOURCES) $(test_fundamental_SOURCES) \
	$(test_identity_SOURCES) $(test_morpher_SOURCES) \
	$(test_partial_SOURCES) $(test_pi_SOURCES) \
	$(test_resample_SOURCES) $(test_sdiffile_SOURCES) \
	$(test_synthesizer_SOURCES)
DIST_SOURCES = $(test_aiff_SOURCES) $(test_cpp_SOURCES) \
	$(test_crop_SOURCES) $(test_distiller_SOURCES) \
	$(test_filter_SOURCES) $(test_fundamental_SOURCES) \
	$(test_identity_SOURCES) $(test_morpher_SOURCES) \
	$(test_partial_SOURCES) $(test_pi_SOURCES) \
	$(test_resample_SOURCES) $(test_sdiffile_SOURCES) \
	$(test_synthesizer_SOURCES)
ETAGS = etags
CTAGS = ctags
am__tty_colors = \
red=; grn=; lgn=; blu=; std=
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/quake/Projects/projects/Loris/loris/config/missing --run aclocal-1.11
AMTAR = ${SHELL} /home/quake/Projects/projects/Loris/loris/config/missing --run tar
AR = ar
AUTOCONF = ${SHELL} /home/quake/Projects/projects/Loris/loris/config/missing --run autoconf
AUTOHEADER = ${SHELL} /home/quake/Projects/projects/Loris/loris/config/missing --run autoheader
AUTOMAKE = ${SHELL} /home/quake/Projects/projects/Loris/loris/config/missing --run automake-1.11
AWK = mawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CSOUND = 
CSOUND_CONFIG = 
CSOUND_CXXFLAGS = 
CSOUND_PREFIX = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DOXYGEN = /usr/bin/doxygen
DSYMUTIL = 
ECHO = echo
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT = 
F77 = f77
FFLAGS = -g -O2
GREP = /usr/bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS = -lm 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIBTOOL_DEPS = config/ltmain.sh
LINK_FFTW = -lfftw3
LN_S = ln -s
LORIS_MAJOR_VERSION = 1
LORIS_MINOR_VERSION = 8
LORIS_SUBMINOR_VERSION = 
LORIS_VERSION_STR = Loris 1.8
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/quake/Projects/projects/Loris/loris/config/missing --run makeinfo
MKDIR_P = /usr/bin/mkdir -p
NMEDIT = 
OBJEXT = o
PACKAGE = loris
PACKAGE_BUGREPORT = loris@cerlsoundgroup.org
PACKAGE_NAME = Loris
PACKAGE_STRING = Loris 1.8
PACKAGE_TARNAME = loris
PACKAGE_VERSION = 1.8
PATH_SEPARATOR = :
PYFLAGS = -I/opt/intel/oneapi/intelpython/latest/include/python3.9
PYTHON = /opt/intel/oneapi/intelpython/latest/bin/python
PYTHON_EXEC_PREFIX = ${exec_prefix}
PYTHON_PLATFORM = linux
PYTHON_PREFIX = ${prefix}
PYTHON_VERSION = 3.9
RANLIB = ranlib
SED = /usr/bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
SWIG = /usr/local/bin/swig
VERSION = 1.8
abs_builddir = /home/quake/Projects/projects/Loris/loris/test
abs_srcdir = /home/quake/Projects/projects/Loris/loris/test
abs_top_builddir = /home/quake/Projects/projects/Loris/loris
abs_top_srcdir = /home/quake/Projects/projects/Loris/loris
ac_aux_dir = config
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_F77 = f77
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/quake/Projects/projects/Loris/loris/config/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /usr/bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
pkgpyexecdir = ${pyexecdir}/loris
pkgpythondir = ${pythondir}/loris
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
pyexecdir = ${exec_prefix}/lib/python3.9/site-packages
pythondir = ${prefix}/lib/python3.9/site-packages
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
EXTRA_DIST = clarinet.aiff flute.aiff fromKyma.spc morphtest.py \
			 one_synth_phase_test.sdif csound_test.csd

MAINTAINERCLEANFILES = Makefile.in
AM_CPPFLAGS = -I$(top_srcdir)/src

# simple morphing test
test_cpp_SOURCES = morphtest.C
test_cpp_LDADD = $(top_builddir)/src/libloris.la

# procedural interface test
test_pi_SOURCES = pitest.c
test_pi_LDADD = $(top_builddir)/src/libloris.la -lstdc++

# Morpher unit tests
test_morpher_SOURCES = test_Morpher.C
# Darwin is special, dynamic linking sometimes seems to fail 
# on this test, can't figure it out.
test_morpher_LDADD = $(top_builddir)/src/libloris.la

# Partial unit tests
test_partial_SOURCES = test_Partial.C
test_partial_LDADD = $(top_builddir)/src/libloris.la

# Distiller unit tests
test_distiller_SOURCES = test_Distiller.C
test_distiller_LDADD = $(top_builddir)/src/libloris.la

# SdifFile unit tests
test_sdiffile_SOURCES = test_SdifFile.C
test_sdiffile_LDADD = $(top_builddir)/src/libloris.la

# AiffFile (and SpcFile) unit tests
test_aiff_SOURCES = test_Aiff.C
test_aiff_LDADD = $(top_builddir)/src/libloris.la

# synthesis/analysis identity test
test_identity_SOURCES = test_Identity.C
test_identity_LDADD = $(top_builddir)/src/libloris.la

# fundamental frequency estimation tests
test_fundamental_SOURCES = test_Fundamental.C
test_fundamental_LDADD = $(top_builddir)/src/libloris.la

# digital filter test
test_filter_SOURCES = test_Filter.C
test_filter_LDADD = $(top_builddir)/src/libloris.la

# Synthesizer unit tests
test_synthesizer_SOURCES = test_Synthesizer.C
test_synthesizer_LDADD = $(top_builddir)/src/libloris.la

# Cropper unit tests
test_crop_SOURCES = test_Cropper.C
test_crop_LDADD = $(top_builddir)/src/libloris.la

# Resampler unit tests
test_resample_SOURCES = test_Resampler.C
test_resample_LDADD = $(top_builddir)/src/libloris.la

# Test Python module only if that module was built.
PYTHON_TEST = run_pytest
SET_PYTHON_ENV = "env PYTHONPATH=$(top_srcdir)/scripting:$(top_builddir)/scripting/.libs"
#SET_DARWIN_ENV = "env DYLD_LIBRARY_PATH=$(top_builddir)/src/.libs"

# Test Csound if Csound opcodes were built into the library.
#CSOUND_TEST = run_csound_test
#CSOUND_OPCODELIB = "--opcode-lib=$(top_builddir)/src/.libs/libloris.so"
##CSOUND_OPCODELIB = "--opcode-lib=$(top_builddir)/src/.libs/libloris.dylib"
check_SCRIPTS = $(PYTHON_TEST) $(CSOUND_TEST)
TESTS = $(check_PROGRAMS) $(check_SCRIPTS) 
CLEANFILES = $(PYTHON_TEST) $(CSOUND_TEST)
all: all-am

.SUFFIXES:
.SUFFIXES: .C .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign test/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign test/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
test_aiff$(EXEEXT): $(test_aiff_OBJECTS) $(test_aiff_DEPENDENCIES) 
	@rm -f test_aiff$(EXEEXT)
	$(CXXLINK) $(test_aiff_OBJECTS) $(test_aiff_LDADD) $(LIBS)
test_cpp$(EXEEXT): $(test_cpp_OBJECTS) $(test_cpp_DEPENDENCIES) 
	@rm -f test_cpp$(EXEEXT)
	$(CXXLINK) $(test_cpp_OBJECTS) $(test_cpp_LDADD) $(LIBS)
test_crop$(EXEEXT): $(test_crop_OBJECTS) $(test_crop_DEPENDENCIES) 
	@rm -f test_crop$(EXEEXT)
	$(CXXLINK) $(test_crop_OBJECTS) $(test_crop_LDADD) $(LIBS)
test_distiller$(EXEEXT): $(test_distiller_OBJECTS) $(test_distiller_DEPENDENCIES) 
	@rm -f test_distiller$(EXEEXT)
	$(CXXLINK) $(test_distiller_OBJECTS) $(test_distiller_LDADD) $(LIBS)
test_filter$(EXEEXT): $(test_filter_OBJECTS) $(test_filter_DEPENDENCIES) 
	@rm -f test_filter$(EXEEXT)
	$(CXXLINK) $(test_filter_OBJECTS) $(test_filter_LDADD) $(LIBS)
test_fundamental$(EXEEXT): $(test_fundamental_OBJECTS) $(test_fundamental_DEPENDENCIES) 
	@rm -f test_fundamental$(EXEEXT)
	$(CXXLINK) $(test_fundamental_OBJECTS) $(test_fundamental_LDADD) $(LIBS)
test_identity$(EXEEXT): $(test_identity_OBJECTS) $(test_identity_DEPENDENCIES) 
	@rm -f test_identity$(EXEEXT)
	$(CXXLINK) $(test_identity_OBJECTS) $(test_identity_LDADD) $(LIBS)
test_morpher$(EXEEXT): $(test_morpher_OBJECTS) $(test_morpher_DEPENDENCIES) 
	@rm -f test_morpher$(EXEEXT)
	$(CXXLINK) $(test_morpher_OBJECTS) $(test_morpher_LDADD) $(LIBS)
test_partial$(EXEEXT): $(test_partial_OBJECTS) $(test_partial_DEPENDENCIES) 
	@rm -f test_partial$(EXEEXT)
	$(CXXLINK) $(test_partial_OBJECTS) $(test_partial_LDADD) $(LIBS)
test_pi$(EXEEXT): $(test_pi_OBJECTS) $(test_pi_DEPENDENCIES) 
	@rm -f test_pi$(EXEEXT)
	$(LINK) $(test_pi_OBJECTS) $(test_pi_LDADD) $(LIBS)
test_resample$(EXEEXT): $(test_resample_OBJECTS) $(test_resample_DEPENDENCIES) 
	@rm -f test_resample$(EXEEXT)
	$(CXXLINK) $(test_resample_OBJECTS) $(test_resample_LDADD) $(LIBS)
test_sdiffile$(EXEEXT): $(test_sdiffile_OBJECTS) $(test_sdiffile_DEPENDENCIES) 
	@rm -f test_sdiffile$(EXEEXT)
	$(CXXLINK) $(test_sdiffile_OBJECTS) $(test_sdiffile_LDADD) $(LIBS)
test_synthesizer$(EXEEXT): $(test_synthesizer_OBJECTS) $(test_synthesizer_DEPENDENCIES) 
	@rm -f test_synthesizer$(EXEEXT)
	$(CXXLINK) $(test_synthesizer_OBJECTS) $(test_synthesizer_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/morphtest.Po
include ./$(DEPDIR)/pitest.Po
include ./$(DEPDIR)/test_Aiff.Po
include ./$(DEPDIR)/test_Cropper.Po
include ./$(DEPDIR)/test_Distiller.Po
include ./$(DEPDIR)/test_Filter.Po
include ./$(DEPDIR)/test_Fundamental.Po
include ./$(DEPDIR)/test_Identity.Po
include ./$(DEPDIR)/test_Morpher.Po
include ./$(DEPDIR)/test_Partial.Po
include ./$(DEPDIR)/test_Resampler.Po
include ./$(DEPDIR)/test_SdifFile.Po
include ./$(DEPDIR)/test_Synthesizer.Po

.C.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.C.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.C.lo:
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

.c.o:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
	srcdir=$(srcdir); export srcdir; \
	list=' $(TESTS) '; \
	$(am__tty_colors); \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		col=$$red; res=XPASS; \
	      ;; \
	      *) \
		col=$$grn; res=PASS; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xfail=`expr $$xfail + 1`; \
		col=$$lgn; res=XFAIL; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		col=$$red; res=FAIL; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      col=$$blu; res=SKIP; \
	    fi; \
	    echo "$${col}$$res$${std}: $$tst"; \
	  done; \
	  if test "$$all" -eq 1; then \
	    tests="test"; \
	    All=""; \
	  else \
	    tests="tests"; \
	    All="All "; \
	  fi; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="$$All$$all $$tests passed"; \
	    else \
	      if test "$$xfail" -eq 1; then failures=failure; else failures=failures; fi; \
	      banner="$$All$$all $$tests behaved as expected ($$xfail expected $$failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all $$tests failed"; \
	    else \
	      if test "$$xpass" -eq 1; then passes=pass; else passes=passes; fi; \
	      banner="$$failed of $$all $$tests did not behave as expected ($$xpass unexpected $$passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    if test "$$skip" -eq 1; then \
	      skipped="($$skip test was not run)"; \
	    else \
	      skipped="($$skip tests were not run)"; \
	    fi; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  if test "$$failed" -eq 0; then \
	    echo "$$grn$$dashes"; \
	  else \
	    echo "$$red$$dashes"; \
	  fi; \
	  echo "$$banner"; \
	  test -z "$$skipped" || echo "$$skipped"; \
	  test -z "$$report" || echo "$$report"; \
	  echo "$$dashes$$std"; \
	  test "$$failed" -eq 0; \
	else :; fi

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS) $(check_SCRIPTS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
clean: clean-am

clean-am: clean-checkPROGRAMS clean-generic clean-libtool clean-local \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-TESTS check-am clean \
	clean-checkPROGRAMS clean-generic clean-libtool clean-local \
	ctags distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am


$(PYTHON_TEST):
	echo "$(SET_PYTHON_ENV) $(SET_DARWIN_ENV) \
              $(PYTHON) $(top_srcdir)/test/morphtest.py" >> $@
	chmod +x $@

#$(CSOUND_TEST):
#	echo "$(CSOUND) $(CSOUND_OPCODELIB) $(DARWIN_CSOUND_OPCODELIB) $(top_srcdir)/test/csound_test.csd" >> $@
#	chmod +x $@

clean-local:
	-rm -fr *.ctest.* *.pytest.* *.pi.* tmp.sdif csound_opcode_test.aiff

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
