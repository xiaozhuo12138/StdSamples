# Makefile.in generated by automake 1.11.1 from Makefile.am.
# utils/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# Loris is Copyright (c) 1999-2010 by Kelly Fitz and Lippold Haken
# <loris@cerlsoundgroup.org>
#  
# This file is free software; as a special exception the author gives
# unlimited permission to copy and/or distribute it, with or without 
# modifications, as long as this notice is preserved.
# 
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY, to the extent permitted by law; without even the
# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.


pkgdatadir = $(datadir)/loris
pkgincludedir = $(includedir)/loris
pkglibdir = $(libdir)/loris
pkglibexecdir = $(libexecdir)/loris
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
bin_PROGRAMS = loris-analyze$(EXEEXT) loris-synthesize$(EXEEXT) \
	loris-spewmarkers$(EXEEXT) loris-mark$(EXEEXT) \
	loris-unmark$(EXEEXT) loris-dilate$(EXEEXT)
subdir = utils
DIST_COMMON = README $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am_loris_analyze_OBJECTS = loris_analyze-loris_analyze.$(OBJEXT)
loris_analyze_OBJECTS = $(am_loris_analyze_OBJECTS)
loris_analyze_DEPENDENCIES = $(top_builddir)/src/libloris.la
loris_analyze_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(loris_analyze_CXXFLAGS) \
	$(CXXFLAGS) $(loris_analyze_LDFLAGS) $(LDFLAGS) -o $@
am_loris_dilate_OBJECTS = loris_dilate-loris_dilate.$(OBJEXT)
loris_dilate_OBJECTS = $(am_loris_dilate_OBJECTS)
loris_dilate_DEPENDENCIES = $(top_builddir)/src/libloris.la
loris_dilate_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(loris_dilate_CXXFLAGS) \
	$(CXXFLAGS) $(loris_dilate_LDFLAGS) $(LDFLAGS) -o $@
am_loris_mark_OBJECTS = loris_mark-loris_mark.$(OBJEXT)
loris_mark_OBJECTS = $(am_loris_mark_OBJECTS)
loris_mark_DEPENDENCIES = $(top_builddir)/src/libloris.la
loris_mark_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(loris_mark_CXXFLAGS) \
	$(CXXFLAGS) $(loris_mark_LDFLAGS) $(LDFLAGS) -o $@
am_loris_spewmarkers_OBJECTS =  \
	loris_spewmarkers-loris_spewmarkers.$(OBJEXT)
loris_spewmarkers_OBJECTS = $(am_loris_spewmarkers_OBJECTS)
loris_spewmarkers_DEPENDENCIES = $(top_builddir)/src/libloris.la
loris_spewmarkers_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(loris_spewmarkers_CXXFLAGS) $(CXXFLAGS) \
	$(loris_spewmarkers_LDFLAGS) $(LDFLAGS) -o $@
am_loris_synthesize_OBJECTS =  \
	loris_synthesize-loris_synthesize.$(OBJEXT)
loris_synthesize_OBJECTS = $(am_loris_synthesize_OBJECTS)
loris_synthesize_DEPENDENCIES = $(top_builddir)/src/libloris.la
loris_synthesize_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(loris_synthesize_CXXFLAGS) $(CXXFLAGS) \
	$(loris_synthesize_LDFLAGS) $(LDFLAGS) -o $@
am_loris_unmark_OBJECTS = loris_unmark-loris_unmark.$(OBJEXT)
loris_unmark_OBJECTS = $(am_loris_unmark_OBJECTS)
loris_unmark_DEPENDENCIES = $(top_builddir)/src/libloris.la
loris_unmark_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(loris_unmark_CXXFLAGS) \
	$(CXXFLAGS) $(loris_unmark_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(loris_analyze_SOURCES) $(loris_dilate_SOURCES) \
	$(loris_mark_SOURCES) $(loris_spewmarkers_SOURCES) \
	$(loris_synthesize_SOURCES) $(loris_unmark_SOURCES)
DIST_SOURCES = $(loris_analyze_SOURCES) $(loris_dilate_SOURCES) \
	$(loris_mark_SOURCES) $(loris_spewmarkers_SOURCES) \
	$(loris_synthesize_SOURCES) $(loris_unmark_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/quake/Projects/projects/Loris/loris/config/missing --run aclocal-1.11
AMTAR = ${SHELL} /home/quake/Projects/projects/Loris/loris/config/missing --run tar
AR = ar
AUTOCONF = ${SHELL} /home/quake/Projects/projects/Loris/loris/config/missing --run autoconf
AUTOHEADER = ${SHELL} /home/quake/Projects/projects/Loris/loris/config/missing --run autoheader
AUTOMAKE = ${SHELL} /home/quake/Projects/projects/Loris/loris/config/missing --run automake-1.11
AWK = mawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CSOUND = 
CSOUND_CONFIG = 
CSOUND_CXXFLAGS = 
CSOUND_PREFIX = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DOXYGEN = /usr/bin/doxygen
DSYMUTIL = 
ECHO = echo
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT = 
F77 = f77
FFLAGS = -g -O2
GREP = /usr/bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS = -lm 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIBTOOL_DEPS = config/ltmain.sh
LINK_FFTW = -lfftw3
LN_S = ln -s
LORIS_MAJOR_VERSION = 1
LORIS_MINOR_VERSION = 8
LORIS_SUBMINOR_VERSION = 
LORIS_VERSION_STR = Loris 1.8
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/quake/Projects/projects/Loris/loris/config/missing --run makeinfo
MKDIR_P = /usr/bin/mkdir -p
NMEDIT = 
OBJEXT = o
PACKAGE = loris
PACKAGE_BUGREPORT = loris@cerlsoundgroup.org
PACKAGE_NAME = Loris
PACKAGE_STRING = Loris 1.8
PACKAGE_TARNAME = loris
PACKAGE_VERSION = 1.8
PATH_SEPARATOR = :
PYFLAGS = -I/opt/intel/oneapi/intelpython/latest/include/python3.9
PYTHON = /opt/intel/oneapi/intelpython/latest/bin/python
PYTHON_EXEC_PREFIX = ${exec_prefix}
PYTHON_PLATFORM = linux
PYTHON_PREFIX = ${prefix}
PYTHON_VERSION = 3.9
RANLIB = ranlib
SED = /usr/bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
SWIG = /usr/local/bin/swig
VERSION = 1.8
abs_builddir = /home/quake/Projects/projects/Loris/loris/utils
abs_srcdir = /home/quake/Projects/projects/Loris/loris/utils
abs_top_builddir = /home/quake/Projects/projects/Loris/loris
abs_top_srcdir = /home/quake/Projects/projects/Loris/loris
ac_aux_dir = config
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_F77 = f77
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/quake/Projects/projects/Loris/loris/config/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /usr/bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
pkgpyexecdir = ${pyexecdir}/loris
pkgpythondir = ${pythondir}/loris
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
pyexecdir = ${exec_prefix}/lib/python3.9/site-packages
pythondir = ${prefix}/lib/python3.9/site-packages
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..

# loris-analyze: a utility program to analyze
# samples and store the partials in an SDIF file.
loris_analyze_SOURCES = loris_analyze.C
loris_analyze_CXXFLAGS = -I$(top_srcdir)/src
loris_analyze_LDADD = $(top_builddir)/src/libloris.la 
loris_analyze_LDFLAGS = -static

# loris-dilate: a utility program to dilate Partials
# stored in a SDIF file, optionally with amplitude
# and frequency scaling by a constant factor.
loris_dilate_SOURCES = loris_dilate.C
loris_dilate_CXXFLAGS = -I$(top_srcdir)/src
loris_dilate_LDADD = $(top_builddir)/src/libloris.la
loris_dilate_LDFLAGS = -static

# loris-synthesize: a utility program to render Partials
# stored in a SDIF file, optionally with dilation and amplitude
# and frequency scaling by a constant factor.
loris_synthesize_SOURCES = loris_synthesize.C
loris_synthesize_CXXFLAGS = -I$(top_srcdir)/src
loris_synthesize_LDADD = $(top_builddir)/src/libloris.la
loris_synthesize_LDFLAGS = -static

# loris-spewmarkers: a utility program to read the
# markers stored in a AIFF, SPC, or SDIF file and
# print them to standard output.
loris_spewmarkers_SOURCES = loris_spewmarkers.C
loris_spewmarkers_CXXFLAGS = -I$(top_srcdir)/src
loris_spewmarkers_LDADD = $(top_builddir)/src/libloris.la
loris_spewmarkers_LDFLAGS = -static

# loris-mark: a utility program to add a
# marker to a AIFF, SPC, or SDIF file.
loris_mark_SOURCES = loris_mark.C
loris_mark_CXXFLAGS = -I$(top_srcdir)/src
loris_mark_LDADD = $(top_builddir)/src/libloris.la
loris_mark_LDFLAGS = -static

# loris-unmark: a utility program to remove a
# marker or markers from a AIFF, SPC, or SDIF file.
loris_unmark_SOURCES = loris_unmark.C
loris_unmark_CXXFLAGS = -I$(top_srcdir)/src
loris_unmark_LDADD = $(top_builddir)/src/libloris.la
loris_unmark_LDFLAGS = -static
MAINTAINERCLEANFILES = Makefile.in
all: all-am

.SUFFIXES:
.SUFFIXES: .C .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign utils/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign utils/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p || test -f $$p1; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
loris-analyze$(EXEEXT): $(loris_analyze_OBJECTS) $(loris_analyze_DEPENDENCIES) 
	@rm -f loris-analyze$(EXEEXT)
	$(loris_analyze_LINK) $(loris_analyze_OBJECTS) $(loris_analyze_LDADD) $(LIBS)
loris-dilate$(EXEEXT): $(loris_dilate_OBJECTS) $(loris_dilate_DEPENDENCIES) 
	@rm -f loris-dilate$(EXEEXT)
	$(loris_dilate_LINK) $(loris_dilate_OBJECTS) $(loris_dilate_LDADD) $(LIBS)
loris-mark$(EXEEXT): $(loris_mark_OBJECTS) $(loris_mark_DEPENDENCIES) 
	@rm -f loris-mark$(EXEEXT)
	$(loris_mark_LINK) $(loris_mark_OBJECTS) $(loris_mark_LDADD) $(LIBS)
loris-spewmarkers$(EXEEXT): $(loris_spewmarkers_OBJECTS) $(loris_spewmarkers_DEPENDENCIES) 
	@rm -f loris-spewmarkers$(EXEEXT)
	$(loris_spewmarkers_LINK) $(loris_spewmarkers_OBJECTS) $(loris_spewmarkers_LDADD) $(LIBS)
loris-synthesize$(EXEEXT): $(loris_synthesize_OBJECTS) $(loris_synthesize_DEPENDENCIES) 
	@rm -f loris-synthesize$(EXEEXT)
	$(loris_synthesize_LINK) $(loris_synthesize_OBJECTS) $(loris_synthesize_LDADD) $(LIBS)
loris-unmark$(EXEEXT): $(loris_unmark_OBJECTS) $(loris_unmark_DEPENDENCIES) 
	@rm -f loris-unmark$(EXEEXT)
	$(loris_unmark_LINK) $(loris_unmark_OBJECTS) $(loris_unmark_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/loris_analyze-loris_analyze.Po
include ./$(DEPDIR)/loris_dilate-loris_dilate.Po
include ./$(DEPDIR)/loris_mark-loris_mark.Po
include ./$(DEPDIR)/loris_spewmarkers-loris_spewmarkers.Po
include ./$(DEPDIR)/loris_synthesize-loris_synthesize.Po
include ./$(DEPDIR)/loris_unmark-loris_unmark.Po

.C.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.C.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.C.lo:
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

loris_analyze-loris_analyze.o: loris_analyze.C
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(loris_analyze_CXXFLAGS) $(CXXFLAGS) -MT loris_analyze-loris_analyze.o -MD -MP -MF $(DEPDIR)/loris_analyze-loris_analyze.Tpo -c -o loris_analyze-loris_analyze.o `test -f 'loris_analyze.C' || echo '$(srcdir)/'`loris_analyze.C
	$(am__mv) $(DEPDIR)/loris_analyze-loris_analyze.Tpo $(DEPDIR)/loris_analyze-loris_analyze.Po
#	source='loris_analyze.C' object='loris_analyze-loris_analyze.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(loris_analyze_CXXFLAGS) $(CXXFLAGS) -c -o loris_analyze-loris_analyze.o `test -f 'loris_analyze.C' || echo '$(srcdir)/'`loris_analyze.C

loris_analyze-loris_analyze.obj: loris_analyze.C
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(loris_analyze_CXXFLAGS) $(CXXFLAGS) -MT loris_analyze-loris_analyze.obj -MD -MP -MF $(DEPDIR)/loris_analyze-loris_analyze.Tpo -c -o loris_analyze-loris_analyze.obj `if test -f 'loris_analyze.C'; then $(CYGPATH_W) 'loris_analyze.C'; else $(CYGPATH_W) '$(srcdir)/loris_analyze.C'; fi`
	$(am__mv) $(DEPDIR)/loris_analyze-loris_analyze.Tpo $(DEPDIR)/loris_analyze-loris_analyze.Po
#	source='loris_analyze.C' object='loris_analyze-loris_analyze.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(loris_analyze_CXXFLAGS) $(CXXFLAGS) -c -o loris_analyze-loris_analyze.obj `if test -f 'loris_analyze.C'; then $(CYGPATH_W) 'loris_analyze.C'; else $(CYGPATH_W) '$(srcdir)/loris_analyze.C'; fi`

loris_dilate-loris_dilate.o: loris_dilate.C
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(loris_dilate_CXXFLAGS) $(CXXFLAGS) -MT loris_dilate-loris_dilate.o -MD -MP -MF $(DEPDIR)/loris_dilate-loris_dilate.Tpo -c -o loris_dilate-loris_dilate.o `test -f 'loris_dilate.C' || echo '$(srcdir)/'`loris_dilate.C
	$(am__mv) $(DEPDIR)/loris_dilate-loris_dilate.Tpo $(DEPDIR)/loris_dilate-loris_dilate.Po
#	source='loris_dilate.C' object='loris_dilate-loris_dilate.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(loris_dilate_CXXFLAGS) $(CXXFLAGS) -c -o loris_dilate-loris_dilate.o `test -f 'loris_dilate.C' || echo '$(srcdir)/'`loris_dilate.C

loris_dilate-loris_dilate.obj: loris_dilate.C
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(loris_dilate_CXXFLAGS) $(CXXFLAGS) -MT loris_dilate-loris_dilate.obj -MD -MP -MF $(DEPDIR)/loris_dilate-loris_dilate.Tpo -c -o loris_dilate-loris_dilate.obj `if test -f 'loris_dilate.C'; then $(CYGPATH_W) 'loris_dilate.C'; else $(CYGPATH_W) '$(srcdir)/loris_dilate.C'; fi`
	$(am__mv) $(DEPDIR)/loris_dilate-loris_dilate.Tpo $(DEPDIR)/loris_dilate-loris_dilate.Po
#	source='loris_dilate.C' object='loris_dilate-loris_dilate.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(loris_dilate_CXXFLAGS) $(CXXFLAGS) -c -o loris_dilate-loris_dilate.obj `if test -f 'loris_dilate.C'; then $(CYGPATH_W) 'loris_dilate.C'; else $(CYGPATH_W) '$(srcdir)/loris_dilate.C'; fi`

loris_mark-loris_mark.o: loris_mark.C
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(loris_mark_CXXFLAGS) $(CXXFLAGS) -MT loris_mark-loris_mark.o -MD -MP -MF $(DEPDIR)/loris_mark-loris_mark.Tpo -c -o loris_mark-loris_mark.o `test -f 'loris_mark.C' || echo '$(srcdir)/'`loris_mark.C
	$(am__mv) $(DEPDIR)/loris_mark-loris_mark.Tpo $(DEPDIR)/loris_mark-loris_mark.Po
#	source='loris_mark.C' object='loris_mark-loris_mark.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(loris_mark_CXXFLAGS) $(CXXFLAGS) -c -o loris_mark-loris_mark.o `test -f 'loris_mark.C' || echo '$(srcdir)/'`loris_mark.C

loris_mark-loris_mark.obj: loris_mark.C
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(loris_mark_CXXFLAGS) $(CXXFLAGS) -MT loris_mark-loris_mark.obj -MD -MP -MF $(DEPDIR)/loris_mark-loris_mark.Tpo -c -o loris_mark-loris_mark.obj `if test -f 'loris_mark.C'; then $(CYGPATH_W) 'loris_mark.C'; else $(CYGPATH_W) '$(srcdir)/loris_mark.C'; fi`
	$(am__mv) $(DEPDIR)/loris_mark-loris_mark.Tpo $(DEPDIR)/loris_mark-loris_mark.Po
#	source='loris_mark.C' object='loris_mark-loris_mark.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(loris_mark_CXXFLAGS) $(CXXFLAGS) -c -o loris_mark-loris_mark.obj `if test -f 'loris_mark.C'; then $(CYGPATH_W) 'loris_mark.C'; else $(CYGPATH_W) '$(srcdir)/loris_mark.C'; fi`

loris_spewmarkers-loris_spewmarkers.o: loris_spewmarkers.C
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(loris_spewmarkers_CXXFLAGS) $(CXXFLAGS) -MT loris_spewmarkers-loris_spewmarkers.o -MD -MP -MF $(DEPDIR)/loris_spewmarkers-loris_spewmarkers.Tpo -c -o loris_spewmarkers-loris_spewmarkers.o `test -f 'loris_spewmarkers.C' || echo '$(srcdir)/'`loris_spewmarkers.C
	$(am__mv) $(DEPDIR)/loris_spewmarkers-loris_spewmarkers.Tpo $(DEPDIR)/loris_spewmarkers-loris_spewmarkers.Po
#	source='loris_spewmarkers.C' object='loris_spewmarkers-loris_spewmarkers.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(loris_spewmarkers_CXXFLAGS) $(CXXFLAGS) -c -o loris_spewmarkers-loris_spewmarkers.o `test -f 'loris_spewmarkers.C' || echo '$(srcdir)/'`loris_spewmarkers.C

loris_spewmarkers-loris_spewmarkers.obj: loris_spewmarkers.C
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(loris_spewmarkers_CXXFLAGS) $(CXXFLAGS) -MT loris_spewmarkers-loris_spewmarkers.obj -MD -MP -MF $(DEPDIR)/loris_spewmarkers-loris_spewmarkers.Tpo -c -o loris_spewmarkers-loris_spewmarkers.obj `if test -f 'loris_spewmarkers.C'; then $(CYGPATH_W) 'loris_spewmarkers.C'; else $(CYGPATH_W) '$(srcdir)/loris_spewmarkers.C'; fi`
	$(am__mv) $(DEPDIR)/loris_spewmarkers-loris_spewmarkers.Tpo $(DEPDIR)/loris_spewmarkers-loris_spewmarkers.Po
#	source='loris_spewmarkers.C' object='loris_spewmarkers-loris_spewmarkers.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(loris_spewmarkers_CXXFLAGS) $(CXXFLAGS) -c -o loris_spewmarkers-loris_spewmarkers.obj `if test -f 'loris_spewmarkers.C'; then $(CYGPATH_W) 'loris_spewmarkers.C'; else $(CYGPATH_W) '$(srcdir)/loris_spewmarkers.C'; fi`

loris_synthesize-loris_synthesize.o: loris_synthesize.C
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(loris_synthesize_CXXFLAGS) $(CXXFLAGS) -MT loris_synthesize-loris_synthesize.o -MD -MP -MF $(DEPDIR)/loris_synthesize-loris_synthesize.Tpo -c -o loris_synthesize-loris_synthesize.o `test -f 'loris_synthesize.C' || echo '$(srcdir)/'`loris_synthesize.C
	$(am__mv) $(DEPDIR)/loris_synthesize-loris_synthesize.Tpo $(DEPDIR)/loris_synthesize-loris_synthesize.Po
#	source='loris_synthesize.C' object='loris_synthesize-loris_synthesize.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(loris_synthesize_CXXFLAGS) $(CXXFLAGS) -c -o loris_synthesize-loris_synthesize.o `test -f 'loris_synthesize.C' || echo '$(srcdir)/'`loris_synthesize.C

loris_synthesize-loris_synthesize.obj: loris_synthesize.C
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(loris_synthesize_CXXFLAGS) $(CXXFLAGS) -MT loris_synthesize-loris_synthesize.obj -MD -MP -MF $(DEPDIR)/loris_synthesize-loris_synthesize.Tpo -c -o loris_synthesize-loris_synthesize.obj `if test -f 'loris_synthesize.C'; then $(CYGPATH_W) 'loris_synthesize.C'; else $(CYGPATH_W) '$(srcdir)/loris_synthesize.C'; fi`
	$(am__mv) $(DEPDIR)/loris_synthesize-loris_synthesize.Tpo $(DEPDIR)/loris_synthesize-loris_synthesize.Po
#	source='loris_synthesize.C' object='loris_synthesize-loris_synthesize.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(loris_synthesize_CXXFLAGS) $(CXXFLAGS) -c -o loris_synthesize-loris_synthesize.obj `if test -f 'loris_synthesize.C'; then $(CYGPATH_W) 'loris_synthesize.C'; else $(CYGPATH_W) '$(srcdir)/loris_synthesize.C'; fi`

loris_unmark-loris_unmark.o: loris_unmark.C
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(loris_unmark_CXXFLAGS) $(CXXFLAGS) -MT loris_unmark-loris_unmark.o -MD -MP -MF $(DEPDIR)/loris_unmark-loris_unmark.Tpo -c -o loris_unmark-loris_unmark.o `test -f 'loris_unmark.C' || echo '$(srcdir)/'`loris_unmark.C
	$(am__mv) $(DEPDIR)/loris_unmark-loris_unmark.Tpo $(DEPDIR)/loris_unmark-loris_unmark.Po
#	source='loris_unmark.C' object='loris_unmark-loris_unmark.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(loris_unmark_CXXFLAGS) $(CXXFLAGS) -c -o loris_unmark-loris_unmark.o `test -f 'loris_unmark.C' || echo '$(srcdir)/'`loris_unmark.C

loris_unmark-loris_unmark.obj: loris_unmark.C
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(loris_unmark_CXXFLAGS) $(CXXFLAGS) -MT loris_unmark-loris_unmark.obj -MD -MP -MF $(DEPDIR)/loris_unmark-loris_unmark.Tpo -c -o loris_unmark-loris_unmark.obj `if test -f 'loris_unmark.C'; then $(CYGPATH_W) 'loris_unmark.C'; else $(CYGPATH_W) '$(srcdir)/loris_unmark.C'; fi`
	$(am__mv) $(DEPDIR)/loris_unmark-loris_unmark.Tpo $(DEPDIR)/loris_unmark-loris_unmark.Po
#	source='loris_unmark.C' object='loris_unmark-loris_unmark.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(loris_unmark_CXXFLAGS) $(CXXFLAGS) -c -o loris_unmark-loris_unmark.obj `if test -f 'loris_unmark.C'; then $(CYGPATH_W) 'loris_unmark.C'; else $(CYGPATH_W) '$(srcdir)/loris_unmark.C'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libtool ctags distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags uninstall uninstall-am \
	uninstall-binPROGRAMS


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
