%module synthlab
%{
#define FLT_EPSILON_PLUS      1.192092896e-07        ///< /* smallest such that 1.0+FLT_EPSILON != 1.0 */
														/** \ingroup Constants-Enums */
#define FLT_EPSILON_MINUS    -1.192092896e-07        ///< /* smallest such that 1.0-FLT_EPSILON != 1.0 */
														/** \ingroup Constants-Enums */
#define FLT_MIN_PLUS          1.175494351e-38        ///< /* min positive value */
														/** \ingroup Constants-Enums */
#define FLT_MIN_MINUS        -1.175494351e-38        ///< /* min negative value */

#include "synthbase.h"
#include "synthconstants.h"
#include "synthengine.h"
#include "synthfilter.h"
#include "synthfunctions.h"
#include "synthlabparams.h"
#include "synthlabpcmsource.h"
#include "synthlabwtsource.h"
#include "synthstructures.h"
#include "synthvoice.h"

#include "analogegcore.h"
#include "audiodelay.h"
#include "basiclookuptables.h"
#include "bleptables.h"
#include "bqfiltercore.h"
#include "classicwtcore.h"
#include "dca.h"
#include "drumwtcore.h"
#include "dx_eg.h"
#include "dxegcore.h"
#include "dynamictablesource.h"
#include "envelopegenerator.h"
#include "exciter.h"
#include "fmlfocore.h"
#include "fmocore.h"
#include "fmoperator.h"
#include "fourierwtcore.h"
#include "guiconstants.h"
#include "ksocore.h"
#include "ksoscillator.h"
#include "lfo.h"
#include "lfocore.h"
#include "limiter.h"
#include "linearegcore.h"
#include "mellotroncore.h"
#include "modmatrix.h"
#include "morphwtcore.h"
#include "noiseoscillator.h"
#include "oscillator.h"
#include "pcmlegacycore.h"
#include "pcmoscillator.h"
#include "pcmsample.h"
#include "readerwriterqueue.h"
#include "resonator.h"
#include "sequencer.h"
#include "sfxwtcore.h"
#include "sinetablesource.h"
#include "trace.h"
#include "vafiltercore.h"
//#include "vafilters.h"
#include "vaocore.h"
#include "vaoscillator.h"
#include "waveslicecore.h"
#include "wsoscillator.h"
#include "wtoscillator.h"
#include "wtsource.h"
%}
%include "std_math.i"
%include "std_vector.i"
%include "std_list.i"
%include "std_map.i"
%include "lua_fnptr.i"
#define AE_FORCEINLINE inline 

%include "synthbase.h"
%include "synthconstants.h"
%include "synthengine.h"
%include "synthfilter.h"
%include "synthfunctions.h"
%include "synthlabparams.h"
%include "synthlabpcmsource.h"
%include "synthlabwtsource.h"
%include "synthstructures.h"
%include "synthvoice.h"

%include "analogegcore.h"
%include "audiodelay.h"
%include "basiclookuptables.h"
%include "bleptables.h"
%include "bqfiltercore.h"
%include "classicwtcore.h"
%include "dca.h"
%include "drumwtcore.h"
%include "dx_eg.h"
%include "dxegcore.h"
%include "dynamictablesource.h"
%include "envelopegenerator.h"
%include "exciter.h"
%include "fmlfocore.h"
%include "fmocore.h"
%include "fmoperator.h"
%include "fourierwtcore.h"
%include "guiconstants.h"
%include "ksocore.h"
%include "ksoscillator.h"
%include "lfo.h"
%include "lfocore.h"
%include "limiter.h"
%include "linearegcore.h"
%include "mellotroncore.h"
%include "modmatrix.h"
%include "morphwtcore.h"
%include "noiseoscillator.h"
%include "oscillator.h"
%include "pcmlegacycore.h"
%include "pcmoscillator.h"
%include "pcmsample.h"
%include "readerwriterqueue.h"
%include "resonator.h"
%include "sequencer.h"
%include "sfxwtcore.h"
%include "sinetablesource.h"
%include "trace.h"
%include "vafiltercore.h"
//%include "vafilters.h"
%include "vaocore.h"
%include "vaoscillator.h"
%include "waveslicecore.h"
%include "wsoscillator.h"
%include "wtoscillator.h"
%include "wtsource.h"

%template(float_vector) std::vector<float>;
%template(double_vector) std::vector<double>;

%template(complex_float_vector) std::vector<std::complex<float>>;
%template(complex_double_vector) std::vector<std::complex<double>>;
