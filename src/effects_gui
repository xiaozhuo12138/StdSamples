#include <FL/Fl.H>
#include <FL/Fl_Window.H>
#include <FL/Fl_Button.H>
#include <FL/Fl_Dial.H>
#include <FL/Fl_Box.H>
#include <FL/Fl_Radio_Button.H>
//#include "Fl_Knob.hpp"

void rate_cb( Fl_Widget* o, void*  ) {
    Fl_Dial* b=(Fl_Dial*)o;
    float v = b->value();
    ce2L.SetRate(v);
    ce2R.SetRate(v);

    //b->resize(10,10,70,30); //redraw needed
    b->redraw();
}

void depth_cb( Fl_Widget* o, void*  ) {
    Fl_Dial* b=(Fl_Dial*)o;
    float v = b->value();
    ce2L.SetDepth(v);
    ce2R.SetDepth(v);

    //b->resize(80,10,70,30); //redraw needed
    b->redraw();
}

void feedback_cb( Fl_Widget* o, void*  ) {
    Fl_Dial* b=(Fl_Dial*)o;
    float v = b->value();
    ce2L.SetFeedback(v);
    ce2R.SetFeedback(v);

    //b->resize(150,10,70,30); //redraw needed
    b->redraw();
}

void mix_cb( Fl_Widget* o, void*  ) {
    Fl_Dial* b=(Fl_Dial*)o;
    float v = b->value();
    ce2L.SetMix(v);
    ce2R.SetMix(v);

    //b->resize(150+70,10,70,30); //redraw needed
    b->redraw();
}

void gain_cb( Fl_Widget* o, void*  ) {
    Fl_Dial* b=(Fl_Dial*)o;
    float v = b->value();
    //Gain = v;
    //b->resize(150+70,10,70,30); //redraw needed
    b->redraw();
}

void dist_cb( Fl_Widget* o, void*  ) {
    Fl_Dial* b=(Fl_Dial*)o;
    float v = b->value();
    //Distortion = v;
    //b->resize(150+70,10,70,30); //redraw needed
    b->redraw();
}

void cutoff_cb( Fl_Widget* o, void*  ) {
    Fl_Dial* b=(Fl_Dial*)o;
    float v = b->value();
    Fcutoff = v;
    //b->resize(150+70,10,70,30); //redraw needed
    b->redraw();
}

void q_cb( Fl_Widget* o, void*  ) {
    Fl_Dial* b=(Fl_Dial*)o;
    float v = b->value();
    Q = v;
    //b->resize(150+70,10,70,30); //redraw needed
    b->redraw();
}

void saw_cb( Fl_Widget* o, void*  ) {
    Fl_Radio_Button * b=(Fl_Radio_Button*)o;
    float v = b->value();
    wave = OT_SAW;
    //b->resize(150+70,10,70,30); //redraw needed
    b->redraw();
}

void square_cb( Fl_Widget* o, void*  ) {
    Fl_Radio_Button * b=(Fl_Radio_Button*)o;
    float v = b->value();
    wave = OT_SQUARE;
    //b->resize(150+70,10,70,30); //redraw needed
    b->redraw();
}

void triangle_cb( Fl_Widget* o, void*  ) {
    Fl_Radio_Button * b=(Fl_Radio_Button*)o;
    float v = b->value();
    wave = OT_TRIANGLE;
    //b->resize(150+70,10,70,30); //redraw needed
    b->redraw();
}

void sync_cb(Fl_Widget * o, void *) {
    Fl_Button * b=(Fl_Button*)o;
    hardSync = !hardSync;
    b->redraw();
}
//-------------------------------------------- 
void runfltk()
{
    Fl_Window win( 500,200,"Testing" );
    
    win.begin();
    
    Fl_Box box(270,10,70,1000);    

    Fl_Dial rate( 15, 10, 50, 30, "Rate") ;
    Fl_Dial depth( 85, 10, 50, 30, "Depth") ;
    Fl_Dial fb( 155, 10, 50, 30, "Feedback") ;
    Fl_Dial mix( 225, 10, 50, 30, "Mix") ;
    
    Fl_Dial freq( 15 + 60, 10+50, 60, 30, "Cutoff") ;
    Fl_Dial q( 15 + 120, 10+50, 60, 30, "Q") ;
    Fl_Dial dist( 15 + 180, 10+50, 60, 30, "Distortion") ;
    Fl_Dial gain( 15 + 240, 10+50, 60, 30, "Gain") ;

    Fl_Radio_Button saw(15,10+60,50,30,"Saw");
    Fl_Radio_Button square(15,40+60,50,30,"Square");
    Fl_Radio_Button triangle(15,70+60,50,30,"Triangle");

    Fl_Button sync(15,110+60,50,30,"Sync");

    
    rate.range(0,1);
    depth.range(0,1);
    fb.range(0,1);
    mix.range(0,1);
    freq.range(0,5);
    q.range(0.01,10);
    dist.range(-10.0,10.0);
    gain.range(-24,24);

    rate.callback( rate_cb );
    depth.callback( depth_cb );
    fb.callback( feedback_cb );
    mix.callback( mix_cb );
    freq.callback(cutoff_cb);
    q.callback(q_cb);    
    dist.callback(dist_cb);    
    saw.callback(saw_cb);
    square.callback(square_cb);    
    triangle.callback(triangle_cb);
    sync.callback(sync_cb);
    gain.callback(gain_cb);

    win.end();
    win.show();
    Fl::run();    
}
void* run(void * ptr)
{
    RunAudio();
    return NULL;
}
